# LUCID OPEN-API SERVER - SPEC-4 Open API Plane (Distroless)
# Professional OpenAPI service for Pi deployment with distroless security
# Multi-platform build for ARM64 Pi and AMD64 development
# LUCID-STRICT Mode: Enhanced security with minimal attack surface

# syntax=docker/dockerfile:1.7
FROM python:3.12-slim AS openapi-builder

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Open-API Server service for Lucid (Distroless)" \
      org.lucid.plane="open-api" \
      org.lucid.service="openapi-server" \
      org.lucid.stage="2" \
      org.lucid.expose="8081"

# Build-time environment for dependency installation
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies and create user
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        ca-certificates \
        netcat-traditional \
        jq \
        gosu \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && groupadd --gid 1000 lucid \
    && useradd --uid 1000 --gid lucid --shell /bin/bash --create-home lucid

# Set up application directory with Pi mount path reference
WORKDIR /mnt/myssd/Lucid/open-api/api
RUN chown -R lucid:lucid /mnt/myssd/Lucid/open-api/api

# Install OpenAPI-specific Python dependencies
RUN pip install --no-cache-dir \
        "uvicorn[standard]>=0.24.0" \
        "fastapi>=0.104.0" \
        "pydantic>=2.0.0" \
        "openapi-spec-validator>=0.6.0" \
        "jsonschema>=4.19.0" \
        "swagger-ui-bundle>=0.1.0" \
        "redoc>=2.1.0" \
        "httpx>=0.25.0" \
        "python-multipart>=0.0.6" \
        "aiofiles>=23.0.0"

# Copy requirements if it exists and install additional dependencies  
COPY requirements.txt* /mnt/myssd/Lucid/open-api/api/
RUN if [ -f requirements.txt ]; then pip install --no-cache-dir -r requirements.txt; fi

# Copy application code with Pi mount structure
COPY --chown=lucid:lucid app/ /mnt/myssd/Lucid/open-api/api/app/

# Create OpenAPI-specific directories
RUN mkdir -p /var/lib/openapi /var/log/lucid/openapi \
    && chown -R lucid:lucid /var/lib/openapi /var/log/lucid/openapi

# Stage 2: Distroless runtime with Python and OpenAPI dependencies
FROM gcr.io/distroless/python3-debian12:latest

# Metadata for runtime container
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Open-API Server service for Lucid (Distroless Runtime)" \
      org.lucid.plane="open-api" \
      org.lucid.service="openapi-server" \
      org.lucid.stage="2" \
      org.lucid.expose="8081"

# Copy Python installation and packages from builder
COPY --from=openapi-builder /usr/local/lib/python3.12 /usr/local/lib/python3.12
COPY --from=openapi-builder /usr/local/bin/python3.12 /usr/local/bin/python3.12
COPY --from=openapi-builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn

# Copy system dependencies for OpenAPI operations
COPY --from=openapi-builder /usr/bin/curl /usr/bin/curl
COPY --from=openapi-builder /bin/nc /bin/nc
COPY --from=openapi-builder /usr/bin/jq /usr/bin/jq
COPY --from=openapi-builder /usr/sbin/gosu /usr/sbin/gosu

# Copy required dynamic libraries (architecture-specific)
COPY --from=openapi-builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=openapi-builder /lib/*-linux-*/libssl.so.3 /lib/
COPY --from=openapi-builder /lib/*-linux-*/libcrypto.so.3 /lib/
COPY --from=openapi-builder /lib/*-linux-*/libz.so.1 /lib/
COPY --from=openapi-builder /lib/*-linux-*/liblzma.so.5 /lib/
COPY --from=openapi-builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=openapi-builder /lib*/ld-linux-*.so.2 /lib64/

# Copy user and group information
COPY --from=openapi-builder /etc/passwd /etc/passwd
COPY --from=openapi-builder /etc/group /etc/group

# Copy CA certificates for external API communication
COPY --from=openapi-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Copy application with Pi mount structure and proper ownership
COPY --from=openapi-builder --chown=lucid:lucid /mnt/myssd/Lucid/open-api/api /mnt/myssd/Lucid/open-api/api
COPY --from=openapi-builder --chown=lucid:lucid /var/lib/openapi /var/lib/openapi
COPY --from=openapi-builder --chown=lucid:lucid /var/log/lucid/openapi /var/log/lucid/openapi

# Runtime environment for OpenAPI service
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/mnt/myssd/Lucid/open-api/api \
    API_HOST=0.0.0.0 \
    API_PORT=8081 \
    UVICORN_WORKERS=1 \
    OPENAPI_DATA_DIR=/var/lib/openapi

# Security and runtime configuration
EXPOSE 8081
USER lucid
WORKDIR /mnt/myssd/Lucid/open-api/api

# Default command for OpenAPI service
ENTRYPOINT ["/usr/local/bin/python3.12", "-m", "uvicorn", "app.main:app"]
CMD ["--host", "0.0.0.0", "--port", "8081", "--workers", "1"]