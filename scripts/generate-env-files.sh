#!/bin/bash

# Lucid Environment File Generator
# Generates all required .env files for the Lucid project
# Based on path_plan.md and distroless design concept

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Project paths from path_plan.md
PROJECT_ROOT="/mnt/myssd/Lucid/Lucid"
ENV_DIR="${PROJECT_ROOT}/configs/environment"

echo -e "${BLUE}🔧 Lucid Environment File Generator${NC}"
echo -e "${BLUE}====================================${NC}"

# Create environment directory if it doesn't exist
mkdir -p "${ENV_DIR}"

# Generate secure random values
JWT_SECRET=$(openssl rand -base64 64 | tr -d '\n')
ENCRYPTION_KEY=$(openssl rand -base64 32 | tr -d '\n')
TOR_PASSWORD=$(openssl rand -base64 32 | tr -d '\n')
MONGODB_PASSWORD=$(openssl rand -base64 32 | tr -d '\n')
REDIS_PASSWORD=$(openssl rand -base64 32 | tr -d '\n')
NODE_PRIVATE_KEY=$(openssl rand -hex 32)
NODE_ADDRESS="T"$(openssl rand -hex 20)

echo -e "${GREEN}✅ Generated secure random values${NC}"

# .env.authentication
cat > "${ENV_DIR}/.env.authentication" << EOF
# Authentication Service Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Service Configuration
AUTH_SERVICE_HOST=172.20.0.14
AUTH_SERVICE_PORT=8089
AUTH_SERVICE_URL=http://lucid-auth-service:8089

# Database Configuration
MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_auth?authSource=admin
MONGODB_DATABASE=lucid_auth
MONGODB_PASSWORD=${MONGODB_PASSWORD}

# Redis Configuration
REDIS_URL=redis://lucid-redis:6379/1
REDIS_PASSWORD=${REDIS_PASSWORD}

# JWT Configuration
JWT_SECRET_KEY=${JWT_SECRET}
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=15
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
JWT_ISSUER=lucid-auth-service
JWT_AUDIENCE=lucid-system

# Security Configuration
ENCRYPTION_KEY=${ENCRYPTION_KEY}
BCRYPT_ROUNDS=12
SESSION_TIMEOUT=1800
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION=900

# Hardware Wallet Configuration
HARDWARE_WALLET_ENABLED=true
HARDWARE_WALLET_TIMEOUT=30
HARDWARE_WALLET_RETRY_ATTEMPTS=3

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST_SIZE=100

# CORS Configuration
CORS_ORIGINS=*
CORS_CREDENTIALS=true
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=*

# Health Check
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=/var/log/lucid/auth-service.log

# Monitoring
METRICS_ENABLED=true
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9091
EOF

# .env.authentication-service-distroless
cat > "${ENV_DIR}/.env.authentication-service-distroless" << EOF
# Distroless Authentication Service Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Distroless Specific Configuration
DISTROLESS_ENABLED=true
DISTROLESS_USER=65532:65532
DISTROLESS_SHELL=/bin/false
DISTROLESS_BASE_IMAGE=gcr.io/distroless/python3-debian12

# Service Configuration
AUTH_SERVICE_HOST=172.20.0.14
AUTH_SERVICE_PORT=8089
AUTH_SERVICE_URL=http://lucid-auth-service:8089

# Database Configuration
MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_auth?authSource=admin
MONGODB_DATABASE=lucid_auth
MONGODB_PASSWORD=${MONGODB_PASSWORD}

# Redis Configuration
REDIS_URL=redis://lucid-redis:6379/1
REDIS_PASSWORD=${REDIS_PASSWORD}

# JWT Configuration
JWT_SECRET_KEY=${JWT_SECRET}
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=15
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Security Configuration
ENCRYPTION_KEY=${ENCRYPTION_KEY}
BCRYPT_ROUNDS=12
SESSION_TIMEOUT=1800

# Distroless Security
SECURITY_CONTEXT=distroless
NON_ROOT_USER=65532
READ_ONLY_FILESYSTEM=true
DROP_CAPABILITIES=ALL
NO_NEW_PRIVILEGES=true

# Minimal Dependencies
MINIMAL_DEPENDENCIES=true
PYTHON_PATH=/usr/local/lib/python3.11/site-packages
PYTHON_UNBUFFERED=1
PYTHON_DONT_WRITE_BYTECODE=1

# Health Check (Distroless Compatible)
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_ENDPOINT=/health
HEALTH_CHECK_TIMEOUT=5

# Logging (Distroless Compatible)
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_OUTPUT=stdout
EOF

# .env.tor-proxy
cat > "${ENV_DIR}/.env.tor-proxy" << EOF
# Tor Proxy Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Tor Service Configuration
TOR_ENABLED=true
TOR_SOCKS_PORT=9050
TOR_CONTROL_PORT=9051
TOR_HTTP_TUNNEL_PORT=8118
TOR_DNS_PORT=5353

# Tor Network Configuration
TOR_NETWORK=mainnet
TOR_BRIDGE_MODE=false
TOR_OBFS4_ENABLED=true
TOR_MEEK_ENABLED=false

# Tor Authentication
TOR_PASSWORD=${TOR_PASSWORD}
TOR_HASHED_PASSWORD=$(echo -n "${TOR_PASSWORD}" | tor --hash-password | grep -o '[0-9A-Fa-f]\{60\}')

# Tor Circuit Configuration
TOR_CIRCUIT_BUILD_TIMEOUT=60
TOR_CIRCUIT_IDLE_TIMEOUT=600
TOR_MAX_CIRCUITS=8
TOR_MIN_CIRCUITS=2

# Tor Exit Policy
TOR_EXIT_POLICY=reject *:25,reject *:135-139,reject *:445,reject *:563,reject *:1214,reject *:4661-4666,reject *:6346-6429,reject *:6699,reject *:6881-6999,accept *:*

# Tor Logging
TOR_LOG_LEVEL=notice
TOR_LOG_FILE=/var/log/tor/tor.log
TOR_LOG_ROTATE=true
TOR_LOG_MAX_SIZE=100MB
TOR_LOG_MAX_FILES=5

# Tor Security
TOR_SAFECOOKIE=true
TOR_COOKIE_AUTHENTICATION=true
TOR_COOKIE_AUTH_FILE=/var/lib/tor/control_auth_cookie

# Tor Hidden Services (if needed)
TOR_HIDDEN_SERVICES_ENABLED=false
TOR_HIDDEN_SERVICE_DIR=/var/lib/tor/hidden_service
TOR_HIDDEN_SERVICE_PORT=80

# Tor Client Configuration
TOR_CLIENT_ONLY=true
TOR_DISABLE_NETWORK=false
TOR_STRICT_NODES=false
TOR_EXIT_NODES=
TOR_ENTRY_NODES=
TOR_MIDDLE_NODES=

# Tor Performance
TOR_BANDWIDTH_RATE=1MB
TOR_BANDWIDTH_BURST=2MB
TOR_CONNECTION_PADDING=true
TOR_REDUCED_CIRCUIT_PADDING=false

# Tor DNS
TOR_DNS_PORT=5353
TOR_DNS_LISTEN_ADDRESS=127.0.0.1
TOR_DNS_CACHE_SIZE=1000
TOR_DNS_CACHE_TTL=300

# Health Check
TOR_HEALTH_CHECK_ENABLED=true
TOR_HEALTH_CHECK_INTERVAL=30
TOR_HEALTH_CHECK_TIMEOUT=10
EOF

# .env.tunnel-tools
cat > "${ENV_DIR}/.env.tunnel-tools" << EOF
# Tunnel Tools Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# SSH Tunnel Configuration
SSH_TUNNEL_ENABLED=true
SSH_HOST=pickme@192.168.0.75
SSH_PORT=22
SSH_KEY_PATH=/root/.ssh/id_rsa
SSH_TIMEOUT=30
SSH_RETRY_ATTEMPTS=3

# Local Tunnel Ports
TUNNEL_LOCAL_PORT_START=9000
TUNNEL_LOCAL_PORT_END=9100
TUNNEL_MAX_CONNECTIONS=10

# Remote Tunnel Configuration
TUNNEL_REMOTE_HOST=172.20.0.10
TUNNEL_REMOTE_PORT_START=8080
TUNNEL_REMOTE_PORT_END=8099

# Tunnel Authentication
TUNNEL_AUTH_ENABLED=true
TUNNEL_AUTH_TOKEN=${JWT_SECRET}
TUNNEL_AUTH_TIMEOUT=3600

# Tunnel Encryption
TUNNEL_ENCRYPTION_ENABLED=true
TUNNEL_ENCRYPTION_KEY=${ENCRYPTION_KEY}
TUNNEL_ENCRYPTION_ALGORITHM=AES-256-GCM

# Tunnel Compression
TUNNEL_COMPRESSION_ENABLED=true
TUNNEL_COMPRESSION_LEVEL=6
TUNNEL_COMPRESSION_ALGORITHM=gzip

# Tunnel Monitoring
TUNNEL_MONITORING_ENABLED=true
TUNNEL_MONITORING_INTERVAL=30
TUNNEL_MONITORING_TIMEOUT=10
TUNNEL_MONITORING_LOG_LEVEL=INFO

# Tunnel Health Check
TUNNEL_HEALTH_CHECK_ENABLED=true
TUNNEL_HEALTH_CHECK_INTERVAL=60
TUNNEL_HEALTH_CHECK_TIMEOUT=15

# Tunnel Auto-Reconnect
TUNNEL_AUTO_RECONNECT=true
TUNNEL_AUTO_RECONNECT_DELAY=5
TUNNEL_AUTO_RECONNECT_MAX_ATTEMPTS=10

# Tunnel Logging
TUNNEL_LOG_LEVEL=INFO
TUNNEL_LOG_FORMAT=json
TUNNEL_LOG_FILE=/var/log/lucid/tunnel-tools.log
TUNNEL_LOG_ROTATE=true
TUNNEL_LOG_MAX_SIZE=50MB
TUNNEL_LOG_MAX_FILES=5

# Tunnel Security
TUNNEL_SECURITY_ENABLED=true
TUNNEL_FIREWALL_ENABLED=true
TUNNEL_IP_WHITELIST=192.168.0.0/16,172.20.0.0/16
TUNNEL_RATE_LIMIT=100
TUNNEL_RATE_LIMIT_WINDOW=60
EOF

# .env.server-tools
cat > "${ENV_DIR}/.env.server-tools" << EOF
# Server Tools Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Server Management
SERVER_MANAGEMENT_ENABLED=true
SERVER_HOST=192.168.0.75
SERVER_USER=pickme
SERVER_SSH_PORT=22
SERVER_SSH_KEY_PATH=/root/.ssh/id_rsa

# System Monitoring
SYSTEM_MONITORING_ENABLED=true
SYSTEM_MONITORING_INTERVAL=30
SYSTEM_CPU_THRESHOLD=80
SYSTEM_MEMORY_THRESHOLD=85
SYSTEM_DISK_THRESHOLD=90
SYSTEM_NETWORK_THRESHOLD=1000

# Process Management
PROCESS_MANAGEMENT_ENABLED=true
PROCESS_MONITORING_INTERVAL=60
PROCESS_AUTO_RESTART=true
PROCESS_RESTART_DELAY=5
PROCESS_MAX_RESTART_ATTEMPTS=3

# Log Management
LOG_MANAGEMENT_ENABLED=true
LOG_ROTATION_ENABLED=true
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10
LOG_COMPRESSION_ENABLED=true
LOG_CLEANUP_INTERVAL=86400

# Backup Management
BACKUP_MANAGEMENT_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=30
BACKUP_COMPRESSION_ENABLED=true
BACKUP_ENCRYPTION_ENABLED=true
BACKUP_ENCRYPTION_KEY=${ENCRYPTION_KEY}

# Security Management
SECURITY_MANAGEMENT_ENABLED=true
SECURITY_SCAN_INTERVAL=3600
SECURITY_UPDATE_CHECK=true
SECURITY_FIREWALL_ENABLED=true
SECURITY_ANTIVIRUS_ENABLED=false

# Network Management
NETWORK_MANAGEMENT_ENABLED=true
NETWORK_MONITORING_ENABLED=true
NETWORK_BANDWIDTH_MONITORING=true
NETWORK_LATENCY_MONITORING=true
NETWORK_PACKET_LOSS_MONITORING=true

# Docker Management
DOCKER_MANAGEMENT_ENABLED=true
DOCKER_CLEANUP_ENABLED=true
DOCKER_CLEANUP_INTERVAL=86400
DOCKER_IMAGE_CLEANUP=true
DOCKER_CONTAINER_CLEANUP=true
DOCKER_VOLUME_CLEANUP=true

# Health Check
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRY_ATTEMPTS=3

# Alerting
ALERTING_ENABLED=true
ALERT_EMAIL_ENABLED=false
ALERT_SLACK_ENABLED=false
ALERT_WEBHOOK_ENABLED=true
ALERT_WEBHOOK_URL=http://lucid-admin-interface:8083/alerts

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=/var/log/lucid/server-tools.log
LOG_ROTATE=true
LOG_MAX_SIZE=50MB
LOG_MAX_FILES=5
EOF

# .env.openapi-gateway
cat > "${ENV_DIR}/.env.openapi-gateway" << EOF
# OpenAPI Gateway Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Gateway Configuration
GATEWAY_HOST=172.20.0.10
GATEWAY_PORT=8080
GATEWAY_HTTPS_PORT=8081
GATEWAY_URL=http://lucid-api-gateway:8080
GATEWAY_HTTPS_URL=https://lucid-api-gateway:8081

# OpenAPI Configuration
OPENAPI_ENABLED=true
OPENAPI_VERSION=3.0.3
OPENAPI_TITLE=Lucid API Gateway
OPENAPI_DESCRIPTION=Distributed Session Management and Blockchain Integration API
OPENAPI_VERSION_NUMBER=0.1.0
OPENAPI_CONTACT_NAME=Lucid Development Team
OPENAPI_CONTACT_EMAIL=dev@lucid.network
OPENAPI_LICENSE_NAME=MIT
OPENAPI_LICENSE_URL=https://opensource.org/licenses/MIT

# API Documentation
API_DOCS_ENABLED=true
API_DOCS_PATH=/docs
API_DOCS_REDOC_PATH=/redoc
API_DOCS_SWAGGER_UI_PATH=/swagger-ui
API_DOCS_OPENAPI_JSON_PATH=/openapi.json

# Authentication
AUTH_ENABLED=true
AUTH_TYPE=jwt
AUTH_HEADER=Authorization
AUTH_HEADER_PREFIX=Bearer
AUTH_JWT_SECRET=${JWT_SECRET}
AUTH_JWT_ALGORITHM=HS256
AUTH_JWT_EXPIRE_MINUTES=15

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=1000
RATE_LIMIT_BURST_SIZE=2000
RATE_LIMIT_STORAGE=redis
RATE_LIMIT_REDIS_URL=redis://lucid-redis:6379/2

# CORS Configuration
CORS_ENABLED=true
CORS_ORIGINS=*
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH
CORS_HEADERS=*
CORS_CREDENTIALS=true
CORS_MAX_AGE=3600

# SSL/TLS Configuration
SSL_ENABLED=true
SSL_CERT_PATH=/etc/ssl/certs/lucid-api-gateway.crt
SSL_KEY_PATH=/etc/ssl/private/lucid-api-gateway.key
SSL_CA_PATH=/etc/ssl/certs/lucid-ca.crt
SSL_VERIFY_CLIENT=false

# Load Balancing
LOAD_BALANCING_ENABLED=true
LOAD_BALANCING_ALGORITHM=round_robin
LOAD_BALANCING_HEALTH_CHECK=true
LOAD_BALANCING_HEALTH_CHECK_INTERVAL=30

# Circuit Breaker
CIRCUIT_BREAKER_ENABLED=true
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_RECOVERY_TIMEOUT=30
CIRCUIT_BREAKER_HALF_OPEN_MAX_CALLS=3

# Monitoring
MONITORING_ENABLED=true
METRICS_ENABLED=true
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9092
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=/var/log/lucid/openapi-gateway.log
LOG_ACCESS_ENABLED=true
LOG_ACCESS_FORMAT=combined
LOG_ACCESS_FILE=/var/log/lucid/openapi-gateway-access.log

# Security
SECURITY_HEADERS_ENABLED=true
SECURITY_HEADERS_HSTS_ENABLED=true
SECURITY_HEADERS_CSP_ENABLED=true
SECURITY_HEADERS_XSS_PROTECTION=true
SECURITY_HEADERS_CONTENT_TYPE_NOSNIFF=true
SECURITY_HEADERS_FRAME_OPTIONS=DENY
EOF

# .env.openapi-server
cat > "${ENV_DIR}/.env.openapi-server" << EOF
# OpenAPI Server Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Server Configuration
SERVER_HOST=0.0.0.0
SERVER_PORT=8082
SERVER_WORKERS=4
SERVER_WORKER_CLASS=uvicorn.workers.UvicornWorker
SERVER_WORKER_CONNECTIONS=1000
SERVER_MAX_REQUESTS=1000
SERVER_MAX_REQUESTS_JITTER=100
SERVER_TIMEOUT=30
SERVER_KEEPALIVE=2

# OpenAPI Configuration
OPENAPI_ENABLED=true
OPENAPI_VERSION=3.0.3
OPENAPI_TITLE=Lucid API Server
OPENAPI_DESCRIPTION=Core API Server for Lucid Distributed System
OPENAPI_VERSION_NUMBER=0.1.0
OPENAPI_CONTACT_NAME=Lucid Development Team
OPENAPI_CONTACT_EMAIL=dev@lucid.network
OPENAPI_LICENSE_NAME=MIT
OPENAPI_LICENSE_URL=https://opensource.org/licenses/MIT

# API Documentation
API_DOCS_ENABLED=true
API_DOCS_PATH=/docs
API_DOCS_REDOC_PATH=/redoc
API_DOCS_SWAGGER_UI_PATH=/swagger-ui
API_DOCS_OPENAPI_JSON_PATH=/openapi.json

# Database Configuration
DATABASE_URL=postgresql://lucid:${MONGODB_PASSWORD}@lucid-database:5432/lucid_api
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600

# Redis Configuration
REDIS_URL=redis://lucid-redis:6379/3
REDIS_PASSWORD=${REDIS_PASSWORD}
REDIS_POOL_SIZE=20
REDIS_MAX_CONNECTIONS=100
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# Authentication
AUTH_ENABLED=true
AUTH_TYPE=jwt
AUTH_JWT_SECRET=${JWT_SECRET}
AUTH_JWT_ALGORITHM=HS256
AUTH_JWT_EXPIRE_MINUTES=15
AUTH_JWT_REFRESH_EXPIRE_DAYS=7

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=500
RATE_LIMIT_BURST_SIZE=1000
RATE_LIMIT_STORAGE=redis

# CORS Configuration
CORS_ENABLED=true
CORS_ORIGINS=*
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH
CORS_HEADERS=*
CORS_CREDENTIALS=true
CORS_MAX_AGE=3600

# Security
SECURITY_ENABLED=true
SECURITY_HEADERS_ENABLED=true
SECURITY_HEADERS_HSTS_ENABLED=true
SECURITY_HEADERS_CSP_ENABLED=true
SECURITY_HEADERS_XSS_PROTECTION=true
SECURITY_HEADERS_CONTENT_TYPE_NOSNIFF=true
SECURITY_HEADERS_FRAME_OPTIONS=DENY

# Encryption
ENCRYPTION_ENABLED=true
ENCRYPTION_KEY=${ENCRYPTION_KEY}
ENCRYPTION_ALGORITHM=AES-256-GCM

# Monitoring
MONITORING_ENABLED=true
METRICS_ENABLED=true
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9093
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=/var/log/lucid/openapi-server.log
LOG_ACCESS_ENABLED=true
LOG_ACCESS_FORMAT=combined
LOG_ACCESS_FILE=/var/log/lucid/openapi-server-access.log
LOG_ROTATE=true
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=5

# Performance
PERFORMANCE_MONITORING_ENABLED=true
PERFORMANCE_SLOW_QUERY_THRESHOLD=1000
PERFORMANCE_MEMORY_THRESHOLD=80
PERFORMANCE_CPU_THRESHOLD=80

# Cache Configuration
CACHE_ENABLED=true
CACHE_BACKEND=redis
CACHE_TTL=3600
CACHE_MAX_SIZE=1000
CACHE_CLEANUP_INTERVAL=300
EOF

# .env.development
cat > "${ENV_DIR}/.env.development" << EOF
# Development Environment Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Environment
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=DEBUG
LOG_FORMAT=json

# Development Settings
DEVELOPMENT_MODE=true
HOT_RELOAD=true
AUTO_RESTART=true
DEBUG_TOOLBAR_ENABLED=true
PROFILING_ENABLED=true

# Database Configuration (Development)
MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_dev?authSource=admin
MONGODB_DATABASE=lucid_dev
REDIS_URL=redis://lucid-redis:6379/4
ELASTICSEARCH_URI=http://lucid-elasticsearch:9200

# API Configuration
API_GATEWAY_URL=http://localhost:8080
API_SERVER_URL=http://localhost:8082
BLOCKCHAIN_ENGINE_URL=http://localhost:8084
AUTH_SERVICE_URL=http://localhost:8089

# Development Ports
API_GATEWAY_PORT=8080
API_SERVER_PORT=8082
BLOCKCHAIN_ENGINE_PORT=8084
AUTH_SERVICE_PORT=8089
ADMIN_INTERFACE_PORT=8083

# Development Security (Relaxed)
JWT_SECRET_KEY=${JWT_SECRET}
ENCRYPTION_KEY=${ENCRYPTION_KEY}
SSL_ENABLED=false
CORS_ORIGINS=*
CORS_CREDENTIALS=true

# Development Monitoring
MONITORING_ENABLED=true
METRICS_ENABLED=true
PROMETHEUS_ENABLED=true
GRAFANA_ENABLED=true
HEALTH_CHECK_ENABLED=true

# Development Logging
LOG_LEVEL=DEBUG
LOG_FORMAT=json
LOG_FILE=/var/log/lucid/development.log
LOG_CONSOLE=true
LOG_COLOR=true

# Development Features
FEATURE_FLAGS_ENABLED=true
FEATURE_DEBUG_MODE=true
FEATURE_MOCK_SERVICES=true
FEATURE_TEST_DATA=true

# Development Database
DB_MIGRATIONS_ENABLED=true
DB_SEED_ENABLED=true
DB_BACKUP_ENABLED=false

# Development Testing
TESTING_ENABLED=true
TEST_DATABASE_URL=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_test?authSource=admin
TEST_REDIS_URL=redis://lucid-redis:6379/5
TEST_ELASTICSEARCH_URI=http://lucid-elasticsearch:9200

# Development Performance
PERFORMANCE_MONITORING=true
SLOW_QUERY_LOGGING=true
MEMORY_PROFILING=true
CPU_PROFILING=true
EOF

# .env.staging
cat > "${ENV_DIR}/.env.staging" << EOF
# Staging Environment Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Environment
ENVIRONMENT=staging
DEBUG=false
LOG_LEVEL=INFO
LOG_FORMAT=json

# Staging Settings
STAGING_MODE=true
HOT_RELOAD=false
AUTO_RESTART=false
DEBUG_TOOLBAR_ENABLED=false
PROFILING_ENABLED=false

# Database Configuration (Staging)
MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_staging?authSource=admin
MONGODB_DATABASE=lucid_staging
REDIS_URL=redis://lucid-redis:6379/6
ELASTICSEARCH_URI=http://lucid-elasticsearch:9200

# API Configuration
API_GATEWAY_URL=http://lucid-api-gateway:8080
API_SERVER_URL=http://lucid-api-server:8082
BLOCKCHAIN_ENGINE_URL=http://lucid-blockchain-engine:8084
AUTH_SERVICE_URL=http://lucid-auth-service:8089

# Staging Ports
API_GATEWAY_PORT=8080
API_SERVER_PORT=8082
BLOCKCHAIN_ENGINE_PORT=8084
AUTH_SERVICE_PORT=8089
ADMIN_INTERFACE_PORT=8083

# Staging Security
JWT_SECRET_KEY=${JWT_SECRET}
ENCRYPTION_KEY=${ENCRYPTION_KEY}
SSL_ENABLED=true
CORS_ORIGINS=https://staging.lucid.network
CORS_CREDENTIALS=true

# Staging Monitoring
MONITORING_ENABLED=true
METRICS_ENABLED=true
PROMETHEUS_ENABLED=true
GRAFANA_ENABLED=true
HEALTH_CHECK_ENABLED=true

# Staging Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=/var/log/lucid/staging.log
LOG_CONSOLE=false
LOG_COLOR=false

# Staging Features
FEATURE_FLAGS_ENABLED=true
FEATURE_DEBUG_MODE=false
FEATURE_MOCK_SERVICES=false
FEATURE_TEST_DATA=false

# Staging Database
DB_MIGRATIONS_ENABLED=true
DB_SEED_ENABLED=false
DB_BACKUP_ENABLED=true

# Staging Testing
TESTING_ENABLED=true
TEST_DATABASE_URL=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_staging_test?authSource=admin
TEST_REDIS_URL=redis://lucid-redis:6379/7
TEST_ELASTICSEARCH_URI=http://lucid-elasticsearch:9200

# Staging Performance
PERFORMANCE_MONITORING=true
SLOW_QUERY_LOGGING=true
MEMORY_PROFILING=false
CPU_PROFILING=false
EOF

# .env.production
cat > "${ENV_DIR}/.env.production" << EOF
# Production Environment Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Environment
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=WARNING
LOG_FORMAT=json

# Production Settings
PRODUCTION_MODE=true
HOT_RELOAD=false
AUTO_RESTART=false
DEBUG_TOOLBAR_ENABLED=false
PROFILING_ENABLED=false

# Database Configuration (Production)
MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_prod?authSource=admin
MONGODB_DATABASE=lucid_prod
REDIS_URL=redis://lucid-redis:6379/8
ELASTICSEARCH_URI=http://lucid-elasticsearch:9200

# API Configuration
API_GATEWAY_URL=http://lucid-api-gateway:8080
API_SERVER_URL=http://lucid-api-server:8082
BLOCKCHAIN_ENGINE_URL=http://lucid-blockchain-engine:8084
AUTH_SERVICE_URL=http://lucid-auth-service:8089

# Production Ports
API_GATEWAY_PORT=8080
API_SERVER_PORT=8082
BLOCKCHAIN_ENGINE_PORT=8084
AUTH_SERVICE_PORT=8089
ADMIN_INTERFACE_PORT=8083

# Production Security
JWT_SECRET_KEY=${JWT_SECRET}
ENCRYPTION_KEY=${ENCRYPTION_KEY}
SSL_ENABLED=true
CORS_ORIGINS=https://lucid.network,https://api.lucid.network
CORS_CREDENTIALS=true

# Production Monitoring
MONITORING_ENABLED=true
METRICS_ENABLED=true
PROMETHEUS_ENABLED=true
GRAFANA_ENABLED=true
HEALTH_CHECK_ENABLED=true

# Production Logging
LOG_LEVEL=WARNING
LOG_FORMAT=json
LOG_FILE=/var/log/lucid/production.log
LOG_CONSOLE=false
LOG_COLOR=false

# Production Features
FEATURE_FLAGS_ENABLED=false
FEATURE_DEBUG_MODE=false
FEATURE_MOCK_SERVICES=false
FEATURE_TEST_DATA=false

# Production Database
DB_MIGRATIONS_ENABLED=false
DB_SEED_ENABLED=false
DB_BACKUP_ENABLED=true

# Production Testing
TESTING_ENABLED=false
TEST_DATABASE_URL=
TEST_REDIS_URL=
TEST_ELASTICSEARCH_URI=

# Production Performance
PERFORMANCE_MONITORING=true
SLOW_QUERY_LOGGING=false
MEMORY_PROFILING=false
CPU_PROFILING=false

# Production Security Hardening
SECURITY_HEADERS_ENABLED=true
SECURITY_HEADERS_HSTS_ENABLED=true
SECURITY_HEADERS_CSP_ENABLED=true
SECURITY_HEADERS_XSS_PROTECTION=true
SECURITY_HEADERS_CONTENT_TYPE_NOSNIFF=true
SECURITY_HEADERS_FRAME_OPTIONS=DENY

# Production Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST_SIZE=200
RATE_LIMIT_STORAGE=redis

# Production Backup
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=30
BACKUP_COMPRESSION_ENABLED=true
BACKUP_ENCRYPTION_ENABLED=true
BACKUP_ENCRYPTION_KEY=${ENCRYPTION_KEY}
EOF

# .env.test
cat > "${ENV_DIR}/.env.test" << EOF
# Test Environment Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Environment
ENVIRONMENT=test
DEBUG=true
LOG_LEVEL=DEBUG
LOG_FORMAT=json

# Test Settings
TEST_MODE=true
HOT_RELOAD=false
AUTO_RESTART=false
DEBUG_TOOLBAR_ENABLED=false
PROFILING_ENABLED=false

# Database Configuration (Test)
MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_test?authSource=admin
MONGODB_DATABASE=lucid_test
REDIS_URL=redis://lucid-redis:6379/9
ELASTICSEARCH_URI=http://lucid-elasticsearch:9200

# API Configuration
API_GATEWAY_URL=http://localhost:8080
API_SERVER_URL=http://localhost:8082
BLOCKCHAIN_ENGINE_URL=http://localhost:8084
AUTH_SERVICE_URL=http://localhost:8089

# Test Ports
API_GATEWAY_PORT=8080
API_SERVER_PORT=8082
BLOCKCHAIN_ENGINE_PORT=8084
AUTH_SERVICE_PORT=8089
ADMIN_INTERFACE_PORT=8083

# Test Security (Relaxed)
JWT_SECRET_KEY=${JWT_SECRET}
ENCRYPTION_KEY=${ENCRYPTION_KEY}
SSL_ENABLED=false
CORS_ORIGINS=*
CORS_CREDENTIALS=true

# Test Monitoring
MONITORING_ENABLED=false
METRICS_ENABLED=false
PROMETHEUS_ENABLED=false
GRAFANA_ENABLED=false
HEALTH_CHECK_ENABLED=true

# Test Logging
LOG_LEVEL=DEBUG
LOG_FORMAT=json
LOG_FILE=/var/log/lucid/test.log
LOG_CONSOLE=true
LOG_COLOR=true

# Test Features
FEATURE_FLAGS_ENABLED=true
FEATURE_DEBUG_MODE=true
FEATURE_MOCK_SERVICES=true
FEATURE_TEST_DATA=true

# Test Database
DB_MIGRATIONS_ENABLED=true
DB_SEED_ENABLED=true
DB_BACKUP_ENABLED=false

# Test Configuration
TESTING_ENABLED=true
TEST_DATABASE_URL=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_test?authSource=admin
TEST_REDIS_URL=redis://lucid-redis:6379/9
TEST_ELASTICSEARCH_URI=http://lucid-elasticsearch:9200

# Test Performance
PERFORMANCE_MONITORING=false
SLOW_QUERY_LOGGING=false
MEMORY_PROFILING=false
CPU_PROFILING=false

# Test Timeouts
TEST_TIMEOUT=30
TEST_RETRY_ATTEMPTS=3
TEST_RETRY_DELAY=1

# Test Data
TEST_DATA_ENABLED=true
TEST_DATA_CLEANUP=true
TEST_DATA_CLEANUP_INTERVAL=300
EOF

# .env.pi
cat > "${ENV_DIR}/.env.pi" << EOF
# Raspberry Pi Deployment Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Pi Environment
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO
LOG_FORMAT=json

# Pi Hardware Configuration
PI_USER=pickme
PI_HOST=192.168.0.75
PI_SSH_PORT=22
PI_SSH_KEY_PATH=/root/.ssh/id_rsa
PI_ARCHITECTURE=arm64
PI_PLATFORM=linux/arm64

# Pi Network Configuration
PI_NETWORK=lucid-pi-network
PI_SUBNET=172.20.0.0/16
PI_GATEWAY=172.20.0.1
PI_DNS=8.8.8.8,8.8.4.4

# Pi Service Configuration
API_GATEWAY_HOST=172.20.0.10
API_GATEWAY_PORT=8080
API_SERVER_HOST=172.20.0.10
API_SERVER_PORT=8082
BLOCKCHAIN_ENGINE_HOST=172.20.0.15
BLOCKCHAIN_ENGINE_PORT=8084
AUTH_SERVICE_HOST=172.20.0.14
AUTH_SERVICE_PORT=8089

# Pi Database Configuration
MONGODB_HOST=172.20.0.11
MONGODB_PORT=27017
MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_pi?authSource=admin
MONGODB_DATABASE=lucid_pi
MONGODB_PASSWORD=${MONGODB_PASSWORD}

REDIS_HOST=172.20.0.12
REDIS_PORT=6379
REDIS_URL=redis://lucid-redis:6379/10
REDIS_PASSWORD=${REDIS_PASSWORD}

ELASTICSEARCH_HOST=172.20.0.13
ELASTICSEARCH_PORT=9200
ELASTICSEARCH_URI=http://lucid-elasticsearch:9200

# Pi Security Configuration
JWT_SECRET_KEY=${JWT_SECRET}
ENCRYPTION_KEY=${ENCRYPTION_KEY}
SSL_ENABLED=true
CORS_ORIGINS=*
CORS_CREDENTIALS=true

# Pi Hardware Features
HARDWARE_ACCELERATION=true
V4L2_ENABLED=true
GPU_ENABLED=false
RPI_GPIO_ENABLED=true
RPI_CAMERA_ENABLED=true
RPI_AUDIO_ENABLED=true

# Pi Performance
PERFORMANCE_MONITORING=true
CPU_MONITORING=true
MEMORY_MONITORING=true
DISK_MONITORING=true
NETWORK_MONITORING=true
TEMPERATURE_MONITORING=true

# Pi Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=/var/log/lucid/pi.log
LOG_ROTATE=true
LOG_MAX_SIZE=50MB
LOG_MAX_FILES=5

# Pi Backup
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=7
BACKUP_PATH=/mnt/myssd/Lucid/Lucid/backups
BACKUP_COMPRESSION_ENABLED=true
BACKUP_ENCRYPTION_ENABLED=true
BACKUP_ENCRYPTION_KEY=${ENCRYPTION_KEY}

# Pi Monitoring
MONITORING_ENABLED=true
METRICS_ENABLED=true
PROMETHEUS_ENABLED=true
GRAFANA_ENABLED=true
HEALTH_CHECK_ENABLED=true
ALERTING_ENABLED=true
ALERT_CPU_THRESHOLD=80
ALERT_MEMORY_THRESHOLD=85
ALERT_DISK_THRESHOLD=90
ALERT_TEMPERATURE_THRESHOLD=70

# Pi Docker Configuration
DOCKER_BUILDKIT=1
DOCKER_DEFAULT_PLATFORM=linux/arm64
COMPOSE_DOCKER_CLI_BUILD=1
LUCID_PLATFORM=arm64
LUCID_ARCHITECTURE=linux/arm64
LUCID_TARGET_PLATFORM=linux/arm64

# Pi Registry Configuration
DOCKER_REGISTRY=docker.io
DOCKER_NAMESPACE=pickme
DOCKER_TAG=latest-arm64

# Pi Data Paths
DATA_PATH=/mnt/myssd/Lucid/Lucid/data
LOGS_PATH=/mnt/myssd/Lucid/Lucid/logs
BACKUPS_PATH=/mnt/myssd/Lucid/Lucid/backups
CONFIGS_PATH=/mnt/myssd/Lucid/Lucid/configs
EOF

# .env.blockchain-api
cat > "${ENV_DIR}/.env.blockchain-api" << EOF
# Blockchain API Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Blockchain Service Configuration
BLOCKCHAIN_ENGINE_HOST=172.20.0.15
BLOCKCHAIN_ENGINE_PORT=8084
BLOCKCHAIN_ENGINE_URL=http://lucid-blockchain-engine:8084

# Blockchain Network Configuration
BLOCKCHAIN_NETWORK=lucid-mainnet
BLOCKCHAIN_CONSENSUS=PoOT
BLOCKCHAIN_BLOCK_INTERVAL=10
BLOCKCHAIN_BLOCK_SIZE=1048576
BLOCKCHAIN_MAX_TRANSACTIONS=1000

# Blockchain API Configuration
BLOCKCHAIN_API_ENABLED=true
BLOCKCHAIN_API_PORT=8084
BLOCKCHAIN_API_HOST=0.0.0.0
BLOCKCHAIN_API_WORKERS=4
BLOCKCHAIN_API_TIMEOUT=30

# Blockchain Database Configuration
BLOCKCHAIN_DB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_blockchain?authSource=admin
BLOCKCHAIN_DB_DATABASE=lucid_blockchain
BLOCKCHAIN_DB_PASSWORD=${MONGODB_PASSWORD}

# Blockchain Redis Configuration
BLOCKCHAIN_REDIS_URL=redis://lucid-redis:6379/11
BLOCKCHAIN_REDIS_PASSWORD=${REDIS_PASSWORD}
BLOCKCHAIN_REDIS_POOL_SIZE=20

# Blockchain Security Configuration
BLOCKCHAIN_JWT_SECRET=${JWT_SECRET}
BLOCKCHAIN_ENCRYPTION_KEY=${ENCRYPTION_KEY}
BLOCKCHAIN_SSL_ENABLED=true
BLOCKCHAIN_CORS_ORIGINS=*

# Blockchain Node Configuration
BLOCKCHAIN_NODE_ADDRESS=${NODE_ADDRESS}
BLOCKCHAIN_NODE_PRIVATE_KEY=${NODE_PRIVATE_KEY}
BLOCKCHAIN_NODE_PEER_PORT=8085
BLOCKCHAIN_NODE_DISCOVERY_ENABLED=true
BLOCKCHAIN_NODE_DISCOVERY_PORT=8086

# Blockchain Mining Configuration
BLOCKCHAIN_MINING_ENABLED=true
BLOCKCHAIN_MINING_DIFFICULTY=4
BLOCKCHAIN_MINING_REWARD=100
BLOCKCHAIN_MINING_POOL_SIZE=10

# Blockchain Transaction Configuration
BLOCKCHAIN_TRANSACTION_FEE=0.001
BLOCKCHAIN_TRANSACTION_TIMEOUT=300
BLOCKCHAIN_TRANSACTION_MAX_SIZE=1024
BLOCKCHAIN_TRANSACTION_SIGNATURE_ALGORITHM=ECDSA

# Blockchain Smart Contract Configuration
BLOCKCHAIN_SMART_CONTRACTS_ENABLED=true
BLOCKCHAIN_SMART_CONTRACT_GAS_LIMIT=1000000
BLOCKCHAIN_SMART_CONTRACT_GAS_PRICE=1
BLOCKCHAIN_SMART_CONTRACT_TIMEOUT=30

# Blockchain Anchoring Configuration
BLOCKCHAIN_ANCHORING_ENABLED=true
BLOCKCHAIN_ANCHORING_INTERVAL=3600
BLOCKCHAIN_ANCHORING_PROVIDER=TRON
BLOCKCHAIN_ANCHORING_TRON_API_KEY=${JWT_SECRET}
BLOCKCHAIN_ANCHORING_TRON_NETWORK=mainnet

# Blockchain Monitoring Configuration
BLOCKCHAIN_MONITORING_ENABLED=true
BLOCKCHAIN_METRICS_ENABLED=true
BLOCKCHAIN_PROMETHEUS_ENABLED=true
BLOCKCHAIN_PROMETHEUS_PORT=9094
BLOCKCHAIN_HEALTH_CHECK_ENABLED=true
BLOCKCHAIN_HEALTH_CHECK_INTERVAL=30

# Blockchain Logging Configuration
BLOCKCHAIN_LOG_LEVEL=INFO
BLOCKCHAIN_LOG_FORMAT=json
BLOCKCHAIN_LOG_FILE=/var/log/lucid/blockchain-api.log
BLOCKCHAIN_LOG_ROTATE=true
BLOCKCHAIN_LOG_MAX_SIZE=100MB
BLOCKCHAIN_LOG_MAX_FILES=5

# Blockchain Rate Limiting
BLOCKCHAIN_RATE_LIMIT_ENABLED=true
BLOCKCHAIN_RATE_LIMIT_REQUESTS_PER_MINUTE=1000
BLOCKCHAIN_RATE_LIMIT_BURST_SIZE=2000
BLOCKCHAIN_RATE_LIMIT_STORAGE=redis

# Blockchain Performance
BLOCKCHAIN_PERFORMANCE_MONITORING=true
BLOCKCHAIN_SLOW_QUERY_THRESHOLD=1000
BLOCKCHAIN_MEMORY_THRESHOLD=80
BLOCKCHAIN_CPU_THRESHOLD=80
BLOCKCHAIN_DISK_THRESHOLD=90
EOF

# .env.blockchain-governance
cat > "${ENV_DIR}/.env.blockchain-governance" << EOF
# Blockchain Governance Configuration
# Generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Governance Service Configuration
GOVERNANCE_SERVICE_HOST=172.20.0.19
GOVERNANCE_SERVICE_PORT=8500
GOVERNANCE_SERVICE_URL=http://lucid-service-mesh-controller:8500

# Governance Network Configuration
GOVERNANCE_NETWORK=lucid-governance
GOVERNANCE_CONSENSUS=PoOT
GOVERNANCE_VOTING_PERIOD=86400
GOVERNANCE_PROPOSAL_THRESHOLD=1000
GOVERNANCE_QUORUM_THRESHOLD=5000

# Governance API Configuration
GOVERNANCE_API_ENABLED=true
GOVERNANCE_API_PORT=8500
GOVERNANCE_API_HOST=0.0.0.0
GOVERNANCE_API_WORKERS=4
GOVERNANCE_API_TIMEOUT=30

# Governance Database Configuration
GOVERNANCE_DB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_governance?authSource=admin
GOVERNANCE_DB_DATABASE=lucid_governance
GOVERNANCE_DB_PASSWORD=${MONGODB_PASSWORD}

# Governance Redis Configuration
GOVERNANCE_REDIS_URL=redis://lucid-redis:6379/12
GOVERNANCE_REDIS_PASSWORD=${REDIS_PASSWORD}
GOVERNANCE_REDIS_POOL_SIZE=20

# Governance Security Configuration
GOVERNANCE_JWT_SECRET=${JWT_SECRET}
GOVERNANCE_ENCRYPTION_KEY=${ENCRYPTION_KEY}
GOVERNANCE_SSL_ENABLED=true
GOVERNANCE_CORS_ORIGINS=*

# Governance Voting Configuration
GOVERNANCE_VOTING_ENABLED=true
GOVERNANCE_VOTING_ALGORITHM=weighted
GOVERNANCE_VOTING_WEIGHT_BY_STAKE=true
GOVERNANCE_VOTING_WEIGHT_BY_AGE=true
GOVERNANCE_VOTING_WEIGHT_BY_CONTRIBUTION=true

# Governance Proposal Configuration
GOVERNANCE_PROPOSAL_ENABLED=true
GOVERNANCE_PROPOSAL_MIN_AMOUNT=100
GOVERNANCE_PROPOSAL_MAX_AMOUNT=1000000
GOVERNANCE_PROPOSAL_DURATION=604800
GOVERNANCE_PROPOSAL_QUORUM=0.1

# Governance Staking Configuration
GOVERNANCE_STAKING_ENABLED=true
GOVERNANCE_STAKING_MIN_AMOUNT=1000
GOVERNANCE_STAKING_REWARD_RATE=0.05
GOVERNANCE_STAKING_UNLOCK_PERIOD=2592000
GOVERNANCE_STAKING_SLASHING_ENABLED=true

# Governance Treasury Configuration
GOVERNANCE_TREASURY_ENABLED=true
GOVERNANCE_TREASURY_ADDRESS=${NODE_ADDRESS}
GOVERNANCE_TREASURY_BALANCE=1000000
GOVERNANCE_TREASURY_MIN_RESERVE=100000
GOVERNANCE_TREASURY_MAX_WITHDRAWAL=10000

# Governance Monitoring Configuration
GOVERNANCE_MONITORING_ENABLED=true
GOVERNANCE_METRICS_ENABLED=true
GOVERNANCE_PROMETHEUS_ENABLED=true
GOVERNANCE_PROMETHEUS_PORT=9095
GOVERNANCE_HEALTH_CHECK_ENABLED=true
GOVERNANCE_HEALTH_CHECK_INTERVAL=30

# Governance Logging Configuration
GOVERNANCE_LOG_LEVEL=INFO
GOVERNANCE_LOG_FORMAT=json
GOVERNANCE_LOG_FILE=/var/log/lucid/blockchain-governance.log
GOVERNANCE_LOG_ROTATE=true
GOVERNANCE_LOG_MAX_SIZE=100MB
GOVERNANCE_LOG_MAX_FILES=5

# Governance Rate Limiting
GOVERNANCE_RATE_LIMIT_ENABLED=true
GOVERNANCE_RATE_LIMIT_REQUESTS_PER_MINUTE=500
GOVERNANCE_RATE_LIMIT_BURST_SIZE=1000
GOVERNANCE_RATE_LIMIT_STORAGE=redis

# Governance Performance
GOVERNANCE_PERFORMANCE_MONITORING=true
GOVERNANCE_SLOW_QUERY_THRESHOLD=1000
GOVERNANCE_MEMORY_THRESHOLD=80
GOVERNANCE_CPU_THRESHOLD=80
GOVERNANCE_DISK_THRESHOLD=90

# Governance Alerts
GOVERNANCE_ALERTS_ENABLED=true
GOVERNANCE_ALERT_EMAIL_ENABLED=false
GOVERNANCE_ALERT_SLACK_ENABLED=false
GOVERNANCE_ALERT_WEBHOOK_ENABLED=true
GOVERNANCE_ALERT_WEBHOOK_URL=http://lucid-admin-interface:8083/governance-alerts
EOF

echo -e "${GREEN}✅ All environment files generated successfully!${NC}"
echo -e "${BLUE}📁 Files created in: ${ENV_DIR}${NC}"
echo -e "${YELLOW}🔐 All files contain real-world usable values (no placeholders)${NC}"
echo -e "${YELLOW}🔧 Generated for Pi console deployment with distroless design concept${NC}"

# Set proper permissions
chmod 600 "${ENV_DIR}"/.env.*
echo -e "${GREEN}✅ Set secure permissions (600) on all .env files${NC}"

# List generated files
echo -e "${BLUE}📋 Generated files:${NC}"
ls -la "${ENV_DIR}"/.env.* | while read line; do
    echo -e "${GREEN}  $line${NC}"
done

echo -e "${BLUE}🎉 Environment file generation complete!${NC}"
