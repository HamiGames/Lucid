name: lucid-dev

# Reusable anchors
x-default-env: &default-env
  LUCID_ENV: dev
  MONGO_URL: "mongodb://lucid:lucid@lucid_mongo:27017/?authSource=admin"
  ONION: "${ONION:-}"
  COOKIE: "${COOKIE:-}"
  HEX: "${HEX:-}"

x-default-deploy: &default-deploy
  restart: unless-stopped

# Networks: internal app net + tor alias net
networks:
  lucid_net:
    driver: bridge
  tor_net:
    driver: bridge

# Virtual volumes for dev/test; bind in persistent override when needed
volumes:
  tor_data: {}
  mongo_data: {}
  mongo_configdb: {}
  gateway_cache: {}
  logs: {}

services:

  # === Tor proxy (SOCKS + ControlPort) ===
  tor-proxy:
    <<: *default-deploy
    container_name: lucid_tor
    build:
      context: ../../02-network-security/tor
      dockerfile: Dockerfile
    image: lucid/tor:dev
    environment: *default-env
    ports:
      - "9050:9050"   # SOCKS5
      - "9051:9051"   # ControlPort
    volumes:
      - tor_data:/var/lib/tor
    networks:
      lucid_net: {}
      tor_net:
        aliases: [tor, tor-proxy]
    healthcheck:
      test: ["CMD-SHELL", "nc -z -w 2 127.0.0.1 9051"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 10s
    profiles: ["dev"]

  # === MongoDB 7 ===
  mongodb:
    <<: *default-deploy
    container_name: lucid_mongo
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:-lucid}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-lucid}"
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_configdb:/data/configdb
    networks:
      - lucid_net
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ping:1}).ok' | grep -q 1"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 10s
    profiles: ["dev"]

  # === API (FastAPI / Uvicorn :8081) ===
  lucid_api:
    <<: *default-deploy
    container_name: lucid_api
    build:
      context: ../../03-api-gateway/api
      dockerfile: Dockerfile
    image: lucid/api:dev
    environment: *default-env
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8081 --reload
    expose:
      - "8081"
    volumes:
      - ../../03-api-gateway/api/app:/app/app:delegated
      - logs:/var/log/lucid
    networks:
      - lucid_net
    depends_on:
      tor-proxy:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    # Healthchecks manual by design
    profiles: ["dev"]

  # === API Gateway (Nginx :8080 -> http://lucid_api:8081) ===
  lucid_api_gateway:
    <<: *default-deploy
    container_name: lucid_api_gateway
    build:
      context: ../../03-api-gateway/gateway
      dockerfile: Dockerfile.gateway
    image: lucid/gateway:dev
    environment: *default-env
    ports:
      - "8080:8080"
    volumes:
      - gateway_cache:/var/cache/nginx
      - logs:/var/log/nginx
    networks:
      - lucid_net
    depends_on:
      - lucid_api
    # Healthchecks manual by design
    profiles: ["dev"]

  # === Utility toolbox (optional) ===
  server-tools:
    <<: *default-deploy
    container_name: lucid_server_tools
    image: alpine:3.20
    command: ["/bin/sh", "-c", "sleep infinity"]
    environment: *default-env
    volumes:
      - logs:/workspace/logs
    networks:
      - lucid_net
    depends_on:
      - tor-proxy
      - mongodb
    profiles: ["dev"]

  # === Tunnel tools (optional) ===
  tunnel-tools:
    <<: *default-deploy
    container_name: lucid_tunnel_tools
    image: alpine:3.20
    command: ["/bin/sh", "-c", "apk add --no-cache curl netcat-openbsd jq && sleep infinity"]
    environment: *default-env
    networks:
      lucid_net: {}

    depends_on:
      - tor-proxy
    profiles: ["dev"]
