# LUCID UPDATE MANAGER - SPEC-4 OTA Update System (Distroless)
# Professional OTA update system for Pi deployment
# Multi-platform build for ARM64 Pi and AMD64 development

# syntax=docker/dockerfile:1.7
FROM python:3.11-slim AS update-manager-builder

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Update Manager for SPEC-4 OTA Update System (Distroless)" \
      org.lucid.plane="ops" \
      org.lucid.service="update-manager" \
      org.lucid.layer="4" \
      org.lucid.expose="8112"

# Build-time environment for dependency installation
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies and update tools
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        ca-certificates \
        netcat-traditional \
        jq \
        gosu \
        # Update system dependencies
        python3-dev \
        # Cryptographic tools
        openssl \
        gpg \
        # Archive tools
        tar \
        gzip \
        # Download tools
        wget \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && groupadd --gid 1000 lucid \
    && useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home lucid

# Set up application directory
WORKDIR /app
RUN chown -R lucid:lucid /app

# Install Python dependencies for OTA updates
RUN pip install --no-cache-dir \
        "uvicorn[standard]>=0.24.0" \
        "fastapi>=0.104.0" \
        "pydantic>=2.0.0" \
        "httpx>=0.25.0" \
        "requests>=2.31.0" \
        "cryptography>=41.0.0" \
        "structlog>=23.2.0" \
        "python-dotenv>=1.0.0" \
        "websockets>=11.0.0"

# Copy application code
COPY tools/ /app/tools/
COPY tools/ops/ota/ /app/tools/ops/ota/
COPY wallet/ /app/wallet/
COPY auth/ /app/auth/
COPY blockchain/ /app/blockchain/

# Create OTA update directories
RUN mkdir -p /opt/lucid/ota /opt/lucid/signatures /opt/lucid/versions /data/ota /tmp/updatemanager \
    && chown -R lucid:lucid /opt/lucid /data /tmp/updatemanager

# Create non-root user for runtime
RUN adduser --disabled-password --gecos '' updatemanager_user && \
    chown -R updatemanager_user:updatemanager_user /app /data /tmp/updatemanager /opt/lucid

# Stage 2: Distroless runtime with Python and OTA dependencies
FROM gcr.io/distroless/python3-debian12:nonroot

# Metadata for runtime container
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Update Manager for SPEC-4 OTA Update System (Distroless Runtime)" \
      org.lucid.plane="ops" \
      org.lucid.service="update-manager" \
      org.lucid.layer="4" \
      org.lucid.expose="8112"

# Copy Python installation and packages from builder
COPY --from=update-manager-builder /usr/local/lib/python3.11 /usr/local/lib/python3.11
COPY --from=update-manager-builder /usr/local/bin/python3.11 /usr/local/bin/python3.11
COPY --from=update-manager-builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn

# Copy OTA and system tools
COPY --from=update-manager-builder /usr/bin/openssl /usr/bin/openssl
COPY --from=update-manager-builder /usr/bin/gpg /usr/bin/gpg
COPY --from=update-manager-builder /bin/tar /bin/tar
COPY --from=update-manager-builder /bin/gzip /bin/gzip
COPY --from=update-manager-builder /usr/bin/wget /usr/bin/wget
COPY --from=update-manager-builder /usr/bin/curl /usr/bin/curl
COPY --from=update-manager-builder /bin/nc /bin/nc
COPY --from=update-manager-builder /usr/bin/jq /usr/bin/jq
COPY --from=update-manager-builder /usr/sbin/gosu /usr/sbin/gosu

# Copy required dynamic libraries (architecture-specific)
COPY --from=update-manager-builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=update-manager-builder /lib/*-linux-*/libssl.so.3 /lib/
COPY --from=update-manager-builder /lib/*-linux-*/libcrypto.so.3 /lib/
COPY --from=update-manager-builder /lib/*-linux-*/libz.so.1 /lib/
COPY --from=update-manager-builder /lib/*-linux-*/liblzma.so.5 /lib/
COPY --from=update-manager-builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=update-manager-builder /lib*/ld-linux-*.so.2 /lib64/

# Copy user and group information
COPY --from=update-manager-builder /etc/passwd /etc/passwd
COPY --from=update-manager-builder /etc/group /etc/group

# Copy CA certificates
COPY --from=update-manager-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Copy application with proper ownership
COPY --from=update-manager-builder --chown=updatemanager_user:updatemanager_user /app /app
COPY --from=update-manager-builder --chown=updatemanager_user:updatemanager_user /data /data
COPY --from=update-manager-builder --chown=updatemanager_user:updatemanager_user /tmp/updatemanager /tmp/updatemanager
COPY --from=update-manager-builder --chown=updatemanager_user:updatemanager_user /opt/lucid /opt/lucid

# Runtime environment for update manager
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    OTA_PATH=/opt/lucid/ota \
    SIGNATURES_PATH=/opt/lucid/signatures \
    VERSIONS_PATH=/opt/lucid/versions \
    XDG_RUNTIME_DIR=/tmp/updatemanager \
    UPDATE_CHECK_INTERVAL_SECONDS=3600 \
    DOWNLOAD_TIMEOUT_SECONDS=300 \
    INSTALLATION_TIMEOUT_SECONDS=600 \
    ROLLBACK_TIMEOUT_SECONDS=300 \
    MIN_FREE_SPACE_MB=1000

# Security and runtime configuration
EXPOSE 8112
USER updatemanager_user
WORKDIR /app

# Default command for update manager service
ENTRYPOINT ["/usr/local/bin/python3.11", "/app/tools/ops/ota/update_manager.py"]
