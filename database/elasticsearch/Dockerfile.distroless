# Elasticsearch Distroless Dockerfile
# Multi-stage build for distroless compliance
# Based on: gcr.io/distroless/python3-debian12

# =============================================================================
# STAGE 1: Builder - Install Elasticsearch and dependencies
# =============================================================================
FROM elasticsearch:8.11.0 AS builder

# Install Python and required packages
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create Python virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt /tmp/requirements.txt
RUN pip install --no-cache-dir -r /tmp/requirements.txt

# =============================================================================
# STAGE 2: Runtime - Distroless base with Elasticsearch
# =============================================================================
FROM gcr.io/distroless/python3-debian12

# Copy Elasticsearch binaries and libraries from builder
COPY --from=builder /usr/share/elasticsearch /usr/share/elasticsearch
COPY --from=builder /usr/bin/elasticsearch /usr/bin/elasticsearch
COPY --from=builder /usr/lib/x86_64-linux-gnu/libssl.so.3 /usr/lib/x86_64-linux-gnu/
COPY --from=builder /usr/lib/x86_64-linux-gnu/libcrypto.so.3 /usr/lib/x86_64-linux-gnu/
COPY --from=builder /lib/x86_64-linux-gnu/libz.so.1 /lib/x86_64-linux-gnu/
COPY --from=builder /lib/x86_64-linux-gnu/libdl.so.2 /lib/x86_64-linux-gnu/
COPY --from=builder /lib/x86_64-linux-gnu/libpthread.so.0 /lib/x86_64-linux-gnu/
COPY --from=builder /lib/x86_64-linux-gnu/libc.so.6 /lib/x86_64-linux-gnu/
COPY --from=builder /lib64/ld-linux-x86-64.so.2 /lib64/

# Copy Java runtime (required for Elasticsearch)
COPY --from=builder /usr/lib/jvm/java-17-openjdk-amd64 /usr/lib/jvm/java-17-openjdk-amd64
ENV JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"
ENV PATH="$JAVA_HOME/bin:$PATH"

# Copy Python dependencies
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create necessary directories
USER 65532:65532
WORKDIR /app

# Copy Elasticsearch configuration and startup script
COPY elasticsearch/ /app/
RUN chmod +x /app/start-elasticsearch.py

# Expose Elasticsearch ports
EXPOSE 9200 9300

# Health check script
COPY --chown=65532:65532 elasticsearch/healthcheck.py /app/healthcheck.py

# Security labels
LABEL org.lucid.security="distroless" \
      org.lucid.base="gcr.io/distroless/python3-debian12" \
      org.lucid.user="65532:65532" \
      org.lucid.shell="false"

# Use Python to start Elasticsearch with proper configuration
ENTRYPOINT ["python", "/app/start-elasticsearch.py"]
