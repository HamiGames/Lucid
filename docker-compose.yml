# Path: docker-compose.yml
# Main Docker Compose file for Lucid project
# Production-ready configuration with all services

version: '3.8'

services:
  # MongoDB Database
  lucid-mongodb:
    image: mongo:7.0
    container_name: lucid-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${LUCID_MONGODB_ROOT_USERNAME:-lucid}
      MONGO_INITDB_ROOT_PASSWORD: ${LUCID_MONGODB_ROOT_PASSWORD:-lucid_password}
      MONGO_INITDB_DATABASE: ${LUCID_MONGODB_DATABASE:-lucid}
    ports:
      - "27017:27017"
    volumes:
      - lucid_mongodb_data:/data/db
      - lucid_mongodb_config:/data/configdb
      - ./database/init_collections.js:/docker-entrypoint-initdb.d/init_collections.js:ro
    networks:
      - lucid-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  lucid-redis:
    image: redis:7-alpine
    container_name: lucid-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - lucid_redis_data:/data
    networks:
      - lucid-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Tor Service
  lucid-tor:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/tor:${LUCID_TAG:-latest}
    container_name: lucid-tor
    restart: unless-stopped
    ports:
      - "9050:9050"  # SOCKS proxy
      - "9051:9051"  # Control port
    volumes:
      - lucid_tor_data:/var/lib/tor
      - lucid_tor_config:/etc/tor
    networks:
      - lucid-network
    depends_on:
      - lucid-mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9050"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  lucid-api:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/api:${LUCID_TAG:-latest}
    container_name: lucid-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid:lucid_password@lucid-mongodb:27017/lucid?authSource=admin
      - LUCID_REDIS_URL=redis://lucid-redis:6379
      - LUCID_TOR_SOCKS_URL=socks5://lucid-tor:9050
      - LUCID_TOR_CONTROL_PORT=9051
    volumes:
      - lucid_api_logs:/app/logs
    networks:
      - lucid-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-tor:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Blockchain Service
  lucid-blockchain:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/blockchain:${LUCID_TAG:-latest}
    container_name: lucid-blockchain
    restart: unless-stopped
    ports:
      - "8545:8545"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid:lucid_password@lucid-mongodb:27017/lucid?authSource=admin
      - LUCID_TRON_NETWORK=${LUCID_TRON_NETWORK:-shasta}
      - LUCID_USDT_TRC20_ADDRESS=${LUCID_USDT_TRC20_ADDRESS:-TG3XXyExBkPp9nzdajDZsozEu4BkaSJozs}
    volumes:
      - lucid_blockchain_data:/app/data
      - lucid_blockchain_logs:/app/logs
    networks:
      - lucid-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # RDP Service
  lucid-rdp:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/rdp:${LUCID_TAG:-latest}
    container_name: lucid-rdp
    restart: unless-stopped
    ports:
      - "3389:3389"
      - "3350:3350"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid:lucid_password@lucid-mongodb:27017/lucid?authSource=admin
      - LUCID_XRDP_DISPLAY=:10
      - LUCID_FFMPEG_PATH=/usr/bin/ffmpeg
      - LUCID_HARDWARE_ACCELERATION=true
    volumes:
      - lucid_rdp_sessions:/app/sessions
      - lucid_rdp_recordings:/app/recordings
      - lucid_rdp_logs:/app/logs
      - /dev/dri:/dev/dri:ro  # GPU access for hardware acceleration
    networks:
      - lucid-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
    privileged: true  # Required for RDP functionality
    healthcheck:
      test: ["CMD", "netstat", "-tuln", "|", "grep", ":3389"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Session Management Service
  lucid-sessions:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/sessions:${LUCID_TAG:-latest}
    container_name: lucid-sessions
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid:lucid_password@lucid-mongodb:27017/lucid?authSource=admin
      - LUCID_REDIS_URL=redis://lucid-redis:6379
      - LUCID_API_URL=http://lucid-api:8000
    volumes:
      - lucid_sessions_data:/app/data
      - lucid_sessions_logs:/app/logs
    networks:
      - lucid-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Storage Service
  lucid-storage:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/storage:${LUCID_TAG:-latest}
    container_name: lucid-storage
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid:lucid_password@lucid-mongodb:27017/lucid?authSource=admin
      - LUCID_STORAGE_ROOT=/app/storage
    volumes:
      - lucid_storage_data:/app/storage
      - lucid_storage_logs:/app/logs
    networks:
      - lucid-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Database Service
  lucid-database:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/database:${LUCID_TAG:-latest}
    container_name: lucid-database
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid:lucid_password@lucid-mongodb:27017/lucid?authSource=admin
      - LUCID_BACKUP_SCHEDULE=${LUCID_BACKUP_SCHEDULE:-0 2 * * *}
    volumes:
      - lucid_database_backups:/app/backups
      - lucid_database_logs:/app/logs
    networks:
      - lucid-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # VM Management Service
  lucid-vm:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/vm:${LUCID_TAG:-latest}
    container_name: lucid-vm
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid:lucid_password@lucid-mongodb:27017/lucid?authSource=admin
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - lucid_vm_data:/app/data
      - lucid_vm_logs:/app/logs
    networks:
      - lucid-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # GUI Service
  lucid-gui:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/gui:${LUCID_TAG:-latest}
    container_name: lucid-gui
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      - LUCID_API_URL=http://lucid-api:8000
      - LUCID_DISPLAY=${DISPLAY:-:0}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      - lucid_gui_data:/app/data
      - lucid_gui_logs:/app/logs
    networks:
      - lucid-network
    depends_on:
      lucid-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Node Service
  lucid-node:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/node:${LUCID_TAG:-latest}
    container_name: lucid-node
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid:lucid_password@lucid-mongodb:27017/lucid?authSource=admin
      - LUCID_NODE_ID=${LUCID_NODE_ID:-node-001}
      - LUCID_CONSENSUS_API_URL=http://lucid-api:8000
    volumes:
      - lucid_node_data:/app/data
      - lucid_node_logs:/app/logs
    networks:
      - lucid-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Networks
networks:
  lucid-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  # Database volumes
  lucid_mongodb_data:
    driver: local
  lucid_mongodb_config:
    driver: local
  
  # Cache volumes
  lucid_redis_data:
    driver: local
  
  # Service volumes
  lucid_tor_data:
    driver: local
  lucid_tor_config:
    driver: local
  
  # Application data volumes
  lucid_api_logs:
    driver: local
  lucid_blockchain_data:
    driver: local
  lucid_blockchain_logs:
    driver: local
  lucid_rdp_sessions:
    driver: local
  lucid_rdp_recordings:
    driver: local
  lucid_rdp_logs:
    driver: local
  lucid_sessions_data:
    driver: local
  lucid_sessions_logs:
    driver: local
  lucid_storage_data:
    driver: local
  lucid_storage_logs:
    driver: local
  lucid_database_backups:
    driver: local
  lucid_database_logs:
    driver: local
  lucid_vm_data:
    driver: local
  lucid_vm_logs:
    driver: local
  lucid_gui_data:
    driver: local
  lucid_gui_logs:
    driver: local
  lucid_node_data:
    driver: local
  lucid_node_logs:
    driver: local
