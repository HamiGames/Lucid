# Multi-stage build for distroless container
# File: payment-systems/tron/Dockerfile.payment-gateway
# Purpose: Distroless container build for Lucid Payment Gateway Service
# Build Host: Windows 11 console
# Target Host: Raspberry Pi (via SSH)
# Phase 4: Support Services
# Aligned with essentials.md: pickme/lucid-payment-gateway:latest-arm64, ports 8097,8106, IP 172.20.0.32

FROM --platform=linux/arm64 python:3.12-slim-bookworm AS builder

# Set build arguments
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies with cache mount
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    make \
    pkg-config \
    libffi-dev \
    libssl-dev \
    libxml2-dev \
    libxslt1-dev \
    zlib1g-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Create virtual environment
RUN python -m venv /opt/venv

# Upgrade pip with cache mount
RUN --mount=type=cache,target=/root/.cache/pip \
    /opt/venv/bin/pip install --upgrade pip setuptools wheel

# Copy requirements and install dependencies
COPY requirements.txt ./requirements.txt
COPY requirements-prod.txt ./requirements-prod.txt

# Install Python dependencies with cache mount and optimizations
RUN --mount=type=cache,target=/root/.cache/pip \
    --mount=type=cache,target=/root/.cache/pip/wheels \
    /opt/venv/bin/pip install --prefer-binary -r requirements.txt -r requirements-prod.txt

# Copy application source code
COPY payment-systems/tron/services/payment_gateway.py ./services/payment_gateway.py
COPY payment-systems/tron/services/__init__.py ./services/__init__.py
COPY payment-systems/tron/config.py ./config.py
COPY payment-systems/tron/main.py ./main.py
COPY payment-systems/tron/api/ ./api/
COPY payment-systems/tron/models/ ./models/
COPY payment-systems/tron/__init__.py ./__init__.py

# Compile Python bytecode
RUN /opt/venv/bin/python -m compileall -b .

# Production stage - Distroless
FROM --platform=linux/arm64 gcr.io/distroless/python3-debian12:nonroot

# Re-declare args for labels in this stage
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# Set metadata labels (aligned with essentials.md)
LABEL maintainer="Lucid Development Team" \
      org.opencontainers.image.title="Lucid Payment Gateway" \
      org.opencontainers.image.description="Distroless payment gateway service for Lucid platform" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="Lucid" \
      org.opencontainers.image.licenses="MIT" \
      lucid.service="payment-gateway" \
      lucid.type="distroless" \
      lucid.platform="arm64" \
      lucid.security="hardened" \
      lucid.phase="4" \
      lucid.cluster="payment"

# Set environment variables (aligned with essentials.md and Network_conig_requirements.md)
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    LUCID_ENV=production \
    LUCID_PLATFORM=arm64 \
    PROJECT_ROOT=/mnt/myssd/Lucid/Lucid

# Locale and Timezone Configuration (distroless-compatible: C.UTF-8)
ENV TZ=UTC \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    COUNTRY=US

# Service Configuration (aligned with Network_conig_requirements.md)
ENV SERVICE_NAME=payment-gateway \
    SERVICE_PORT=8097 \
    PAYMENT_GATEWAY_URL=http://lucid-payment-gateway:8097 \
    PAYMENT_GATEWAY_HOST=172.20.0.32 \
    PAYMENT_GATEWAY_PORT=8097 \
    TRON_NETWORK=mainnet \
    TRON_RPC_URL=https://api.trongrid.io \
    USDT_CONTRACT_ADDRESS=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t \
    TRON_CLIENT_URL=http://lucid-tron-client:8091 \
    PAYOUT_ROUTER_URL=http://lucid-payout-router:8092 \
    WALLET_MANAGER_URL=http://lucid-wallet-manager:8093 \
    USDT_MANAGER_URL=http://lucid-usdt-manager:8094 \
    API_GATEWAY_URL=http://lucid-api-gateway:8080 \
    MIN_PAYOUT_AMOUNT=1.0 \
    MAX_PAYOUT_AMOUNT=10000.0 \
    PAYOUT_FEE=0.1 \
    TRANSACTION_TIMEOUT=300

# Virtual environment path
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder --chown=nonroot:nonroot /opt/venv /opt/venv

# Copy application code from builder
COPY --from=builder --chown=nonroot:nonroot /app /app

# Health check (aligned with Network_conig_requirements.md)
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD ["/opt/venv/bin/python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8097/health').read()"]

# Expose ports (aligned with essentials.md: ports 8097,8106)
EXPOSE 8097 8106

# Run the application (FastAPI - correct entrypoint: main:app)
# Using ENTRYPOINT + CMD pattern for better distroless compatibility
ENTRYPOINT ["/opt/venv/bin/python3", "-m", "uvicorn"]
CMD ["main:app", "--host", "0.0.0.0", "--port", "8097", "--workers", "1"]