# Lucid Service Mesh - Envoy Listener Configuration
# File: infrastructure/service-mesh/sidecar/envoy/config/listener.yaml
# Lines: ~250
# Purpose: Envoy listener configuration for service mesh

version_info: "1"
resources:
- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: listener_0
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15001
  filter_chains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: ingress_http
        access_log:
        - name: envoy.access_loggers.stdout
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
            format: |
              [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
              %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
              "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%"
              "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
        http_filters:
        - name: envoy.filters.http.fault
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
            delay:
              percentage:
                numerator: 0
                denominator: HUNDRED
            abort:
              percentage:
                numerator: 0
                denominator: HUNDRED
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        route_config:
          name: local_route
          virtual_hosts:
          - name: local_service
            domains: ["*"]
            routes:
            - match:
                prefix: "/"
              route:
                cluster: local_service
                timeout: 30s
                retry_policy:
                  retry_on: 5xx,reset,connect-failure,refused-stream
                  num_retries: 3
                  per_try_timeout: 5s
                  retry_back_off:
                    base_interval: 0.25s
                    max_interval: 3s
                circuit_breakers:
                  thresholds:
                  - priority: DEFAULT
                    max_connections: 1000
                    max_pending_requests: 1000
                    max_requests: 1000
                    max_retries: 3
                  - priority: HIGH
                    max_connections: 2000
                    max_pending_requests: 2000
                    max_requests: 2000
                    max_retries: 3
                rate_limits:
                - actions:
                  - generic_key:
                      descriptor_value: "default"
        cors:
          allow_origin_string_match:
          - prefix: "*"
          allow_methods: "GET, PUT, DELETE, POST, OPTIONS"
          allow_headers: "keep-alive,user-agent,cache-control,content-type,content-length,authorization,x-requested-with"
          expose_headers: "grpc-status,grpc-message"
          max_age: "1728000"
          allow_credentials: true

- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: listener_1
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15006
  filter_chains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: egress_http
        http_filters:
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        route_config:
          name: egress_route
          virtual_hosts:
          - name: egress_service
            domains: ["*"]
            routes:
            - match:
                prefix: "/"
              route:
                cluster: service_mesh
                timeout: 30s
                retry_policy:
                  retry_on: 5xx,reset,connect-failure,refused-stream
                  num_retries: 3
                  per_try_timeout: 5s

- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: listener_2
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15020
  filter_chains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: health_check
        http_filters:
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        route_config:
          name: health_check_route
          virtual_hosts:
          - name: health_check_service
            domains: ["*"]
            routes:
            - match:
                prefix: "/health"
              route:
                cluster: health_check_cluster
                timeout: 5s

- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: listener_3
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15021
  filter_chains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: stats
        http_filters:
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        route_config:
          name: stats_route
          virtual_hosts:
          - name: stats_service
            domains: ["*"]
            routes:
            - match:
                prefix: "/stats"
              route:
                cluster: stats_cluster
                timeout: 5s
