# LUCID ADMIN UI - Python FastAPI Service (Distroless)
# Professional admin interface for session management and blockchain operations
# Multi-platform build for ARM64 Pi and AMD64 development
# LUCID-STRICT Mode: Enhanced security with minimal attack surface

# syntax=docker/dockerfile:1.7
FROM python:3.12-slim-bookworm AS admin-ui-builder

# Build arguments for multi-platform support
ARG BUILDPLATFORM
ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION=1.0.0

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="${VERSION}-distroless" \
      description="Admin UI for Lucid (Python FastAPI Distroless Build)" \
      org.lucid.plane="ops" \
      org.lucid.service="admin-ui" \
      org.lucid.layer="3" \
      org.lucid.expose="8096" \
      org.lucid.monitoring="prometheus" \
      org.lucid.security="distroless" \
      org.opencontainers.image.title="Lucid Admin UI" \
      org.opencontainers.image.description="Python FastAPI admin interface for Lucid system" \
      org.opencontainers.image.vendor="HamiGames" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.source="https://github.com/HamiGames/Lucid"

# Build-time environment for dependency installation
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100 \
    PIP_DEFAULT_RETRIES=3

# Install build dependencies and create service user
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        gcc \
        g++ \
        make \
        cmake \
        pkg-config \
        curl \
        wget \
        ca-certificates \
        netcat-openbsd \
        jq \
        gosu \
        git \
        libffi-dev \
        libssl-dev \
        libgmp-dev \
        libsodium-dev \
        libsecp256k1-dev \
        libzmq3-dev \
        libprotobuf-dev \
        protobuf-compiler \
        libpcre3-dev \
        libevent-dev \
        libgflags-dev \
        libsnappy-dev \
        libbz2-dev \
        liblz4-dev \
        libzstd-dev \
        libboost-all-dev \
        libcurl4-openssl-dev \
        libjsoncpp-dev \
        libmicrohttpd-dev \
        libreadline-dev \
        libncurses5-dev \
        libncursesw5-dev \
        libsqlite3-dev \
        libxml2-dev \
        libxslt1-dev \
        libyaml-dev \
        zlib1g-dev \
        libbz2-dev \
        liblzma-dev \
        libffi-dev \
        libgdbm-dev \
        libnss3-dev \
        libtinfo5 \
        dnsutils \
        iputils-ping \
        traceroute \
        net-tools \
        procps \
        htop \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y \
    && rm -rf /var/cache/apt/*

# Create service user with specific UID/GID for security
RUN groupadd --gid 1003 --system adminui \
    && useradd --uid 1003 --gid adminui --system --shell /bin/bash --create-home adminui \
    && mkdir -p /home/adminui/.local/bin \
    && chown -R adminui:adminui /home/adminui

# Set up application directory structure
WORKDIR /app
RUN mkdir -p /app/{config,logs,data,cache,tmp,static,templates} \
    && chown -R adminui:adminui /app

# Install comprehensive Python dependencies for admin UI
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir \
        "fastapi>=0.111.0" \
        "uvicorn[standard]>=0.30.0" \
        "pydantic[email]>=2.5.0" \
        "python-dotenv>=1.0.0" \
        "email-validator>=2.1.0" \
        "motor>=3.4.0" \
        "python-multipart>=0.0.6" \
        "gunicorn>=22.0.0" \
        "bcrypt>=4.1.0" \
        "requests[socks]>=2.31.0" \
        "httpx>=0.25.0" \
        "pymongo>=4.6.0" \
        "aiofiles>=23.0.0" \
        "jinja2>=3.1.0" \
        "python-jose[cryptography]>=3.3.0" \
        "passlib[bcrypt]>=1.7.4" \
        "cryptography>=41.0.0" \
        "structlog>=23.0.0" \
        "prometheus-client>=0.19.0" \
        "python-dateutil>=2.8.0" \
        "pytz>=2023.3" \
        "orjson>=3.9.0" \
        "zstandard>=0.21.0" \
        "dnspython>=2.4.0" \
        "psutil>=5.9.0" \
        "watchdog>=3.0.0" \
        "pyyaml>=6.0" \
        "tronpy>=1.4.0" \
        "blake3>=0.3.0" \
        "grpcio>=1.59.0" \
        "grpcio-tools>=1.59.0" \
        "protobuf>=4.24.0" \
        "zmq>=0.0.0" \
        "pyzmq>=25.1.0" \
        "opentelemetry-api>=1.20.0" \
        "opentelemetry-sdk>=1.20.0" \
        "opentelemetry-exporter-prometheus>=1.12.0" \
        "opentelemetry-instrumentation-fastapi>=0.41b0" \
        "opentelemetry-instrumentation-requests>=0.41b0" \
        "jaeger-client>=4.8.0" \
        "py-spy>=0.3.14" \
        "memory-profiler>=0.61.0"

# Copy admin UI source code with proper ownership
COPY --chown=adminui:adminui ../../admin/ /app/admin/
COPY --chown=adminui:adminui ../../src/ /app/src/
COPY --chown=adminui:adminui ../../common/ /app/common/

# Create comprehensive service directories
RUN mkdir -p \
        /var/lib/lucid/admin-ui/{data,logs,cache,temp} \
        /var/log/lucid/admin-ui \
        /etc/lucid/admin-ui \
        /var/cache/lucid/admin-ui \
        /var/tmp/lucid/admin-ui \
    && chown -R adminui:adminui /var/lib/lucid /var/log/lucid /etc/lucid /var/cache/lucid /var/tmp/lucid

# Create admin UI startup script with comprehensive initialization
RUN cat > /usr/local/bin/start-admin-ui.sh << 'EOF'
#!/bin/bash
set -euo pipefail

# Function to log messages
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] [ADMIN-UI] $*" >&2
}

# Function to check service health
check_service() {
    local service_name="$1"
    local service_url="$2"
    local max_attempts=30
    local attempt=1
    
    log "Checking $service_name availability..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s --connect-timeout 5 "$service_url" >/dev/null 2>&1; then
            log "$service_name is available"
            return 0
        fi
        
        log "Waiting for $service_name... (attempt $attempt/$max_attempts)"
        sleep 2
        ((attempt++))
    done
    
    log "ERROR: $service_name is not available after $max_attempts attempts"
    return 1
}

# Wait for dependencies
log "Starting admin UI service initialization..."

# Check MongoDB connection
if ! check_service "MongoDB" "mongodb://$MONGODB_HOST:$MONGODB_PORT"; then
    log "ERROR: MongoDB is not available"
    exit 1
fi

# Initialize admin UI data directories
log "Initializing admin UI data directories..."
mkdir -p "$ADMIN_UI_DATA_DIR"/{sessions,exports,backups}
chmod 755 "$ADMIN_UI_DATA_DIR"/{sessions,exports,backups}

# Load environment-specific configuration
if [ -f "/etc/lucid/admin-ui/config.$ENVIRONMENT.yaml" ]; then
    log "Loading environment-specific configuration..."
    export ADMIN_UI_CONFIG_FILE="/etc/lucid/admin-ui/config.$ENVIRONMENT.yaml"
fi

# Start admin UI service
log "Starting Lucid Admin UI service..."
exec python3 -m uvicorn admin.ui.admin_ui:app \
    --host 0.0.0.0 \
    --port 8096 \
    --workers 1 \
    --access-log \
    --log-config /etc/lucid/admin-ui/logging.yaml \
    --loop uvloop \
    --http httptools
EOF

RUN chmod +x /usr/local/bin/start-admin-ui.sh

# Create admin UI health check script
RUN cat > /usr/local/bin/health-check.sh << 'EOF'
#!/bin/bash
set -euo pipefail

# Check if admin UI service is responding
if curl -f -s --connect-timeout 5 "http://localhost:8096/health" >/dev/null; then
    exit 0
else
    echo "Admin UI service health check failed"
    exit 1
fi
EOF

RUN chmod +x /usr/local/bin/health-check.sh

# Stage 2: Production runtime with optimized distroless base image
FROM gcr.io/distroless/python3-debian12:nonroot

# Build arguments for runtime
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION=1.0.0

# Metadata for production runtime
LABEL maintainer="Lucid Development Team" \
      version="${VERSION}-distroless" \
      description="Admin UI for Lucid (Python FastAPI Distroless Runtime)" \
      org.lucid.plane="ops" \
      org.lucid.service="admin-ui" \
      org.lucid.layer="3" \
      org.lucid.expose="8096" \
      org.lucid.monitoring="prometheus" \
      org.lucid.security="distroless" \
      org.opencontainers.image.title="Lucid Admin UI" \
      org.opencontainers.image.description="Python FastAPI admin interface for Lucid system" \
      org.opencontainers.image.vendor="HamiGames" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}"

# Copy Python installation and packages from builder
COPY --from=admin-ui-builder /usr/local/lib/python3.12 /usr/local/lib/python3.12
COPY --from=admin-ui-builder /usr/local/bin/python3.12 /usr/local/bin/python3.12
COPY --from=admin-ui-builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn
COPY --from=admin-ui-builder /usr/local/bin/gunicorn /usr/local/bin/gunicorn

# Copy essential system utilities
COPY --from=admin-ui-builder /usr/bin/curl /usr/bin/curl
COPY --from=admin-ui-builder /usr/bin/wget /usr/bin/wget
COPY --from=admin-ui-builder /bin/nc /bin/nc
COPY --from=admin-ui-builder /usr/bin/jq /usr/bin/jq
COPY --from=admin-ui-builder /usr/sbin/gosu /usr/sbin/gosu

# Copy networking utilities
COPY --from=admin-ui-builder /usr/bin/ping /usr/bin/ping
COPY --from=admin-ui-builder /usr/bin/traceroute /usr/bin/traceroute
COPY --from=admin-ui-builder /bin/ps /bin/ps

# Copy comprehensive dynamic libraries
COPY --from=admin-ui-builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libssl.so.3 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libcrypto.so.3 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libz.so.1 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/liblzma.so.5 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libffi.so.8 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libgmp.so.10 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libsodium.so.23 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libsecp256k1.so.0 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libzmq.so.5 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libprotobuf.so.32 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libgrpc.so.14 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libevent-2.1.so.7 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libboost_system.so.1.74.0 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libboost_thread.so.1.74.0 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libboost_filesystem.so.1.74.0 /lib/
COPY --from=admin-ui-builder /lib/*-linux-*/libcurl.so.4 /lib/
COPY --from=admin-ui-builder /lib*/ld-linux-*.so.2 /lib64/

# Copy user and group information
COPY --from=admin-ui-builder /etc/passwd /etc/passwd
COPY --from=admin-ui-builder /etc/group /etc/group

# Copy CA certificates and timezone data
COPY --from=admin-ui-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
COPY --from=admin-ui-builder /usr/share/zoneinfo /usr/share/zoneinfo

# Copy application and configuration
COPY --from=admin-ui-builder --chown=nonroot:nonroot /app /app
COPY --from=admin-ui-builder --chown=nonroot:nonroot /var/lib/lucid/admin-ui /var/lib/lucid/admin-ui
COPY --from=admin-ui-builder --chown=nonroot:nonroot /var/log/lucid/admin-ui /var/log/lucid/admin-ui
COPY --from=admin-ui-builder --chown=nonroot:nonroot /etc/lucid/admin-ui /etc/lucid/admin-ui
COPY --from=admin-ui-builder --chown=nonroot:nonroot /var/cache/lucid/admin-ui /var/cache/lucid/admin-ui
COPY --from=admin-ui-builder --chown=nonroot:nonroot /var/tmp/lucid/admin-ui /var/tmp/lucid/admin-ui

# Copy startup and health check scripts
COPY --from=admin-ui-builder /usr/local/bin/start-admin-ui.sh /usr/local/bin/start-admin-ui.sh
COPY --from=admin-ui-builder /usr/local/bin/health-check.sh /usr/local/bin/health-check.sh

# Production runtime environment
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    ADMIN_PORT=8096 \
    ADMIN_UI_DATA_DIR=/var/lib/lucid/admin-ui \
    LOG_DIR=/var/log/lucid/admin-ui \
    CONFIG_DIR=/etc/lucid/admin-ui \
    CACHE_DIR=/var/cache/lucid/admin-ui \
    TMP_DIR=/var/tmp/lucid/admin-ui \
    MONGODB_HOST=lucid_mongo \
    MONGODB_PORT=27017 \
    MONGODB_NAME=lucid \
    MONGODB_USERNAME=lucid \
    MONGODB_PASSWORD=lucid \
    MONGODB_AUTH_SOURCE=admin \
    SESSION_RECORDER_URL=http://session-recorder:8093 \
    CHAIN_CLIENT_URL=http://on-system-chain-client:8094 \
    TRON_CLIENT_URL=http://tron-node-client:8095 \
    TOR_SOCKS_PORT=9050 \
    ADMIN_UI_ENABLED=true \
    MONITORING_ENABLED=true \
    PROMETHEUS_PORT=9090 \
    JAEGER_ENDPOINT=http://jaeger:14268/api/traces \
    LOG_LEVEL=INFO \
    ENVIRONMENT=production \
    TZ=UTC

# Security and runtime configuration
EXPOSE 8096
EXPOSE 9090
USER nonroot
WORKDIR /app

# Health check with comprehensive monitoring
HEALTHCHECK --interval=30s --timeout=15s --start-period=60s --retries=3 \
    CMD ["/usr/local/bin/health-check.sh"]

# Default command for production admin UI service
ENTRYPOINT ["/usr/local/bin/start-admin-ui.sh"]
