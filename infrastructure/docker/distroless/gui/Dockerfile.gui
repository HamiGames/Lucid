# GUI Distroless Configuration for Lucid Project
# Infrastructure-level GUI distroless image configuration
# Optimized for production deployment on Raspberry Pi

# Build stage - GUI Builder
FROM python:3.11-slim-bookworm as gui-builder

# Set build arguments
ARG BUILDPLATFORM
ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH

# Install comprehensive GUI build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    pkg-config \
    # Tkinter dependencies
    tk-dev \
    tcl-dev \
    # X11 and display dependencies
    libx11-dev \
    libxext-dev \
    libxrender-dev \
    libxtst-dev \
    libxi-dev \
    libxrandr-dev \
    libxss-dev \
    # Browser engine dependencies for modern GUI
    libgconf-2-4 \
    libnss3 \
    libxss1 \
    libasound2-dev \
    # Font and rendering dependencies
    libfontconfig1-dev \
    libfreetype6-dev \
    # Image processing dependencies
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libwebp-dev \
    # Additional GUI libraries
    libgtk-3-dev \
    libgdk-pixbuf2.0-dev \
    libpango1.0-dev \
    libatk1.0-dev \
    libcairo2-dev \
    && rm -rf /var/lib/apt/lists/*

# Set Python build environment
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python GUI dependencies
COPY gui/requirements/requirements.txt /tmp/gui-requirements.txt
COPY requirements.txt /tmp/base-requirements.txt

RUN pip install --upgrade pip setuptools wheel && \
    pip install -r /tmp/base-requirements.txt && \
    pip install -r /tmp/gui-requirements.txt

# Copy GUI source code
COPY gui/ /app/gui/
COPY src/gui/ /app/src/gui/
COPY src/core/ /app/src/core/
COPY src/common/ /app/src/common/

# Copy GUI resources and assets
COPY gui/resources/ /app/gui/resources/
COPY gui/config/ /app/gui/config/

# Runtime stage - Minimal Distroless with GUI support
FROM gcr.io/distroless/python3-debian12

# Set runtime environment
ENV PYTHONPATH=/app:/app/gui:/app/src \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DISPLAY=:0 \
    GUI_MODE=distroless

# Copy virtual environment from builder
COPY --from=gui-builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy application code with proper ownership
COPY --from=gui-builder --chown=nonroot:nonroot /app /app

# Copy GUI resources and configurations
COPY --from=gui-builder --chown=nonroot:nonroot /app/gui/resources /app/gui/resources
COPY --from=gui-builder --chown=nonroot:nonroot /app/gui/config /app/gui/config

# Create non-root user for security
USER nonroot:nonroot

# Set working directory
WORKDIR /app

# Expose GUI service ports
EXPOSE 8083 8084 8085

# Health check for GUI services
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/usr/bin/python3", "-c", "import requests; requests.get('http://localhost:8083/health', timeout=5)"]

# Default command - GUI service launcher with platform detection
CMD ["/usr/bin/python3", "-m", "gui.main"]
