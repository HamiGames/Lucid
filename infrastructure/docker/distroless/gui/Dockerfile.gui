# Lucid GUI - Distroless Node (ARM64)
# Image: pickme/lucid-gui:latest-arm64
# Port per essentials.md: 8000

FROM --platform=linux/arm64 node:18-alpine as builder

# Use electron-gui directory explicitly
WORKDIR /app/electron-gui

# System deps for native modules
RUN apk add --no-cache python3 make g++

# Install production deps with npm cache mount for faster builds
COPY electron-gui/package*.json ./
RUN --mount=type=cache,target=/root/.npm \
    npm ci --only=production

# Copy the rest of the app (sources, configs, assets)
COPY electron-gui/ ./

# Final stage - Distroless NodeJS 18
FROM --platform=linux/arm64 gcr.io/distroless/nodejs18-debian12

# Work from electron-gui directory
WORKDIR /app/electron-gui

# Copy built app and production node_modules
COPY --from=builder /app/electron-gui /app/electron-gui

# Run as non-root
USER 65532:65532

# Runtime environment (aligned with constants)
ENV NODE_ENV=production \
    PORT=8000 \
    HOST=0.0.0.0 \
    GUI_URL=http://lucid-gui:8000 \
    API_URL=http://172.20.0.10:8080/api/v1 \
    HEALTHCHECK_PORT=8000 \
    LUCID_ENV=production \
    LUCID_PLATFORM=arm64 \
    PROJECT_ROOT=/mnt/myssd/Lucid/Lucid

EXPOSE 8000

# Healthcheck via Node inline script (distroless-safe)
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
  CMD ["node","-e","require('http').get('http://localhost:8000/health', r=>{if(r.statusCode!==200)process.exit(1)}).on('error',()=>process.exit(1))"]

# Launch the GUI service
CMD ["node","dist/main.js"]