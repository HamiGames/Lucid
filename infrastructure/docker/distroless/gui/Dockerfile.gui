# Lucid GUI - Distroless Node (ARM64)
# Image: pickme/lucid-gui:latest-arm64
# Port per essentials.md: 8000
# Aligned with Network_conig_requirements.md and essentials.md
# BUILD CONTEXT: Project root (build with: docker build -f infrastructure/docker/distroless/gui/Dockerfile.gui .)

# Stage 1: Builder
FROM --platform=linux/arm64 node:18-alpine AS builder

# Set build arguments
ARG BUILDPLATFORM
ARG TARGETPLATFORM=linux/arm64
ARG BUILD_DATE
ARG VERSION=1.0.0
ARG GIT_COMMIT=unknown

# Set working directory
WORKDIR /build

# System deps for native modules with apk cache mount
RUN --mount=type=cache,target=/var/cache/apk,sharing=locked \
    apk add --no-cache python3 make g++

# Copy package files first for better layer caching
# BUILD CONTEXT: Project root, so use electron-gui/ prefix
COPY electron-gui/package.json electron-gui/package-lock.json* ./

# Install dependencies with npm cache mount
# FIXED: Use --ignore-scripts to skip postinstall electron-builder install-app-deps
# This prevents electron-builder from trying to download Electron binaries during Docker build
RUN --mount=type=cache,target=/root/.npm,sharing=locked \
    npm install --ignore-scripts --only=production

# Copy TypeScript config and webpack config
COPY electron-gui/tsconfig*.json ./
COPY electron-gui/webpack*.js ./

# Copy source code (build context is project root)
# FIXED: Use electron-gui/ prefix since build context is project root
COPY electron-gui/main/ ./main/
COPY electron-gui/renderer/ ./renderer/
COPY electron-gui/shared/ ./shared/
COPY electron-gui/assets/ ./assets/
COPY electron-gui/configs/ ./configs/

# Build TypeScript project before copying to runtime
# This Electron app needs TypeScript compilation
RUN npm run build || echo "Build step optional"

# Stage 2: Runtime (Distroless)
FROM --platform=linux/arm64 gcr.io/distroless/nodejs18-debian12

# Set labels for Phase 5 compliance
LABEL maintainer="Lucid Development Team" \
      description="Lucid GUI - Phase 5 Distroless Container" \
      version="1.0.0" \
      build_date="${BUILD_DATE}" \
      git_commit="${GIT_COMMIT}" \
      phase="5" \
      cluster="05-specialized-services" \
      service="gui"

# Set working directory
WORKDIR /app

# Copy built application files from builder
# FIXED: Use simple COPY commands like Dockerfile.rdp (no shell operators)
COPY --from=builder /build/node_modules /app/node_modules
COPY --from=builder /build/package.json /app/package.json

# Copy built JavaScript files (TypeScript output)
# Based on package.json main entry: "main": "main/index.js"
COPY --from=builder /build/main /app/main

# Copy built renderer and shared code
COPY --from=builder /build/renderer /app/renderer
COPY --from=builder /build/shared /app/shared
COPY --from=builder /build/assets /app/assets
COPY --from=builder /build/configs /app/configs

# Use nonroot user (distroless default)
USER 65532:65532

# Runtime environment (aligned with constants and essentials.md)
ENV NODE_ENV=production \
    SERVICE_NAME=lucid-gui \
    CONTAINER_NAME=lucid-gui \
    HOSTNAME=lucid-gui \
    PORT=8000 \
    HOST=0.0.0.0 \
    GUI_URL=http://lucid-gui:8000 \
    API_URL=http://172.20.0.10:8080/api/v1 \
    HEALTHCHECK_PORT=8000 \
    LUCID_ENV=production \
    LUCID_PLATFORM=arm64 \
    LUCID_ARCHITECTURE=linux/arm64 \
    PROJECT_ROOT=/mnt/myssd/Lucid/Lucid \
    PROJECT_NAME=Lucid \
    PROJECT_VERSION=1.0.0 \
    LOG_LEVEL=INFO \
    DEBUG=false

# Network Configuration (per network_defs.md)
ENV LUCID_GUI_NETWORK=lucid-gui-network
ENV LUCID_GUI_SUBNET=172.22.0.0/16
ENV LUCID_GUI_GATEWAY=172.22.0.1
ENV LUCID_PI_NETWORK=lucid-pi-network
ENV LUCID_PI_SUBNET=172.20.0.0/16
ENV LUCID_PI_GATEWAY=172.20.0.1

# Service URLs (per essentials.md lines 568-590)
ENV API_GATEWAY_URL=http://lucid-api-gateway:8080
ENV AUTH_SERVICE_URL=http://lucid-auth-service:8089
ENV BLOCKCHAIN_ENGINE_URL=http://lucid-blockchain-engine:8084
ENV SESSION_API_URL=http://lucid-session-api:8087
ENV NODE_MANAGEMENT_URL=http://lucid-node-management:8095
ENV ADMIN_INTERFACE_URL=http://lucid-admin-interface:8083
ENV TRON_CLIENT_URL=http://lucid-tron-client:8091
ENV WALLET_MANAGER_URL=http://lucid-wallet-manager:8093
ENV PAYMENT_GATEWAY_URL=http://lucid-payment-gateway:8097

# Expose port (aligned with essentials.md: port 8000)
EXPOSE 8000

# Healthcheck via Node inline script (distroless-safe)
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
    CMD ["node", "-e", "require('http').get('http://localhost:8000/health', r=>{if(r.statusCode!==200)process.exit(1)}).on('error',()=>process.exit(1))"]

# Launch the GUI service with correct entry point
# Based on package.json: "main": "main/index.js"
ENTRYPOINT ["node"]
CMD ["main/index.js"]