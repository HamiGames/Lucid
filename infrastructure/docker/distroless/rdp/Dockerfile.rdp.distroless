# RDP Distroless Configuration for Lucid Project
# Infrastructure-level RDP distroless image configuration
# Optimized for production deployment on Raspberry Pi with xrdp integration

# Build stage - RDP Builder with xrdp integration
FROM python:3.11-slim-bookworm as rdp-builder

# Set build arguments
ARG BUILDPLATFORM
ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH

# Install comprehensive RDP build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    pkg-config \
    # xrdp and desktop environment
    xrdp \
    xrdp-pulseaudio-installer \
    xfce4 \
    xfce4-goodies \
    # Display server support
    xvfb \
    x11-utils \
    x11-xserver-utils \
    # RDP protocol dependencies
    libfreerdp-dev \
    libfreerdp2-dev \
    freerdp2-dev \
    # X11 and display dependencies
    libx11-dev \
    libxext-dev \
    libxrender-dev \
    libxtst-dev \
    libxi-dev \
    libxrandr-dev \
    libxss-dev \
    # Audio and multimedia
    libasound2-dev \
    libpulse-dev \
    libavcodec-dev \
    libavformat-dev \
    libavutil-dev \
    libswscale-dev \
    # Network and security
    libssl-dev \
    libcrypto++-dev \
    # Image processing
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libwebp-dev \
    # Additional system dependencies
    curl \
    netcat-traditional \
    jq \
    gosu \
    # Python system dependencies
    python3-dev \
    python3-tk \
    && rm -rf /var/lib/apt/lists/*

# Set Python build environment
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python RDP dependencies
COPY RDP/requirements.txt /tmp/rdp-requirements.txt
COPY requirements.txt /tmp/base-requirements.txt

RUN pip install --upgrade pip setuptools wheel && \
    pip install -r /tmp/base-requirements.txt && \
    pip install -r /tmp/rdp-requirements.txt && \
    pip install "uvicorn[standard]>=0.24.0" \
                "fastapi>=0.104.0" \
                "httpx>=0.25.0" \
                "psutil>=5.9.0" \
                "structlog>=23.2.0" \
                "python-dotenv>=1.0.0" \
                "websockets>=11.0.0"

# Copy RDP source code
COPY RDP/ /app/RDP/
COPY sessions/ /app/sessions/
COPY auth/ /app/auth/
COPY src/core/ /app/src/core/
COPY src/common/ /app/src/common/

# Create RDP host directories
RUN mkdir -p /etc/xrdp /var/log/xrdp /opt/lucid/rdp /data/sessions /tmp/rdp \
    && chown -R 1000:1000 /etc/xrdp /var/log/xrdp /opt/lucid /data /tmp/rdp

# Create non-root user for runtime
RUN groupadd --gid 1000 rdp_user && \
    useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home rdp_user

# Runtime stage - Minimal Distroless with RDP support
FROM gcr.io/distroless/python3-debian12

# Set runtime environment
ENV PYTHONPATH=/app:/app/RDP:/app/sessions:/app/auth:/app/src \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    RDP_HOST_PATH=/opt/lucid/rdp \
    RDP_SESSIONS_PATH=/data/sessions \
    XRDP_PORT=3389 \
    XRDP_SESMAN_PORT=3350 \
    XRDP_CHANSRV_PORT=3351 \
    DISPLAY=:10 \
    XDG_RUNTIME_DIR=/tmp/rdp \
    RDP_MODE=distroless

# Copy virtual environment from builder
COPY --from=rdp-builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy xrdp binaries and system dependencies
COPY --from=rdp-builder /usr/sbin/xrdp /usr/sbin/xrdp
COPY --from=rdp-builder /usr/bin/xrdp-sesman /usr/bin/xrdp-sesman
COPY --from=rdp-builder /usr/bin/xrdp-chansrv /usr/bin/xrdp-chansrv
COPY --from=rdp-builder /usr/bin/xrdp-sessvc /usr/bin/xrdp-sessvc
COPY --from=rdp-builder /usr/bin/curl /usr/bin/curl
COPY --from=rdp-builder /bin/nc /bin/nc
COPY --from=rdp-builder /usr/bin/jq /usr/bin/jq
COPY --from=rdp-builder /usr/sbin/gosu /usr/sbin/gosu

# Copy required dynamic libraries (architecture-specific)
COPY --from=rdp-builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=rdp-builder /lib/*-linux-*/libssl.so.3 /lib/
COPY --from=rdp-builder /lib/*-linux-*/libcrypto.so.3 /lib/
COPY --from=rdp-builder /lib/*-linux-*/libz.so.1 /lib/
COPY --from=rdp-builder /lib/*-linux-*/liblzma.so.5 /lib/
COPY --from=rdp-builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=rdp-builder /lib*/ld-linux-*.so.2 /lib64/

# Copy user and group information
COPY --from=rdp-builder /etc/passwd /etc/passwd
COPY --from=rdp-builder /etc/group /etc/group

# Copy CA certificates
COPY --from=rdp-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Copy application code with proper ownership
COPY --from=rdp-builder --chown=rdp_user:rdp_user /app /app
COPY --from=rdp-builder --chown=rdp_user:rdp_user /data /data
COPY --from=rdp-builder --chown=rdp_user:rdp_user /tmp/rdp /tmp/rdp
COPY --from=rdp-builder --chown=rdp_user:rdp_user /opt/lucid /opt/lucid

# Create non-root user for security
USER rdp_user

# Set working directory
WORKDIR /app

# Expose RDP service ports
EXPOSE 3389 3350 3351 8080

# Health check for RDP services
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["python", "-c", "import socket; s=socket.socket(); s.settimeout(5); s.connect(('localhost', 3389)); s.close()"]

# Default command - RDP service launcher with xrdp integration
CMD ["python", "-m", "RDP.server.rdp_server_manager"]
