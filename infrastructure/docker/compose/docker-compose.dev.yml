# Path: infrastructure/docker/compose/docker-compose.dev.yml
# Development infrastructure Docker Compose file for Lucid project
# Optimized for development with debugging and local development tools

version: '3.8'

services:
  # MongoDB Database (Development)
  lucid-mongodb-dev:
    image: mongo:7.0
    container_name: lucid-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${LUCID_MONGODB_ROOT_USERNAME:-lucid_dev}
      MONGO_INITDB_ROOT_PASSWORD: ${LUCID_MONGODB_ROOT_PASSWORD:-lucid_dev_password}
      MONGO_INITDB_DATABASE: ${LUCID_MONGODB_DATABASE:-lucid_dev}
    ports:
      - "27017:27017"
    volumes:
      - lucid_mongodb_dev_data:/data/db
      - ./mongodb/init-dev:/docker-entrypoint-initdb.d:ro
    networks:
      - lucid-infra-dev-network
    command: ["mongod", "--bind_ip_all"]

  # Redis Cache (Development)
  lucid-redis-dev:
    image: redis:7-alpine
    container_name: lucid-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - lucid_redis_dev_data:/data
    networks:
      - lucid-infra-dev-network
    command: ["redis-server", "--appendonly", "yes"]

  # PostgreSQL (Development)
  lucid-postgres-dev:
    image: postgres:15-alpine
    container_name: lucid-postgres-dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${LUCID_POSTGRES_DB:-lucid_dev}
      POSTGRES_USER: ${LUCID_POSTGRES_USER:-lucid_dev}
      POSTGRES_PASSWORD: ${LUCID_POSTGRES_PASSWORD:-lucid_dev_password}
    volumes:
      - lucid_postgres_dev_data:/var/lib/postgresql/data
      - ./postgres/init-dev:/docker-entrypoint-initdb.d:ro
    networks:
      - lucid-infra-dev-network

  # Elasticsearch (Development - Single Node)
  lucid-elasticsearch-dev:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: lucid-elasticsearch-dev
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    volumes:
      - lucid_elasticsearch_dev_data:/usr/share/elasticsearch/data
    networks:
      - lucid-infra-dev-network

  # Kibana (Development)
  lucid-kibana-dev:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: lucid-kibana-dev
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://lucid-elasticsearch-dev:9200
    networks:
      - lucid-infra-dev-network
    depends_on:
      - lucid-elasticsearch-dev

  # Prometheus (Development)
  lucid-prometheus-dev:
    image: prom/prometheus:latest
    container_name: lucid-prometheus-dev
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus-dev.yml:/etc/prometheus/prometheus.yml:ro
      - lucid_prometheus_dev_data:/prometheus
    networks:
      - lucid-infra-dev-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=24h'
      - '--web.enable-lifecycle'

  # Grafana (Development)
  lucid-grafana-dev:
    image: grafana/grafana:latest
    container_name: lucid-grafana-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${LUCID_GRAFANA_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: true
      GF_USERS_ALLOW_ORG_CREATE: true
    volumes:
      - lucid_grafana_dev_data:/var/lib/grafana
      - ./grafana/provisioning-dev:/etc/grafana/provisioning:ro
    networks:
      - lucid-infra-dev-network
    depends_on:
      - lucid-prometheus-dev

  # Jaeger (Development)
  lucid-jaeger-dev:
    image: jaegertracing/all-in-one:latest
    container_name: lucid-jaeger-dev
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - lucid-infra-dev-network

  # MinIO (Development)
  lucid-minio-dev:
    image: minio/minio:latest
    container_name: lucid-minio-dev
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${LUCID_MINIO_USER:-lucid_dev}
      MINIO_ROOT_PASSWORD: ${LUCID_MINIO_PASSWORD:-lucid_dev_password}
    volumes:
      - lucid_minio_dev_data:/data
    networks:
      - lucid-infra-dev-network
    command: server /data --console-address ":9001"

  # Vault (Development)
  lucid-vault-dev:
    image: vault:latest
    container_name: lucid-vault-dev
    restart: unless-stopped
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${LUCID_VAULT_ROOT_TOKEN:-lucid_dev_token}
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    volumes:
      - lucid_vault_dev_data:/vault/data
    networks:
      - lucid-infra-dev-network
    cap_add:
      - IPC_LOCK
    command: ["vault", "server", "-dev"]

  # Consul (Development)
  lucid-consul-dev:
    image: consul:latest
    container_name: lucid-consul-dev
    restart: unless-stopped
    ports:
      - "8500:8500"
    volumes:
      - lucid_consul_dev_data:/consul/data
    networks:
      - lucid-infra-dev-network
    command: ["consul", "agent", "-server", "-ui", "-node=server-1", "-bootstrap-expect=1", "-client=0.0.0.0"]

  # NATS (Development)
  lucid-nats-dev:
    image: nats:latest
    container_name: lucid-nats-dev
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - lucid_nats_dev_data:/data
    networks:
      - lucid-infra-dev-network
    command: ["-js", "-m", "8222"]

  # API Gateway (Development)
  lucid-api-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/api:${LUCID_TAG:-latest}
    container_name: lucid-api-dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_REDIS_URL=redis://lucid-redis-dev:6379
      - LUCID_POSTGRES_URL=postgresql://lucid_dev:lucid_dev_password@lucid-postgres-dev:5432/lucid_dev
      - LUCID_ELASTICSEARCH_URL=http://lucid-elasticsearch-dev:9200
      - LUCID_JAEGER_URL=http://lucid-jaeger-dev:14268/api/traces
      - LUCID_MINIO_URL=http://lucid-minio-dev:9000
      - LUCID_VAULT_URL=http://lucid-vault-dev:8200
      - LUCID_CONSUL_URL=http://lucid-consul-dev:8500
      - LUCID_NATS_URL=nats://lucid-nats-dev:4222
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
      - LUCID_RELOAD=true
    volumes:
      - lucid_api_dev_logs:/app/logs
    networks:
      - lucid-infra-dev-network
    depends_on:
      - lucid-mongodb-dev
      - lucid-redis-dev
      - lucid-postgres-dev
    command: ["python", "-m", "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Session Management Service (Development)
  lucid-sessions-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/sessions:${LUCID_TAG:-latest}
    container_name: lucid-sessions-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_REDIS_URL=redis://lucid-redis-dev:6379
      - LUCID_API_URL=http://lucid-api-dev:8000
      - LUCID_ELASTICSEARCH_URL=http://lucid-elasticsearch-dev:9200
      - LUCID_MINIO_URL=http://lucid-minio-dev:9000
      - LUCID_NATS_URL=nats://lucid-nats-dev:4222
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
      - LUCID_RELOAD=true
    volumes:
      - lucid_sessions_dev_data:/app/data
      - lucid_sessions_dev_logs:/app/logs
    networks:
      - lucid-infra-dev-network
    depends_on:
      - lucid-mongodb-dev
      - lucid-redis-dev
      - lucid-api-dev
    command: ["python", "-m", "uvicorn", "sessions.main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]

  # Storage Service (Development)
  lucid-storage-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/storage:${LUCID_TAG:-latest}
    container_name: lucid-storage-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_STORAGE_ROOT=/app/storage
      - LUCID_MINIO_URL=http://lucid-minio-dev:9000
      - LUCID_ELASTICSEARCH_URL=http://lucid-elasticsearch-dev:9200
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - lucid_storage_dev_data:/app/storage
      - lucid_storage_dev_logs:/app/logs
    networks:
      - lucid-infra-dev-network
    depends_on:
      - lucid-mongodb-dev
      - lucid-minio-dev

  # Development Tools
  lucid-dev-tools:
    image: python:3.11-slim
    container_name: lucid-dev-tools
    restart: "no"
    ports:
      - "8888:8888"  # Jupyter
      - "8001:8001"  # Development server
    volumes:
      - ./:/app
      - lucid_dev_tools_cache:/root/.cache
    networks:
      - lucid-infra-dev-network
    working_dir: /app
    command: ["tail", "-f", "/dev/null"]

  # MongoDB Admin (Development)
  lucid-mongo-admin:
    image: mongo-express:latest
    container_name: lucid-mongo-admin
    restart: unless-stopped
    ports:
      - "8086:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${LUCID_MONGODB_ROOT_USERNAME:-lucid_dev}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${LUCID_MONGODB_ROOT_PASSWORD:-lucid_dev_password}
      ME_CONFIG_MONGODB_URL: mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - lucid-infra-dev-network
    depends_on:
      - lucid-mongodb-dev

  # PostgreSQL Admin (Development)
  lucid-pg-admin:
    image: dpage/pgadmin4:latest
    container_name: lucid-pg-admin
    restart: unless-stopped
    ports:
      - "8087:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${LUCID_PGADMIN_EMAIL:-admin@lucid.dev}
      PGADMIN_DEFAULT_PASSWORD: ${LUCID_PGADMIN_PASSWORD:-admin}
    networks:
      - lucid-infra-dev-network
    depends_on:
      - lucid-postgres-dev

  # Redis Admin (Development)
  lucid-redis-admin:
    image: rediscommander/redis-commander:latest
    container_name: lucid-redis-admin
    restart: unless-stopped
    ports:
      - "8088:8081"
    environment:
      REDIS_HOSTS: local:lucid-redis-dev:6379
    networks:
      - lucid-infra-dev-network
    depends_on:
      - lucid-redis-dev

  # Mailhog (Development Email Testing)
  lucid-mailhog:
    image: mailhog/mailhog:latest
    container_name: lucid-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - lucid-infra-dev-network

  # Wiremock (Development API Mocking)
  lucid-wiremock:
    image: wiremock/wiremock:latest
    container_name: lucid-wiremock
    restart: unless-stopped
    ports:
      - "8089:8080"
    volumes:
      - ./wiremock:/home/wiremock
    networks:
      - lucid-infra-dev-network
    command: ["--global-response-templating", "--verbose"]

# Networks
networks:
  lucid-infra-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.24.0.0/16

# Volumes (Development)
volumes:
  # Database volumes
  lucid_mongodb_dev_data:
    driver: local
  lucid_redis_dev_data:
    driver: local
  lucid_postgres_dev_data:
    driver: local
  
  # Search and logging volumes
  lucid_elasticsearch_dev_data:
    driver: local
  
  # Monitoring volumes
  lucid_prometheus_dev_data:
    driver: local
  lucid_grafana_dev_data:
    driver: local
  
  # Storage volumes
  lucid_minio_dev_data:
    driver: local
  
  # Infrastructure volumes
  lucid_vault_dev_data:
    driver: local
  lucid_consul_dev_data:
    driver: local
  lucid_nats_dev_data:
    driver: local
  
  # Application volumes
  lucid_api_dev_logs:
    driver: local
  lucid_sessions_dev_data:
    driver: local
  lucid_sessions_dev_logs:
    driver: local
  lucid_storage_dev_data:
    driver: local
  lucid_storage_dev_logs:
    driver: local
  
  # Development tools
  lucid_dev_tools_cache:
    driver: local
