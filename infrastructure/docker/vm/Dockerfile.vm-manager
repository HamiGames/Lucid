# LUCID RDP VM Manager - Virtual Machine Orchestration
# SPEC-4 Compliant: VM lifecycle management, resource allocation, isolation

FROM pickme/lucid:devcontainer-dind as base

LABEL org.lucid.plane="ops"
LABEL org.lucid.service="vm-manager"
LABEL org.lucid.stage="2"

WORKDIR /workspaces/Lucid

# Install VM management tools
RUN apt-get update && apt-get install -y \
    qemu-kvm \
    libvirt-daemon-system \
    libvirt-clients \
    bridge-utils \
    virt-manager \
    cloud-image-utils \
    genisoimage \
    python3-libvirt \
    python3-requests \
    python3-yaml \
    && rm -rf /var/lib/apt/lists/*

# Copy VM management scripts
COPY vm/vm_manager.py /workspaces/Lucid/vm/
COPY vm/__init__.py /workspaces/Lucid/vm/

# Install Python dependencies
COPY vm/requirements.vm.txt /workspaces/Lucid/vm/
RUN cd vm && pip install -r requirements.vm.txt

# Create VM data directory
RUN mkdir -p /data/vm/{templates,instances,images}
RUN chmod 755 /data/vm

# VM management configuration
COPY <<EOF /etc/lucid/vm-manager.conf
[global]
vm_data_dir = /data/vm
template_dir = /data/vm/templates
instance_dir = /data/vm/instances
image_dir = /data/vm/images

[resource_limits]
max_vms = 10
default_memory = 2048
default_cpus = 2
max_memory_per_vm = 8192
max_cpus_per_vm = 8

[networking]
bridge_name = br-lucid
subnet = 192.168.100.0/24
gateway = 192.168.100.1

[security]
isolate_vms = true
enable_sandboxing = true
require_approval = false
EOF

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 -c "import libvirt; conn = libvirt.open('qemu:///system'); conn.close()" || exit 1

# Expose VM management API
EXPOSE 8085

# Entry point
CMD ["python3", "vm/vm_manager.py"]
