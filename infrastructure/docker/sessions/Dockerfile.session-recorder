# LUCID Session Recorder - Distroless Build
# Records and processes session data with FFmpeg
# Multi-stage build for distroless deployment

# syntax=docker/dockerfile:1.7
FROM python:3.12-slim-bookworm AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libssl-dev \
    pkg-config \
    curl \
    ffmpeg \
    xvfb \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY sessions/core/requirements.recorder.txt /tmp/
RUN pip install --no-cache-dir --user -r /tmp/requirements.recorder.txt

# Copy source code
COPY sessions/core/recorder.py /app/
COPY sessions/core/ /app/sessions/core/
COPY sessions/__init__.py /app/sessions/

# Create non-root user
RUN groupadd --gid 1000 lucid && \
    useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home lucid

# Final distroless stage
FROM gcr.io/distroless/python3-debian12:nonroot

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Session Recorder for Lucid Session Pipeline (Distroless)" \
      org.lucid.plane="ops" \
      org.lucid.service="session-recorder" \
      org.lucid.layer="1" \
      org.lucid.expose="8093"

# Copy Python dependencies from builder
COPY --from=builder /root/.local /home/nonroot/.local

# Copy application code
COPY --from=builder /app /app

# Copy FFmpeg binaries
COPY --from=builder /usr/bin/ffmpeg /usr/bin/ffmpeg
COPY --from=builder /usr/bin/ffprobe /usr/bin/ffprobe

# Copy required libraries for FFmpeg
COPY --from=builder /usr/lib/x86_64-linux-gnu/ /usr/lib/x86_64-linux-gnu/

# Set working directory
WORKDIR /app

# Set Python path
ENV PYTHONPATH=/app:/home/nonroot/.local/lib/python3.12/site-packages

# Runtime environment
ENV RECORDING_PATH=/data/recordings \
    FFMPEG_PATH=/usr/bin/ffmpeg \
    XRDP_DISPLAY=:10 \
    HARDWARE_ACCELERATION=true \
    VIDEO_CODEC=h264_v4l2m2m \
    AUDIO_CODEC=opus \
    BITRATE=2000k \
    FPS=30 \
    PYTHONUNBUFFERED=1

# Create data directories
USER nonroot
RUN mkdir -p /data/recordings /tmp/.X11-unix

# Expose recorder port
EXPOSE 8093

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD ["python3", "-c", "import requests; requests.get('http://localhost:8093/health', timeout=5)"]

# Run the session recorder
ENTRYPOINT ["python3", "/app/recorder.py"]