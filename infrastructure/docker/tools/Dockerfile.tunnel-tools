# LUCID Tunnel Tools - Distroless Build
# Network security and tunneling utilities
# Multi-stage build for distroless deployment

# syntax=docker/dockerfile:1.7
FROM python:3.12-slim-bookworm AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libssl-dev \
    pkg-config \
    curl \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY ../../../02-network-security/tunnel-tools/requirements.txt /tmp/
RUN pip install --no-cache-dir --user -r /tmp/requirements.txt

# Copy source code
COPY 02-network-security/tunnel-tools/ /app/
COPY 02-network-security/ /app/network-security/

# Create non-root user
RUN groupadd --gid 1000 lucid && \
    useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home lucid

# Final distroless stage
FROM gcr.io/distroless/python3-debian12:nonroot

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Tunnel Tools for Lucid Network Security (Distroless)" \
      org.lucid.plane="ops" \
      org.lucid.service="tunnel-tools" \
      org.lucid.layer="0" \
      org.lucid.expose="7000"

# Copy Python dependencies from builder
COPY --from=builder /root/.local /home/nonroot/.local

# Copy application code
COPY --from=builder /app /app

# Copy netcat binary
COPY --from=builder /usr/bin/nc /usr/bin/nc

# Set working directory
WORKDIR /app

# Set Python path
ENV PYTHONPATH=/app:/home/nonroot/.local/lib/python3.12/site-packages

# Runtime environment
ENV TUNNEL_PORT=7000 \
    TUNNEL_MODE=client \
    PYTHONUNBUFFERED=1

# Create data directories
USER nonroot
RUN mkdir -p /var/lib/tunnel /run/lucid/onion

# Expose tunnel port
EXPOSE 7000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD ["/usr/bin/nc", "-z", "localhost", "7000"]

# Run the tunnel tools
ENTRYPOINT ["python3", "/app/tunnel-manager.py"]