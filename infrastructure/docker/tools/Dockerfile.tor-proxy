# LUCID Tor Proxy - Distroless Build
# Multi-onion Tor controller with dynamic onion support
# Multi-stage build for distroless deployment

# syntax=docker/dockerfile:1.7
FROM debian:bookworm-slim AS tor-builder

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Tor Proxy for Lucid Multi-Onion Network (Distroless)" \
      org.lucid.plane="ops" \
      org.lucid.service="tor-proxy" \
      org.lucid.layer="0" \
      org.lucid.expose="8888,9050,9051"

# Install Tor and build dependencies
RUN apt-get update && apt-get install -y \
    tor \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy Tor configuration and scripts
COPY 02-network-security/tor/ /app/tor/
COPY 02-network-security/tor/scripts/ /usr/local/bin/tor-scripts/

# Create Tor health check script
RUN echo '#!/bin/bash' > /usr/local/bin/tor-health && \
    echo 'curl -s --socks5-hostname localhost:9050 http://httpbin.org/ip >/dev/null && exit 0 || exit 1' >> /usr/local/bin/tor-health && \
    chmod +x /usr/local/bin/tor-health

# Create non-root user
RUN groupadd --gid 1000 lucid && \
    useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home lucid

# Final distroless stage
FROM gcr.io/distroless/base-debian12:nonroot

# Metadata for runtime container
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Tor Proxy for Lucid Multi-Onion Network (Distroless Runtime)" \
      org.lucid.plane="ops" \
      org.lucid.service="tor-proxy" \
      org.lucid.layer="0" \
      org.lucid.expose="8888,9050,9051"

# Copy Tor from builder
COPY --from=tor-builder /usr/bin/tor /usr/bin/tor
COPY --from=tor-builder /usr/sbin/tor /usr/sbin/tor
COPY --from=tor-builder /usr/lib/x86_64-linux-gnu/libevent-2.1.so.7 /usr/lib/x86_64-linux-gnu/
COPY --from=tor-builder /usr/lib/x86_64-linux-gnu/libssl.so.3 /usr/lib/x86_64-linux-gnu/
COPY --from=tor-builder /usr/lib/x86_64-linux-gnu/libcrypto.so.3 /usr/lib/x86_64-linux-gnu/
COPY --from=tor-builder /usr/lib/x86_64-linux-gnu/libz.so.1 /usr/lib/x86_64-linux-gnu/
COPY --from=tor-builder /usr/lib/x86_64-linux-gnu/libzstd.so.1 /usr/lib/x86_64-linux-gnu/
COPY --from=tor-builder /usr/lib/x86_64-linux-gnu/liblzma.so.5 /usr/lib/x86_64-linux-gnu/

# Copy utilities
COPY --from=tor-builder /usr/bin/curl /usr/bin/curl
COPY --from=tor-builder /usr/local/bin/tor-health /usr/local/bin/tor-health
COPY --from=tor-builder /usr/local/bin/tor-scripts/ /usr/local/bin/tor-scripts/

# Copy Tor configuration
COPY --from=tor-builder /app/tor/ /etc/tor/

# Create necessary directories
USER nonroot
RUN mkdir -p /var/lib/tor/hidden_service \
    /var/log/tor \
    /run/lucid/onion

# Runtime environment
ENV TOR_SOCKS_PORT=9050 \
    TOR_CONTROL_PORT=9051 \
    TOR_DATA_DIR=/var/lib/tor \
    ONION_COUNT=5 \
    CREATE_ONION=1

# Expose Tor ports
EXPOSE 8888 9050 9051

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=45s --retries=5 \
    CMD ["/usr/local/bin/tor-health"]

# Run Tor
ENTRYPOINT ["/usr/bin/tor", "-f", "/etc/tor/torrc"]
