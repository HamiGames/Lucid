# LUCID Server Tools - Distroless Build
# Core utilities and diagnostics for Lucid services
# Multi-stage build for distroless deployment

# syntax=docker/dockerfile:1.7
FROM python:3.12-slim-bookworm AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libssl-dev \
    pkg-config \
    curl \
    netcat-openbsd \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY common/requirements.txt /tmp/
RUN pip install --no-cache-dir --user -r /tmp/requirements.txt

# Copy source code
COPY common/ /app/common/
COPY scripts/ /app/scripts/

# Create non-root user
RUN groupadd --gid 1000 lucid && \
    useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home lucid

# Create health check script
RUN echo '#!/bin/bash' > /app/health-check.sh && \
    echo 'python3 /app/scripts/health-check.py' >> /app/health-check.sh && \
    chmod +x /app/health-check.sh

# Final distroless stage
FROM gcr.io/distroless/python3-debian12:nonroot

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Server Tools for Lucid Core Support Services (Distroless)" \
      org.lucid.plane="ops" \
      org.lucid.service="server-tools" \
      org.lucid.layer="0" \
      org.lucid.expose="none"

# Copy Python dependencies from builder
COPY --from=builder /root/.local /home/nonroot/.local

# Copy application code
COPY --from=builder /app /app

# Copy utilities
COPY --from=builder /usr/bin/curl /usr/bin/curl
COPY --from=builder /usr/bin/nc /usr/bin/nc
COPY --from=builder /usr/bin/ps /usr/bin/ps

# Set working directory
WORKDIR /app

# Set Python path
ENV PYTHONPATH=/app:/home/nonroot/.local/lib/python3.12/site-packages

# Runtime environment
ENV PYTHONUNBUFFERED=1

# Create data directories
USER nonroot
RUN mkdir -p /opt/lucid/scripts /run/lucid/onion /var/lib/tunnel

# Copy health check script
COPY --from=builder /app/health-check.sh /opt/lucid/scripts/health-check.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD ["/opt/lucid/scripts/health-check.sh"]

# Run the server tools (keep-alive)
ENTRYPOINT ["python3", "-c", "import time; print('[server-tools] Core support utilities ready - SPEC-4 compliant'); [time.sleep(86400) for _ in iter(int, 1)]"]
