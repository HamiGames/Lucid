# LUCID TRON Node Client - Distroless Build
# TRON blockchain integration for USDT-TRC20 and PayoutRouter
# Multi-stage build for distroless deployment

# syntax=docker/dockerfile:1.7
FROM python:3.12-slim-bookworm AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libssl-dev \
    pkg-config \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY payment-systems/tron-node/requirements.tron-client.txt /tmp/
RUN pip install --no-cache-dir --user -r /tmp/requirements.tron-client.txt

# Copy source code
COPY payment-systems/tron-node/ /app/payment-systems/tron-node/
COPY blockchain/__init__.py /app/blockchain/

# Create non-root user
RUN groupadd --gid 1000 lucid && \
    useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home lucid

# Final distroless stage
FROM gcr.io/distroless/python3-debian12:nonroot

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="TRON Node Client for Lucid TRON Integration (Distroless)" \
      org.lucid.plane="ops" \
      org.lucid.service="tron-node-client" \
      org.lucid.layer="1" \
      org.lucid.expose="8095"

# Copy Python dependencies from builder
COPY --from=builder /root/.local /home/nonroot/.local

# Copy application code
COPY --from=builder /app /app

# Set working directory
WORKDIR /app

# Set Python path
ENV PYTHONPATH=/app:/home/nonroot/.local/lib/python3.12/site-packages

# Runtime environment
ENV MONGODB_URL=mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin \
    TRON_NETWORK=shasta \
    TRON_RPC_URL=https://api.shasta.trongrid.io \
    PRIVATE_KEY="" \
    PAYOUT_ROUTER_V0_ADDRESS="" \
    PAYOUT_ROUTER_KYC_ADDRESS="" \
    USDT_TRC20_ADDRESS=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t \
    COMPLIANCE_SIGNER_KEY="" \
    PYTHONUNBUFFERED=1

# Create data directories
USER nonroot
RUN mkdir -p /data/tron /data/payouts

# Expose TRON client port
EXPOSE 8095

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD ["python3", "-c", "import requests; requests.get('http://localhost:8095/health', timeout=5)"]

# Run the TRON node client
ENTRYPOINT ["python3", "/app/payment-systems/tron-node/tron_client.py"]
