# LUCID MongoDB 7 - Distroless Build
# Professional MongoDB 7 with replica set support for Pi deployment
# Multi-stage build for distroless deployment with security hardening

# syntax=docker/dockerfile:1.7
FROM mongo:7.0 AS mongodb-builder

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="MongoDB 7 for Lucid Database Services (Distroless)" \
      org.lucid.plane="ops" \
      org.lucid.service="mongodb" \
      org.lucid.layer="0" \
      org.lucid.expose="27017"

# Build-time environment
ENV DEBIAN_FRONTEND=noninteractive \
    MONGO_VERSION=7.0 \
    MONGO_REPO="deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] http://repo.mongodb.org/apt/debian bookworm/mongodb-org/7.0 main"

# Install build dependencies and create user
RUN apt-get update && apt-get install -y --no-install-recommends \
        curl \
        ca-certificates \
        gnupg \
        lsb-release \
        bash \
        gosu \
        netcat-openbsd \
        jq \
        && rm -rf /var/lib/apt/lists/* \
        && apt-get clean

# Create MongoDB user and directories (if not already exists)
RUN (groupadd --gid 999 mongodb || true) && \
    (useradd --uid 999 --gid mongodb --shell /bin/bash --create-home mongodb || true) && \
    mkdir -p /data/db /data/configdb /var/log/mongodb && \
    chown -R mongodb:mongodb /data/db /data/configdb /var/log/mongodb

# Copy build environment script
COPY infrastructure/docker/databases/build-env.sh /tmp/build-env.sh
RUN chmod +x /tmp/build-env.sh

# Execute build environment script to generate .env files
RUN /tmp/build-env.sh

# Copy MongoDB configuration
COPY infrastructure/docker/databases/mongod.conf /etc/mongod.conf
COPY infrastructure/docker/databases/mongodb-init.js /docker-entrypoint-initdb.d/01-init.js
COPY infrastructure/docker/databases/mongodb-health.sh /usr/local/bin/mongodb-health
RUN chmod +x /usr/local/bin/mongodb-health

# Create initialization scripts
COPY database/init_collections.js /docker-entrypoint-initdb.d/02-collections.js
COPY scripts/init_mongodb_schema.js /docker-entrypoint-initdb.d/03-schema.js

# Set proper permissions
RUN chown -R mongodb:mongodb /docker-entrypoint-initdb.d && \
    chmod -R 755 /docker-entrypoint-initdb.d

# Stage 2: Distroless runtime
FROM gcr.io/distroless/base-debian12:latest

# Metadata for runtime container
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="MongoDB 7 for Lucid Database Services (Distroless Runtime)" \
      org.lucid.plane="ops" \
      org.lucid.service="mongodb" \
      org.lucid.layer="0" \
      org.lucid.expose="27017"

# Copy MongoDB binaries and libraries from builder
COPY --from=mongodb-builder /usr/bin/mongod /usr/bin/mongod
COPY --from=mongodb-builder /usr/bin/mongosh /usr/bin/mongosh
COPY --from=mongodb-builder /usr/bin/mongodump /usr/bin/mongodump
COPY --from=mongodb-builder /usr/bin/mongorestore /usr/bin/mongorestore
COPY --from=mongodb-builder /usr/bin/mongoexport /usr/bin/mongoexport
COPY --from=mongodb-builder /usr/bin/mongoimport /usr/bin/mongoimport

# Copy essential system tools (if available)
COPY --from=mongodb-builder /usr/local/bin/gosu /usr/bin/gosu
# Note: nc and jq may not be available in the base image

# Copy required dynamic libraries
COPY --from=mongodb-builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=mongodb-builder /lib/*-linux-*/libssl.so.3 /lib/
COPY --from=mongodb-builder /lib/*-linux-*/libcrypto.so.3 /lib/
COPY --from=mongodb-builder /lib/*-linux-*/libz.so.1 /lib/
COPY --from=mongodb-builder /lib/*-linux-*/liblzma.so.5 /lib/
COPY --from=mongodb-builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=mongodb-builder /lib/*-linux-*/libsnappy.so.1 /lib/
COPY --from=mongodb-builder /lib/*-linux-*/libyaml-0.so.2 /lib/
COPY --from=mongodb-builder /lib*/ld-linux-*.so.2 /lib64/

# Copy user and group information
COPY --from=mongodb-builder /etc/passwd /etc/passwd
COPY --from=mongodb-builder /etc/group /etc/group

# Copy CA certificates
COPY --from=mongodb-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Copy MongoDB configuration and scripts
COPY --from=mongodb-builder /etc/mongod.conf /etc/mongod.conf
COPY --from=mongodb-builder /docker-entrypoint-initdb.d /docker-entrypoint-initdb.d
COPY --from=mongodb-builder /usr/local/bin/mongodb-health /usr/local/bin/mongodb-health

# Environment files are handled by runtime environment variables

# Runtime environment for MongoDB
ENV MONGO_VERSION=7.0 \
    MONGO_INITDB_ROOT_USERNAME=lucid \
    MONGO_INITDB_ROOT_PASSWORD=lucid \
    MONGO_INITDB_DATABASE=lucid \
    MONGO_REPLICA_SET=rs0 \
    MONGO_OPLOG_SIZE=128 \
    MONGO_WIRED_TIGER_CACHE_SIZE=0.5

# Create data directories
VOLUME ["/data/db", "/data/configdb", "/var/log/mongodb"]

# Security and runtime configuration
EXPOSE 27017
USER mongodb
WORKDIR /data

# Health check
HEALTHCHECK --interval=10s --timeout=5s --start-period=15s --retries=10 \
    CMD ["/usr/local/bin/mongodb-health"]

# Default command for MongoDB
ENTRYPOINT ["/usr/bin/mongod", "--config", "/etc/mongod.conf"]
