# LUCID RESOURCE MONITOR - SPEC-1B Resource Access Tracking (Distroless)
# Professional resource monitoring for Pi deployment
# Multi-platform build for ARM64 Pi and AMD64 development

# syntax=docker/dockerfile:1.7
FROM python:3.11-slim AS resource-monitor-builder

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Resource Monitor for Lucid SPEC-1B Resource Access Tracking (Distroless)" \
      org.lucid.plane="ops" \
      org.lucid.service="resource-monitor" \
      org.lucid.layer="1" \
      org.lucid.expose="8100"

# Build-time environment for dependency installation
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies and system monitoring tools
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        ca-certificates \
        netcat-traditional \
        jq \
        gosu \
        # System monitoring dependencies
        python3-dev \
        python3-psutil \
        python3-netifaces \
        # System tools for monitoring
        htop \
        iotop \
        nethogs \
        # Network monitoring
        netstat-nat \
        ss \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && groupadd --gid 1000 lucid \
    && useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home lucid

# Set up application directory
WORKDIR /app
RUN chown -R lucid:lucid /app

# Install Python dependencies for resource monitoring
RUN pip install --no-cache-dir \
        "uvicorn[standard]>=0.24.0" \
        "fastapi>=0.104.0" \
        "pydantic>=2.0.0" \
        "httpx>=0.25.0" \
        "psutil>=5.9.0" \
        "netifaces>=0.11.0" \
        "cryptography>=41.0.0" \
        "structlog>=23.2.0" \
        "python-dotenv>=1.0.0" \
        "websockets>=11.0.0"

# Copy application code
COPY sessions/recorder/ /app/sessions/recorder/
COPY sessions/ /app/sessions/
COPY RDP/ /app/RDP/

# Create resource monitoring directories
RUN mkdir -p /var/log/lucid/resources /opt/lucid/monitoring /data/resources /tmp/resourcemon \
    && chown -R lucid:lucid /var/log/lucid /opt/lucid /data /tmp/resourcemon

# Create non-root user for runtime
RUN adduser --disabled-password --gecos '' resourcemon_user && \
    chown -R resourcemon_user:resourcemon_user /app /data /tmp/resourcemon /var/log/lucid /opt/lucid

# Stage 2: Distroless runtime with Python and resource monitoring dependencies
FROM gcr.io/distroless/python3-debian12:nonroot

# Metadata for runtime container
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Resource Monitor for Lucid SPEC-1B Resource Access Tracking (Distroless Runtime)" \
      org.lucid.plane="ops" \
      org.lucid.service="resource-monitor" \
      org.lucid.layer="1" \
      org.lucid.expose="8100"

# Copy Python installation and packages from builder
COPY --from=resource-monitor-builder /usr/local/lib/python3.11 /usr/local/lib/python3.11
COPY --from=resource-monitor-builder /usr/local/bin/python3.11 /usr/local/bin/python3.11
COPY --from=resource-monitor-builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn

# Copy system monitoring tools
COPY --from=resource-monitor-builder /usr/bin/htop /usr/bin/htop
COPY --from=resource-monitor-builder /usr/bin/iotop /usr/bin/iotop
COPY --from=resource-monitor-builder /usr/bin/nethogs /usr/bin/nethogs
COPY --from=resource-monitor-builder /usr/bin/ss /usr/bin/ss
COPY --from=resource-monitor-builder /usr/bin/curl /usr/bin/curl
COPY --from=resource-monitor-builder /bin/nc /bin/nc
COPY --from=resource-monitor-builder /usr/bin/jq /usr/bin/jq
COPY --from=resource-monitor-builder /usr/sbin/gosu /usr/sbin/gosu

# Copy required dynamic libraries (architecture-specific)
COPY --from=resource-monitor-builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=resource-monitor-builder /lib/*-linux-*/libssl.so.3 /lib/
COPY --from=resource-monitor-builder /lib/*-linux-*/libcrypto.so.3 /lib/
COPY --from=resource-monitor-builder /lib/*-linux-*/libz.so.1 /lib/
COPY --from=resource-monitor-builder /lib/*-linux-*/liblzma.so.5 /lib/
COPY --from=resource-monitor-builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=resource-monitor-builder /lib*/ld-linux-*.so.2 /lib64/

# Copy user and group information
COPY --from=resource-monitor-builder /etc/passwd /etc/passwd
COPY --from=resource-monitor-builder /etc/group /etc/group

# Copy CA certificates
COPY --from=resource-monitor-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Copy application with proper ownership
COPY --from=resource-monitor-builder --chown=resourcemon_user:resourcemon_user /app /app
COPY --from=resource-monitor-builder --chown=resourcemon_user:resourcemon_user /data /data
COPY --from=resource-monitor-builder --chown=resourcemon_user:resourcemon_user /tmp/resourcemon /tmp/resourcemon
COPY --from=resource-monitor-builder --chown=resourcemon_user:resourcemon_user /var/log/lucid /var/log/lucid
COPY --from=resource-monitor-builder --chown=resourcemon_user:resourcemon_user /opt/lucid /opt/lucid

# Runtime environment for resource monitor
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    RESOURCE_LOG_PATH=/var/log/lucid/resources \
    MONITORING_PATH=/opt/lucid/monitoring \
    XDG_RUNTIME_DIR=/tmp/resourcemon \
    MONITORING_INTERVAL=5.0 \
    CPU_THRESHOLD=80.0 \
    MEMORY_THRESHOLD=85.0 \
    DISK_THRESHOLD=90.0 \
    NETWORK_THRESHOLD=1000.0

# Security and runtime configuration
EXPOSE 8100
USER resourcemon_user
WORKDIR /app

# Default command for resource monitor service
ENTRYPOINT ["/usr/local/bin/python3.11", "/app/sessions/recorder/resource_monitor.py"]
