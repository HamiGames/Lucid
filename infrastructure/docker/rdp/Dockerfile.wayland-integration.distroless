# LUCID WAYLAND INTEGRATION - SPEC-1A Display Server Integration (Distroless)
# Professional Wayland display server integration for Pi deployment
# Multi-platform build for ARM64 Pi and AMD64 development

# syntax=docker/dockerfile:1.7
FROM python:3.11-slim AS wayland-builder

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Wayland Integration for Lucid SPEC-1A Display Server (Distroless)" \
      org.lucid.plane="ops" \
      org.lucid.service="wayland-integration" \
      org.lucid.layer="1" \
      org.lucid.expose="8095"

# Build-time environment for dependency installation
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies and Wayland components
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        ca-certificates \
        netcat-traditional \
        jq \
        gosu \
        # Wayland dependencies
        wayland-protocols \
        weston \
        libwayland-dev \
        wayland-utils \
        # Display server support
        xvfb \
        x11-utils \
        x11-xserver-utils \
        # Python system dependencies
        python3-dev \
        python3-pywayland \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && groupadd --gid 1000 lucid \
    && useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home lucid

# Set up application directory
WORKDIR /app
RUN chown -R lucid:lucid /app

# Install Python dependencies for Wayland integration
RUN pip install --no-cache-dir \
        "uvicorn[standard]>=0.24.0" \
        "fastapi>=0.104.0" \
        "pydantic>=2.0.0" \
        "httpx>=0.25.0" \
        "pywayland>=0.4.0" \
        "pycairo>=1.21.0" \
        "cryptography>=41.0.0" \
        "structlog>=23.2.0" \
        "python-dotenv>=1.0.0" \
        "websockets>=11.0.0"

# Copy application code
COPY RDP/recorder/ /app/RDP/recorder/
COPY RDP/ /app/RDP/
COPY sessions/ /app/sessions/

# Create Wayland directories
RUN mkdir -p /opt/lucid/wayland /opt/lucid/display /data/wayland /tmp/wayland \
    && chown -R lucid:lucid /opt/lucid /data /tmp/wayland

# Create non-root user for runtime
RUN adduser --disabled-password --gecos '' wayland_user && \
    chown -R wayland_user:wayland_user /app /data /tmp/wayland /opt/lucid

# Stage 2: Distroless runtime with Python and Wayland dependencies
FROM gcr.io/distroless/python3-debian12:nonroot

# Metadata for runtime container
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Wayland Integration for Lucid SPEC-1A Display Server (Distroless Runtime)" \
      org.lucid.plane="ops" \
      org.lucid.service="wayland-integration" \
      org.lucid.layer="1" \
      org.lucid.expose="8095"

# Copy Python installation and packages from builder
COPY --from=wayland-builder /usr/local/lib/python3.11 /usr/local/lib/python3.11
COPY --from=wayland-builder /usr/local/bin/python3.11 /usr/local/bin/python3.11
COPY --from=wayland-builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn

# Copy Wayland and system dependencies
COPY --from=wayland-builder /usr/bin/weston /usr/bin/weston
COPY --from=wayland-builder /usr/bin/wayland-info /usr/bin/wayland-info
COPY --from=wayland-builder /usr/bin/curl /usr/bin/curl
COPY --from=wayland-builder /bin/nc /bin/nc
COPY --from=wayland-builder /usr/bin/jq /usr/bin/jq
COPY --from=wayland-builder /usr/sbin/gosu /usr/sbin/gosu

# Copy Wayland libraries
COPY --from=wayland-builder /usr/lib/*/libwayland-client.so.0 /usr/lib/
COPY --from=wayland-builder /usr/lib/*/libwayland-server.so.0 /usr/lib/
COPY --from=wayland-builder /usr/lib/*/libwayland-egl.so.1 /usr/lib/
COPY --from=wayland-builder /usr/lib/*/libwayland-cursor.so.0 /usr/lib/

# Copy required dynamic libraries (architecture-specific)
COPY --from=wayland-builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=wayland-builder /lib/*-linux-*/libssl.so.3 /lib/
COPY --from=wayland-builder /lib/*-linux-*/libcrypto.so.3 /lib/
COPY --from=wayland-builder /lib/*-linux-*/libz.so.1 /lib/
COPY --from=wayland-builder /lib/*-linux-*/liblzma.so.5 /lib/
COPY --from=wayland-builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=wayland-builder /lib*/ld-linux-*.so.2 /lib64/

# Copy user and group information
COPY --from=wayland-builder /etc/passwd /etc/passwd
COPY --from=wayland-builder /etc/group /etc/group

# Copy CA certificates
COPY --from=wayland-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Copy application with proper ownership
COPY --from=wayland-builder --chown=wayland_user:wayland_user /app /app
COPY --from=wayland-builder --chown=wayland_user:wayland_user /data /data
COPY --from=wayland-builder --chown=wayland_user:wayland_user /tmp/wayland /tmp/wayland
COPY --from=wayland-builder --chown=wayland_user:wayland_user /opt/lucid /opt/lucid

# Runtime environment for Wayland integration
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    WAYLAND_DISPLAY=wayland-0 \
    WESTON_DISPLAY=:1 \
    WAYLAND_PATH=/opt/lucid/wayland \
    DISPLAY_PATH=/opt/lucid/display \
    XDG_RUNTIME_DIR=/tmp/wayland

# Security and runtime configuration
EXPOSE 8095
USER wayland_user
WORKDIR /app

# Default command for Wayland integration service
ENTRYPOINT ["/usr/local/bin/python3.11", "/app/RDP/recorder/wayland_integration.py"]
