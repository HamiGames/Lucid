name: lucid-dev

# Build the dev shell image from your Dockerfile
build:
  context: ..
  dockerfile: infrastructure/containers/infrastructure/containers/.devcontainer/Dockerfile

workspaceFolder: /workspaces/Lucid
remoteUser: root
overrideCommand: true

# Use your Buildx-backed docker-container builder
dockerContext: lucid_builder

# Compose stacks to run alongside the dev shell (paths are relative to this file)
dockerComposeFile:
  - ../infrastructure/compose/compose/lucid-dev.yaml
  - ../infrastructure/compose/compose/lucid-blockchain-core.dev.yaml

# The container VS Code will attach to (must exist in the compose files above)
service: devcontainer

# Extra services to ensure are running (must exist in the compose files)
runServices:
  - devcontainer
  - lucid_mongo
  - lucid_api
  - tor-proxy
  - api-gateway
  - tunnel-tools
  - server-tools
  # - blockchain-node   # uncomment only if this service actually exists

# Put the dev shell on the same network as the stack
runArgs:
  - "--platform=linux/arm64"
  - "--network=lucid-dev_lucid_net"

# Pass the same .env used by your compose stacks to the dev shell
envFile: ../infrastructure/compose/compose/.env

containerEnv:
  PYTHONUNBUFFERED: "1"
  DOCKER_DEFAULT_PLATFORM: linux/arm64

# Mount your repo in-container
mounts:
  - source=${localWorkspaceFolder},target=/workspaces/Lucid,type=bind

# Host-side check before the container is built (runs on the host, not in the container)
initializeCommand: |
  set -e
  # ensure the shared network exists before compose/Buildx touch it
  docker network inspect lucid-dev_lucid_net >/dev/null 2>&1 || \
    docker network create --driver bridge --attachable lucid-dev_lucid_net
  # ensure the chosen docker context exists/selected
  docker buildx ls >/dev/null 2>&1 || true
  docker context ls >/dev/null 2>&1 || true

# Runs inside the dev container after itâ€™s created
postCreateCommand: |
  pre-commit install || true

# (Optional) also runs in-container on every start
# postStartCommand: echo "Dev container started"

forwardPorts:
  - 8080
  - 8081
  - 27017
  - 9050
  - 9051

customizations:
  vscode:
    extensions:
      - ms-python.python
      - ms-python.vscode-pylance
      - astral-sh.ruff
      - ms-python.black-formatter
      - ms-vscode-remote.remote-containers
      - ms-azuretools.vscode-docker

