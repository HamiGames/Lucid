# Lucid Java Base Distroless Image
# Multi-stage build optimized for production deployment
# Supports ARM64 (Raspberry Pi) and AMD64 architectures
# LUCID-STRICT Mode: Enhanced security with minimal attack surface

# syntax=docker/dockerfile:1.7
FROM openjdk:17-jdk-slim AS java-builder

# Build arguments for multi-platform support
ARG BUILDPLATFORM
ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Java base distroless image for Lucid services" \
      org.lucid.plane="infrastructure" \
      org.lucid.service="java-base" \
      org.lucid.stage="base"

# Set build environment
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

# Install build dependencies and Maven
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    pkg-config \
    git \
    curl \
    ca-certificates \
    maven \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set JAVA_HOME after Java is installed
ENV JAVA_HOME=/usr/local/openjdk-17 \
    MAVEN_HOME=/usr/share/maven \
    PATH=/usr/local/openjdk-17/bin:$PATH

# Create application directory
WORKDIR /app

# Copy Maven/Gradle files for dependency resolution (from base directory)
COPY infrastructure/containers/base/pom.xml /app/
COPY infrastructure/containers/base/build.gradle /app/
COPY infrastructure/containers/base/gradle.properties /app/

# Download dependencies (if Maven files exist)
RUN if [ -f pom.xml ]; then mvn dependency:go-offline -B; fi

# Stage 2: Distroless runtime (ARM64 optimized for Pi deployment)
FROM gcr.io/distroless/java17-debian12:latest

# Metadata for runtime container
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless-arm64" \
      description="Java base distroless runtime for Lucid services (ARM64 Pi optimized)" \
      org.lucid.plane="infrastructure" \
      org.lucid.service="java-base" \
      org.lucid.stage="runtime" \
      org.lucid.target="raspberry-pi"

# Set runtime environment
ENV LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

# Copy essential system libraries (architecture-specific)
COPY --from=java-builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=java-builder /lib/*-linux-*/libssl.so.3 /lib/
COPY --from=java-builder /lib/*-linux-*/libcrypto.so.3 /lib/
COPY --from=java-builder /lib/*-linux-*/libz.so.1 /lib/
COPY --from=java-builder /lib/*-linux-*/liblzma.so.5 /lib/
COPY --from=java-builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=java-builder /lib/*-linux-*/libffi.so.8 /lib/
COPY --from=java-builder /lib*/ld-linux-*.so.2 /lib64/

# Copy CA certificates
COPY --from=java-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Create application directory
WORKDIR /app

# Set user to nonroot for security
USER nonroot:nonroot

# Expose common ports for Lucid Java services
EXPOSE 8080 8081 8082 8083 8084 8085 8086 8087 8088 8089 8443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["java", "-version"]

# Default command
CMD ["java", "-version"]
