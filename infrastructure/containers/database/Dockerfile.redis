# LUCID Redis Container - SPEC-1B Implementation
# Distroless container for Redis cache

# syntax=docker/dockerfile:1.7

# Stage 1: Builder
FROM redis:7.2 AS builder

# Set build arguments
ARG BUILDPLATFORM
ARG TARGETPLATFORM

# Install additional tools for customization
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create custom Redis configuration
RUN echo "port 6379\nbind 0.0.0.0\nprotected-mode yes\nrequirepass lucid_redis_password\nmaxmemory 512mb\nmaxmemory-policy allkeys-lru\nsave 900 1\nsave 300 10\nsave 60 10000\nappendonly yes\nappendfsync everysec\nno-appendfsync-on-rewrite no\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\nlua-time-limit 5000\nslowlog-log-slower-than 10000\nslowlog-max-len 128\nnotify-keyspace-events Ex" > /etc/redis.conf

# Stage 2: Runtime (Distroless)
FROM gcr.io/distroless/base-debian12:nonroot

# Copy Redis binary and configuration
COPY --from=builder /usr/local/bin/redis-server /usr/local/bin/redis-server
COPY --from=builder /usr/local/bin/redis-cli /usr/local/bin/redis-cli
COPY --from=builder /etc/redis.conf /etc/redis.conf

# Set environment variables
ENV REDIS_PASSWORD=lucid_redis_password

# Set working directory
WORKDIR /data

# Create non-root user
USER nonroot

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/usr/local/bin/redis-cli", "-a", "lucid_redis_password", "ping"]

# Expose port
EXPOSE 6379

# Run Redis
ENTRYPOINT ["/usr/local/bin/redis-server", "/etc/redis.conf"]
