# LUCID Layer 2 Complete - SPEC-1B Service Integration
# Complete Layer 2 implementation with RDP server and blockchain deployment
# Multi-platform deployment for ARM64 Pi and AMD64 development

version: '3.8'

# Common configurations
x-lucid-common: &lucid-common
  restart: unless-stopped
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  labels:
    - "org.lucid.project=lucid"
    - "org.lucid.layer=2"
    - "org.lucid.component=service"

x-lucid-env: &lucid-env
  LUCID_NODE_ID: ${LUCID_NODE_ID:-lucid-node-001}
  LUCID_ENVIRONMENT: ${LUCID_ENVIRONMENT:-development}
  LUCID_LOG_LEVEL: ${LUCID_LOG_LEVEL:-INFO}
  TZ: ${TZ:-UTC}

x-lucid-layer2-service: &lucid-layer2-service
  <<: *lucid-common
  networks:
    - lucid_core_net
  depends_on:
    lucid_mongo:
      condition: service_healthy

# Networks
networks:
  lucid_core_net:
    name: lucid_core_net
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/24
          gateway: 172.21.0.1
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.network=core"

  lucid_rdp_net:
    name: lucid_core_net # Changed to lucid_core_net for consistency
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/24
          gateway: 172.23.0.1
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.network=rdp"

  lucid_blockchain_deploy_net:
    name: lucid_core_net # Changed to lucid_core_net for consistency
    driver: bridge
    ipam:
      config:
        - subnet: 172.24.0.0/24
          gateway: 172.24.0.1
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.network=blockchain-deploy"

# Volumes
volumes:
  lucid_mongo_data:
    name: lucid_mongo_data
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.volume=mongodb"

  rdp_sessions:
    name: rdp_sessions
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.volume=rdp-sessions"

  rdp_recordings:
    name: rdp_recordings
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.volume=rdp-recordings"

  rdp_temp:
    name: rdp_temp
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.volume=rdp-temp"

  contract_data:
    name: contract_data
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.volume=contract-data"

  deployment_temp:
    name: deployment_temp
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.volume=deployment-temp"

# Services
services:
  # MongoDB Database (shared with Layer 1)
  lucid_mongo:
    <<: *lucid-layer2-service
    image: mongo:7.0
    container_name: lucid_mongo
    profiles: ["database", "layer2"]
    environment:
      <<: *lucid-env
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-lucid}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-lucid}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-lucid}
    volumes:
      - lucid_mongo_data:/data/db
      - ./database/init_collections.js:/docker-entrypoint-initdb.d/init_collections.js:ro
    ports:
      - "27017:27017"
    networks:
      lucid_core_net:
        aliases: [lucid_mongo, mongo]
        ipv4_address: 172.21.0.10
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # RDP Server Manager
  rdp-server-manager:
    <<: *lucid-layer2-service
    image: pickme/lucid:rdp-server-manager
    container_name: lucid_rdp_server_manager
    profiles: ["rdp-server", "layer2"]
    pull_policy: always
    environment:
      <<: *lucid-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      RDP_SESSIONS_PATH: /data/sessions
      RDP_RECORDINGS_PATH: /data/recordings
    volumes:
      - rdp_sessions:/data/sessions
      - rdp_recordings:/data/recordings
      - rdp_temp:/tmp/rdp
    ports:
      - "8087:8087" # Internal API
      - "3389:3389" # RDP Port
    networks:
      lucid_core_net:
        aliases: [rdp-server-manager, rdp-manager]
        ipv4_address: 172.23.0.10
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # xrdp Integration
  xrdp-integration:
    <<: *lucid-layer2-service
    image: pickme/lucid:xrdp-integration
    container_name: lucid_xrdp_integration
    profiles: ["rdp-server", "layer2"]
    pull_policy: always
    environment:
      <<: *lucid-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      XRDP_DISPLAY: ${XRDP_DISPLAY:-:10}
      XRDP_PORT: ${XRDP_PORT:-3389}
    volumes:
      - rdp_sessions:/data/sessions
      - rdp_temp:/tmp/rdp
    ports:
      - "8088:8088" # Internal API
      - "3389:3389" # xrdp Port
    networks:
      lucid_core_net:
        aliases: [xrdp-integration, xrdp]
        ipv4_address: 172.23.0.11
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
      rdp-server-manager:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Contract Deployment
  contract-deployment:
    <<: *lucid-layer2-service
    image: pickme/lucid:contract-deployment
    container_name: lucid_contract_deployment
    profiles: ["blockchain-deployment", "layer2"]
    pull_policy: always
    environment:
      <<: *lucid-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      TRON_NETWORK: ${TRON_NETWORK:-shasta}
      TRON_RPC_URL: ${TRON_RPC_URL:-https://api.shasta.trongrid.io}
      PRIVATE_KEY: ${PRIVATE_KEY:-}
      CONTRACT_STORAGE_PATH: /data/contracts
    volumes:
      - contract_data:/data/contracts
      - deployment_temp:/tmp/deployment
    ports:
      - "8090:8090"
    networks:
      lucid_core_net:
        aliases: [contract-deployment, contract-deploy]
        ipv4_address: 172.24.0.10
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Admin UI
  admin-ui:
    <<: *lucid-layer2-service
    image: pickme/lucid:admin-ui
    container_name: lucid_admin_ui
    profiles: ["admin", "layer2"]
    pull_policy: always
    environment:
      <<: *lucid-env
      ADMIN_PORT: ${ADMIN_PORT:-8096}
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      SESSION_RECORDER_URL: ${SESSION_RECORDER_URL:-http://session-recorder:8093}
      CHAIN_CLIENT_URL: ${CHAIN_CLIENT_URL:-http://on-system-chain-client:8094}
      TRON_CLIENT_URL: ${TRON_CLIENT_URL:-http://tron-node-client:8095}
      TOR_SOCKS_PORT: ${TOR_SOCKS_PORT:-9050}
    volumes:
      - rdp_sessions:/data/sessions:ro
      - rdp_recordings:/data/recordings:ro
    ports:
      - "8096:8096"
    networks:
      lucid_core_net:
        aliases: [admin-ui, admin]
        ipv4_address: 172.21.0.20
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
      rdp-server-manager:
        condition: service_healthy
      contract-deployment:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8096/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Session Host Manager (if exists)
  session-host-manager:
    <<: *lucid-layer2-service
    image: pickme/lucid:session-host-manager
    container_name: lucid_session_host_manager
    profiles: ["rdp-server", "layer2"]
    pull_policy: always
    environment:
      <<: *lucid-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      SESSION_HOST_PATH: /data/sessions
    volumes:
      - rdp_sessions:/data/sessions
      - rdp_temp:/tmp/session-host
    ports:
      - "8089:8089"
    networks:
      lucid_core_net:
        aliases: [session-host-manager, session-host]
        ipv4_address: 172.23.0.12
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
      rdp-server-manager:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Contract Compiler (if exists)
  contract-compiler:
    <<: *lucid-layer2-service
    image: pickme/lucid:contract-compiler
    container_name: lucid_contract_compiler
    profiles: ["blockchain-deployment", "layer2"]
    pull_policy: always
    environment:
      <<: *lucid-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      COMPILER_STORAGE_PATH: /data/compiler
    volumes:
      - contract_data:/data/contracts
      - deployment_temp:/tmp/compiler
    ports:
      - "8091:8091"
    networks:
      lucid_core_net:
        aliases: [contract-compiler, compiler]
        ipv4_address: 172.24.0.11
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
      contract-deployment:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Deployment Orchestrator (if exists)
  deployment-orchestrator:
    <<: *lucid-layer2-service
    image: pickme/lucid:deployment-orchestrator
    container_name: lucid_deployment_orchestrator
    profiles: ["blockchain-deployment", "layer2"]
    pull_policy: always
    environment:
      <<: *lucid-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      ORCHESTRATOR_STORAGE_PATH: /data/orchestrator
    volumes:
      - contract_data:/data/contracts
      - deployment_temp:/tmp/orchestrator
    ports:
      - "8092:8092"
    networks:
      lucid_core_net:
        aliases: [deployment-orchestrator, orchestrator]
        ipv4_address: 172.24.0.12
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
      contract-deployment:
        condition: service_healthy
      contract-compiler:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s