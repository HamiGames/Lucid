# LUCID Layer 1 Complete - SPEC-1B Core Infrastructure
# Complete Layer 1 implementation with all required modules
# Multi-platform deployment for ARM64 Pi and AMD64 development

version: '3.8'

# Common configurations
x-lucid-common: &lucid-common
  restart: unless-stopped
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  labels:
    - "org.lucid.project=lucid"
    - "org.lucid.layer=1"
    - "org.lucid.component=core"

x-lucid-env: &lucid-env
  LUCID_NODE_ID: ${LUCID_NODE_ID:-lucid-node-001}
  LUCID_ENVIRONMENT: ${LUCID_ENVIRONMENT:-development}
  LUCID_LOG_LEVEL: ${LUCID_LOG_LEVEL:-INFO}
  TZ: ${TZ:-UTC}

x-lucid-layer1-service: &lucid-layer1-service
  <<: *lucid-common
  networks:
    - lucid_core_net
  depends_on:
    lucid_mongo:
      condition: service_healthy

# Networks
networks:
  lucid_core_net:
    name: lucid_core_net
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/24
          gateway: 172.21.0.1
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.network=core"

  lucid_blockchain_net:
    name: lucid_core_net # Changed to lucid_core_net for consistency
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24
          gateway: 172.22.0.1
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.network=blockchain"

# Volumes
volumes:
  lucid_mongo_data:
    name: lucid_mongo_data
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.volume=mongodb"

  lucid_sessions_data:
    name: lucid_sessions_data
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.volume=sessions"

  lucid_recordings_data:
    name: lucid_recordings_data
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.volume=recordings"

  lucid_chain_data:
    name: lucid_chain_data
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.volume=chain"

  lucid_encrypted_data:
    name: lucid_encrypted_data
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.volume=encrypted"

# Services
services:
  # MongoDB Database
  lucid_mongo:
    <<: *lucid-layer1-service
    image: mongo:7.0
    container_name: lucid_mongo
    profiles: ["database", "layer1"]
    environment:
      <<: *lucid-env
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-lucid}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-lucid}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-lucid}
    volumes:
      - lucid_mongo_data:/data/db
      - ./database/init_collections.js:/docker-entrypoint-initdb.d/init_collections.js:ro
    ports:
      - "27017:27017"
    networks:
      lucid_core_net:
        aliases: [lucid_mongo, mongo]
        ipv4_address: 172.21.0.10
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Session Recorder
  session-recorder:
    <<: *lucid-layer1-service
    image: pickme/lucid:session-recorder
    container_name: lucid_session_recorder
    profiles: ["session-pipeline", "layer1"]
    pull_policy: always
    environment:
      <<: *lucid-env
      RECORDING_PATH: /data/recordings
      FFMPEG_PATH: /usr/bin/ffmpeg
      XRDP_DISPLAY: :10
      HARDWARE_ACCELERATION: "true"
      VIDEO_CODEC: h264_v4l2m2m
      AUDIO_CODEC: opus
      BITRATE: 2000k
      FPS: 30
    volumes:
      - lucid_recordings_data:/data/recordings
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
    ports:
      - "8093:8093"
    networks:
      lucid_core_net:
        aliases: [session-recorder, recorder]
        ipv4_address: 172.21.0.11
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8093/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # On-System Chain Client
  on-system-chain-client:
    <<: *lucid-layer1-service
    image: pickme/lucid:on-system-chain-client
    container_name: lucid_on_system_chain_client
    profiles: ["blockchain", "layer1"]
    pull_policy: always
    environment:
      <<: *lucid-env
      CHAIN_RPC_URL: ${CHAIN_RPC_URL:-http://localhost:8545}
      CHAIN_ID: ${CHAIN_ID:-1337}
      LUCID_ANCHORS_ADDRESS: ${LUCID_ANCHORS_ADDRESS:-}
      LUCID_CHUNK_STORE_ADDRESS: ${LUCID_CHUNK_STORE_ADDRESS:-}
      PRIVATE_KEY: ${PRIVATE_KEY:-}
    volumes:
      - lucid_chain_data:/data/chain
    ports:
      - "8094:8094"
    networks:
      lucid_core_net:
        aliases: [on-system-chain-client, chain-client]
        ipv4_address: 172.21.0.12
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8094/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # TRON Node Client
  tron-node-client:
    <<: *lucid-layer1-service
    image: pickme/lucid:tron-node-client
    container_name: lucid_tron_node_client
    profiles: ["blockchain", "layer1"]
    pull_policy: always
    environment:
      <<: *lucid-env
      TRON_NETWORK: ${TRON_NETWORK:-shasta}
      TRON_RPC_URL: ${TRON_RPC_URL:-https://api.shasta.trongrid.io}
      PRIVATE_KEY: ${PRIVATE_KEY:-}
      PAYOUT_ROUTER_V0_ADDRESS: ${PAYOUT_ROUTER_V0_ADDRESS:-}
      PAYOUT_ROUTER_KYC_ADDRESS: ${PAYOUT_ROUTER_KYC_ADDRESS:-}
      USDT_TRC20_ADDRESS: ${USDT_TRC20_ADDRESS:-TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t}
      COMPLIANCE_SIGNER_KEY: ${COMPLIANCE_SIGNER_KEY:-}
    volumes:
      - lucid_chain_data:/data/tron
    ports:
      - "8095:8095"
    networks:
      lucid_core_net:
        aliases: [tron-node-client, tron-client]
        ipv4_address: 172.21.0.13
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8095/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Session Chunker
  session-chunker:
    <<: *lucid-layer1-service
    image: pickme/lucid:session-chunker
    container_name: lucid_session_chunker
    profiles: ["session-pipeline", "layer1"]
    pull_policy: always
    environment:
      <<: *lucid-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      CHUNK_SIZE_MB: ${CHUNK_SIZE_MB:-8}
      COMPRESSION_LEVEL: ${COMPRESSION_LEVEL:-3}
      CHUNK_STORAGE_PATH: /data/sessions
    volumes:
      - lucid_sessions_data:/data/sessions
      - lucid_recordings_data:/data/recordings:ro
    ports:
      - "8091:8091"
    networks:
      lucid_core_net:
        aliases: [session-chunker, chunker]
        ipv4_address: 172.21.0.14
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Session Encryptor
  session-encryptor:
    <<: *lucid-layer1-service
    image: pickme/lucid:session-encryptor
    container_name: lucid_session_encryptor
    profiles: ["session-pipeline", "layer1"]
    pull_policy: always
    environment:
      <<: *lucid-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      ENCRYPTION_ALGORITHM: ${ENCRYPTION_ALGORITHM:-XChaCha20-Poly1305}
      KEY_DERIVATION: ${KEY_DERIVATION:-HKDF-BLAKE2b}
      ENCRYPTED_STORAGE_PATH: /data/encrypted
    volumes:
      - lucid_sessions_data:/data/sessions:ro
      - lucid_encrypted_data:/data/encrypted
    ports:
      - "8092:8092"
    networks:
      lucid_core_net:
        aliases: [session-encryptor, encryptor]
        ipv4_address: 172.21.0.15
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Merkle Builder
  merkle-builder:
    <<: *lucid-layer1-service
    image: pickme/lucid:merkle-builder
    container_name: lucid_merkle_builder
    profiles: ["session-pipeline", "layer1"]
    pull_policy: always
    environment:
      <<: *lucid-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      MERKLE_ALGORITHM: ${MERKLE_ALGORITHM:-BLAKE3}
      CHAIN_CLIENT_URL: ${CHAIN_CLIENT_URL:-http://on-system-chain-client:8094}
    volumes:
      - lucid_encrypted_data:/data/encrypted:ro
      - lucid_chain_data:/data/merkle
    ports:
      - "8090:8090"
    networks:
      lucid_core_net:
        aliases: [merkle-builder, merkle]
        ipv4_address: 172.21.0.16
      lucid-dev_lucid_net: {} # External connectivity
    depends_on:
      lucid_mongo:
        condition: service_healthy
      on-system-chain-client:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
