# LUCID Layer 2 Simple Services - RDP Server & Blockchain Deployment
# Simple implementation without distroless complexity
# Generated: 2025-10-05

# Import base configuration from lucid-dev.yaml
include:
  - lucid-dev.yaml

# Layer 2 Environment Template
x-lucid-layer2-env: &lucid-layer2-env
  LUCID_LAYER: 2
  LUCID_PHASE: service-integration
  LUCID_COMPONENTS: rdp-server,blockchain-deployment

# Layer 2 Service Configuration
x-lucid-layer2-service: &lucid-layer2-service
  restart: unless-stopped
  logging:
    driver: json-file
    options:
      max-size: "10m"
      max-file: "3"
  labels:
    - "org.lucid.layer=2"
    - "org.lucid.phase=service-integration"
    - "org.lucid.plane=ops"

# Layer 2 Persistent Volumes
volumes:
  # RDP Server Volumes
  rdp_sessions:
    name: lucid-layer2_rdp_sessions
    driver: local
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.service=rdp-server"
  
  rdp_recordings:
    name: lucid-layer2_rdp_recordings
    driver: local
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.service=rdp-server"
  
  # Blockchain Deployment Volumes
  contract_artifacts:
    name: lucid-layer2_contract_artifacts
    driver: local
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.service=blockchain-deployment"
  
  deployment_logs:
    name: lucid-layer2_deployment_logs
    driver: local
    labels:
      - "org.lucid.layer=2"
      - "org.lucid.service=blockchain-deployment"

# Layer 2 Services
services:
  # RDP Server Manager
  rdp-server-manager:
    <<: *lucid-layer2-service
    image: pickme/lucid:rdp-server-manager
    container_name: lucid_rdp_server_manager
    profiles: ["rdp-server", "layer2"]
    pull_policy: always
    environment:
      <<: *lucid-layer2-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      RDP_SESSIONS_PATH: /data/sessions
      RDP_RECORDINGS_PATH: /data/recordings
      RDP_DISPLAY_PATH: /data/display
      XRDP_PORT: 3389
      MAX_CONCURRENT_SESSIONS: 5
      SESSION_ORCHESTRATOR_URL: http://session-orchestrator:8084
    volumes:
      - rdp_sessions:/data/sessions
      - rdp_recordings:/data/recordings
    networks:
      lucid_core_net:
        aliases: [rdp-server-manager, rdp-manager]
        ipv4_address: 172.23.0.10
    depends_on:
      lucid_mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Contract Deployment
  contract-deployment:
    <<: *lucid-layer2-service
    image: pickme/lucid:contract-deployment
    container_name: lucid_contract_deployment
    profiles: ["blockchain-deployment", "layer2"]
    pull_policy: always
    environment:
      <<: *lucid-layer2-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      TRON_NETWORK: ${TRON_NETWORK:-shasta}
      TRON_RPC_URL: ${TRON_RPC_URL:-https://api.shasta.trongrid.io}
      CONTRACT_ARTIFACTS_PATH: /data/contracts
      DEPLOYMENT_LOG_PATH: /data/logs
    volumes:
      - contract_artifacts:/data/contracts
      - deployment_logs:/data/logs
    networks:
      lucid_core_net:
        aliases: [contract-deployment, deployment]
        ipv4_address: 172.24.0.10
    depends_on:
      lucid_mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
