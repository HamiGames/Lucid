# LUCID Layer 1 Services - Session Pipeline & Authentication
# Development Infrastructure Extension
# SPEC-4 compliant: Layer 1 Core Infrastructure
# Generated: 2025-10-04

# Import base configuration from lucid-dev.yaml
include:
  - lucid-dev.yaml

# SPEC-4 Layer 1 Environment Template
x-lucid-layer1-env: &lucid-layer1-env
  LUCID_LAYER: 1
  LUCID_PHASE: foundation
  LUCID_COMPONENTS: session-pipeline,authentication

# SPEC-4 Layer 1 Service Configuration
x-lucid-layer1-service: &lucid-layer1-service
  <<: *lucid-common
  restart: unless-stopped
  logging:
    driver: json-file
    options:
      max-size: "10m"
      max-file: "3"
  labels:
    - "org.lucid.layer=1"
    - "org.lucid.phase=foundation"
    - "org.lucid.plane=ops"

# Layer 1 Persistent Volumes
volumes:
  session_chunks:
    name: lucid-layer1_session_chunks
    driver: local
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.service=session-pipeline"
      - "org.lucid.component=chunker"
  
  encryption_keys:
    name: lucid-layer1_encryption_keys
    driver: local
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.service=session-pipeline"
      - "org.lucid.component=encryptor"
  
  merkle_trees:
    name: lucid-layer1_merkle_trees
    driver: local
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.service=session-pipeline"
      - "org.lucid.component=merkle-builder"

services:
  # =============================================================================
  # LAYER 1: SESSION PIPELINE SERVICES
  # =============================================================================

  # Session Chunker Service
  session-chunker:
    <<: *lucid-layer1-service
    container_name: lucid_session_chunker
    build:
      context: ../../
      dockerfile: sessions/core/Dockerfile.chunker
    image: pickme/lucid:session-chunker
    env_file:
      - ../../sessions/core/.env.chunker
    environment:
      <<: *lucid-layer1-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
    volumes:
      - session_chunks:/data/chunks
      - chunker_temp:/tmp/chunker
    networks:
      lucid_core_net:
        aliases: [chunker, session-chunker]
        ipv4_address: 172.21.0.20
    depends_on:
      lucid_mongo:
        condition: service_healthy
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8081/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    labels:
      - "org.lucid.service=session-chunker"
      - "org.lucid.expose=8081"

  # Session Encryptor Service
  session-encryptor:
    <<: *lucid-layer1-service
    container_name: lucid_session_encryptor
    build:
      context: ../../
      dockerfile: sessions/encryption/Dockerfile.encryptor
    image: pickme/lucid:session-encryptor
    env_file:
      - ../../sessions/encryption/.env.encryptor
    environment:
      <<: *lucid-layer1-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
    volumes:
      - encryption_keys:/data/keys
      - encryptor_temp:/tmp/encryption
    secrets:
      - master_encryption_key
    networks:
      lucid_core_net:
        aliases: [encryptor, session-encryptor]
        ipv4_address: 172.21.0.21
    depends_on:
      lucid_mongo:
        condition: service_healthy
      session-chunker:
        condition: service_healthy
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8082/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    labels:
      - "org.lucid.service=session-encryptor"
      - "org.lucid.expose=8082"

  # Merkle Tree Builder Service
  merkle-builder:
    <<: *lucid-layer1-service
    container_name: lucid_merkle_builder
    build:
      context: ../../
      dockerfile: sessions/core/Dockerfile.merkle_builder
    image: pickme/lucid:merkle-builder
    env_file:
      - ../../sessions/core/.env.merkle_builder
    environment:
      <<: *lucid-layer1-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
    volumes:
      - merkle_trees:/data/merkle_trees
      - merkle_temp:/tmp/merkle_build
    networks:
      lucid_core_net:
        aliases: [merkle-builder, merkle]
        ipv4_address: 172.21.0.22
    depends_on:
      lucid_mongo:
        condition: service_healthy
      session-encryptor:
        condition: service_healthy
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8083/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    labels:
      - "org.lucid.service=merkle-builder"
      - "org.lucid.expose=8083"

  # Session Orchestrator Service
  session-orchestrator:
    <<: *lucid-layer1-service
    container_name: lucid_session_orchestrator
    build:
      context: ../../
      dockerfile: sessions/core/Dockerfile.orchestrator
    image: pickme/lucid:session-orchestrator
    env_file:
      - ../../sessions/core/.env.orchestrator
    environment:
      <<: *lucid-layer1-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
      CHUNKER_SERVICE_URL: http://session-chunker:8081
      ENCRYPTOR_SERVICE_URL: http://session-encryptor:8082
      MERKLE_SERVICE_URL: http://merkle-builder:8083
    volumes:
      - session_chunks:/data/chunks:ro
      - orchestrator_temp:/tmp/orchestrator
    networks:
      lucid_core_net:
        aliases: [orchestrator, session-orchestrator]
        ipv4_address: 172.21.0.23
    depends_on:
      lucid_mongo:
        condition: service_healthy
      session-chunker:
        condition: service_healthy
      session-encryptor:
        condition: service_healthy
      merkle-builder:
        condition: service_healthy
    ports:
      - "8084:8084"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8084/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '1.0'
    labels:
      - "org.lucid.service=session-orchestrator"
      - "org.lucid.expose=8084"

  # =============================================================================
  # LAYER 1: AUTHENTICATION SERVICES
  # =============================================================================

  # Authentication Service
  auth-service:
    <<: *lucid-layer1-service
    container_name: lucid_auth_service
    build:
      context: ../../
      dockerfile: auth/Dockerfile.authentication
    image: pickme/lucid:auth-service
    env_file:
      - ../../auth/.env.authentication
    environment:
      <<: *lucid-layer1-env
      MONGODB_URL: ${MONGO_URL:-mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin}
    volumes:
      - auth_temp:/tmp/auth
      - auth_secrets:/secrets
    secrets:
      - jwt_secret_key
      - tron_private_key
    networks:
      lucid_core_net:
        aliases: [auth, auth-service]
        ipv4_address: 172.21.0.25
    depends_on:
      lucid_mongo:
        condition: service_healthy
    ports:
      - "8085:8085"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8085/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    labels:
      - "org.lucid.service=auth-service"
      - "org.lucid.expose=8085"

# Layer 1 Temporary Volumes
volumes:
  chunker_temp:
    name: lucid-layer1_chunker_temp
    driver: local
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.component=temp"
  
  encryptor_temp:
    name: lucid-layer1_encryptor_temp
    driver: local
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.component=temp"
  
  merkle_temp:
    name: lucid-layer1_merkle_temp
    driver: local
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.component=temp"
  
  orchestrator_temp:
    name: lucid-layer1_orchestrator_temp
    driver: local
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.component=temp"
  
  auth_temp:
    name: lucid-layer1_auth_temp
    driver: local
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.component=temp"
  
  auth_secrets:
    name: lucid-layer1_auth_secrets
    driver: local
    labels:
      - "org.lucid.layer=1"
      - "org.lucid.component=secrets"

# Layer 1 Secrets
secrets:
  master_encryption_key:
    external: true
  jwt_secret_key:
    external: true
  tron_private_key:
    external: true

# Service Profiles
# Usage: docker-compose --profile layer1 up -d
profiles:
  - layer1
  - session-pipeline
  - authentication
  - core-infrastructure