apiVersion: apps/v1
kind: Deployment
metadata:
  name: lucid-node-management
  namespace: lucid-system
  labels:
    app.kubernetes.io/name: node-management
    app.kubernetes.io/component: node
    app.kubernetes.io/part-of: lucid-blockchain
    lucid.service: node-management
    lucid.type: application
    lucid.platform: arm64
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: node-management
      app.kubernetes.io/component: node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-management
        app.kubernetes.io/component: node
        app.kubernetes.io/part-of: lucid-blockchain
        lucid.service: node-management
        lucid.type: application
        lucid.platform: arm64
    spec:
      hostname: lucid-node-management
      containers:
      - name: node-management
        image: pickme/lucid-node-management:latest-arm64
        imagePullPolicy: Always
        ports:
        - containerPort: 8095
          name: http
        - containerPort: 8099
          name: staging
        env:
        - name: LUCID_ENV
          value: "production"
        - name: LUCID_PLATFORM
          value: "arm64"
        - name: PROJECT_ROOT
          value: "/mnt/myssd/Lucid/Lucid"
        - name: SERVICE_NAME
          value: "node-management"
        - name: NODE_MANAGEMENT_PORT
          value: "8095"
        - name: NODE_MANAGEMENT_URL
          value: "http://lucid-node-management:8095"
        - name: NODE_MANAGEMENT_HOST
          value: "172.20.0.25"
        - name: MONGODB_URI
          value: "mongodb://lucid:$(MONGODB_PASSWORD)@mongodb-service:27017/lucid?authSource=admin"
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: MONGODB_PASSWORD
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: REDIS_PASSWORD
        - name: TRON_PAYMENT_URL
          value: "http://lucid-payment-gateway:8097"
        - name: API_GATEWAY_URL
          value: "http://lucid-api-gateway:8080"
        - name: NODE_REGISTRATION_ENABLED
          value: "true"
        - name: NODE_VERIFICATION_REQUIRED
          value: "true"
        - name: MAX_NODES_PER_POOL
          value: "100"
        - name: NODE_HEALTH_CHECK_INTERVAL
          value: "60"
        - name: POOT_CALCULATION_INTERVAL
          value: "300"
        - name: POOT_SCORE_THRESHOLD
          value: "0.5"
        - name: POOT_VALIDATION_REQUIRED
          value: "true"
        - name: POOL_CREATION_ENABLED
          value: "true"
        - name: MAX_POOLS
          value: "10"
        - name: POOL_BALANCE_THRESHOLD
          value: "1000"
        - name: RESOURCE_MONITORING_ENABLED
          value: "true"
        - name: CPU_MONITORING_INTERVAL
          value: "30"
        - name: MEMORY_MONITORING_INTERVAL
          value: "30"
        - name: DISK_MONITORING_INTERVAL
          value: "60"
        - name: PAYOUT_PROCESSING_ENABLED
          value: "true"
        - name: PAYOUT_BATCH_SIZE
          value: "50"
        - name: PAYOUT_INTERVAL
          value: "3600"
        volumeMounts:
        - name: node-config
          mountPath: /app/config
        - name: node-data
          mountPath: /data/nodes
        resources:
          requests:
            cpu: "300m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8095
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8095
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: node-config
        configMap:
          name: node-management-config
      - name: node-data
        persistentVolumeClaim:
          claimName: node-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: lucid-node-management
  namespace: lucid-system
  labels:
    app.kubernetes.io/name: node-management
    app.kubernetes.io/component: node
    app.kubernetes.io/part-of: lucid-blockchain
    lucid.service: node-management
    lucid.type: application
    lucid.platform: arm64
spec:
  selector:
    app.kubernetes.io/name: node-management
    app.kubernetes.io/component: node
  ports:
  - port: 8095
    targetPort: 8095
    name: http
  - port: 8099
    targetPort: 8099
    name: staging
  type: ClusterIP
  clusterIP: 172.20.0.25
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: node-data-pvc
  namespace: lucid-system
  labels:
    app.kubernetes.io/name: node-management
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: lucid-blockchain
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi