apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lucid-redis
  namespace: lucid-system
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: lucid-blockchain
    lucid.service: redis
    lucid.type: foundation
    lucid.platform: arm64
spec:
  serviceName: lucid-redis
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: lucid-blockchain
        lucid.service: redis
        lucid.type: foundation
        lucid.platform: arm64
    spec:
      hostname: lucid-redis
      containers:
      - name: redis
        image: pickme/lucid-redis:latest-arm64
        imagePullPolicy: Always
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: LUCID_ENV
          value: "production"
        - name: LUCID_PLATFORM
          value: "arm64"
        - name: PROJECT_ROOT
          value: "/mnt/myssd/Lucid/Lucid"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secrets
              key: REDIS_PASSWORD
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - "yes"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: lucid-redis
  namespace: lucid-system
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: lucid-blockchain
    lucid.service: redis
    lucid.type: foundation
    lucid.platform: arm64
spec:
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  type: ClusterIP
  clusterIP: 172.20.0.12
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: lucid-system
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: lucid-blockchain
data:
  redis.conf: |
    bind 0.0.0.0
    port 6379
    requirepass ${REDIS_PASSWORD}
    appendonly yes
    appendfsync everysec
    maxmemory-policy allkeys-lru
    