apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lucid-ingress
  namespace: lucid-system
  labels:
    app.kubernetes.io/name: lucid-ingress
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: lucid-blockchain
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "10m"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.lucid.onion
    - admin.lucid.onion
    - blockchain.lucid.onion
    - sessions.lucid.onion
    - nodes.lucid.onion
    - payments.lucid.onion
    secretName: lucid-tls-secret
  rules:
  - host: api.lucid.onion
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8080
  - host: admin.lucid.onion
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: admin-interface-service
            port:
              number: 8083
  - host: blockchain.lucid.onion
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: blockchain-core-service
            port:
              number: 8084
  - host: sessions.lucid.onion
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: session-management-service
            port:
              number: 8087
  - host: nodes.lucid.onion
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: node-management-service
            port:
              number: 8095
  - host: payments.lucid.onion
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tron-payment-service
            port:
              number: 8085
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: lucid-ingress-class
  labels:
    app.kubernetes.io/name: lucid-ingress-class
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: lucid-blockchain
spec:
  controller: nginx.org/ingress-controller
  parameters:
    apiVersion: k8s.nginx.org/v1
    kind: IngressClassParameters
    spec:
      ingressClass: lucid-ingress-class
      defaultTlsSecret: lucid-system/lucid-tls-secret
      ingressTemplate: |
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: {{ .Name }}
          namespace: {{ .Namespace }}
          labels:
            app.kubernetes.io/name: {{ .Name }}
            app.kubernetes.io/component: ingress
            app.kubernetes.io/part-of: lucid-blockchain
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/rate-limit: "100"
            nginx.ingress.kubernetes.io/rate-limit-window: "1m"
            nginx.ingress.kubernetes.io/client-body-buffer-size: "10m"
            nginx.ingress.kubernetes.io/proxy-body-size: "100m"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
        spec:
          tls:
          - hosts:
            - {{ .Host }}
            secretName: lucid-tls-secret
          rules:
          - host: {{ .Host }}
            http:
              paths:
              - path: {{ .Path }}
                pathType: {{ .PathType }}
                backend:
                  service:
                    name: {{ .ServiceName }}
                    port:
                      number: {{ .ServicePort }}
