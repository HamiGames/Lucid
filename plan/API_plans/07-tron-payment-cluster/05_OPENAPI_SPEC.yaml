openapi: 3.0.3
info:
  title: Lucid TRON Payment API
  version: 1.0.0
  description: |
    Isolated TRON payment system for USDT-TRC20 payouts within the Lucid RDP ecosystem.
    
    ## Architecture
    - **Payment Isolation**: TRON operations completely isolated from blockchain core
    - **Dual Router Support**: Non-KYC (PayoutRouterV0) and KYC-gated (PayoutRouterKYC) payment paths
    - **API Gateway Integration**: Centralized entry point with JWT authentication
    - **Tor-Only Access**: All API traffic routed through Tor network (.onion services)
    
    ## Security
    - JWT authentication required for all endpoints (except health check)
    - Rate limiting applied per endpoint
    - Circuit breaker protection with daily/hourly limits
    - Audit logging for all payment operations
    
    ## Compliance
    - SPEC-1B-v2 compliant architecture
    - Distroless container deployment
    - Beta sidecar service isolation
  contact:
    name: Lucid RDP Development Team
    email: dev@lucid-rdp.onion
  license:
    name: Proprietary
  termsOfService: https://lucid-rdp.onion/terms

servers:
  - url: https://gateway.onion/api/payment
    description: Production gateway (Tor)
  - url: http://localhost:8080/api/payment
    description: Development gateway (local)

tags:
  - name: Payouts
    description: Individual payout operations
  - name: Batch
    description: Batch payout operations
  - name: Statistics
    description: Payment statistics and monitoring
  - name: Health
    description: Service health and metrics

paths:
  /payouts:
    post:
      tags:
        - Payouts
      summary: Create new payout
      description: |
        Create a new USDT-TRC20 payout request. The system will automatically select
        the appropriate router (V0 or KYC) based on user verification status.
      operationId: createPayout
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutRequest'
            examples:
              user_payout:
                summary: User session payout
                value:
                  recipient_address: "TYour33CharacterTRONAddressHere1234"
                  amount_usdt: 5.50
                  reason: "Session completion reward"
                  router_type: "PayoutRouterV0"
                  priority: "NORMAL"
                  batch_type: "IMMEDIATE"
                  session_id: "session_abc123"
                  custom_data:
                    work_credits: 150
                    session_duration: 3600
              node_worker_payout:
                summary: Node worker payout (KYC)
                value:
                  recipient_address: "TAnother33CharacterTRONAddressHere567"
                  amount_usdt: 25.00
                  reason: "Node worker reward"
                  router_type: "PayoutRouterKYC"
                  priority: "HIGH"
                  batch_type: "DAILY"
                  node_id: "node_xyz789"
                  custom_data:
                    uptime_hours: 168
                    work_credits: 500
      responses:
        '201':
          description: Payout created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutResponse'
              example:
                payout_id: "payout_12345"
                status: "pending"
                recipient_address: "TYour33CharacterTRONAddressHere1234"
                amount_usdt: 5.50
                router_type: "PayoutRouterV0"
                priority: "NORMAL"
                batch_type: "IMMEDIATE"
                estimated_completion: "2025-10-12T15:30:00Z"
                created_at: "2025-10-12T15:25:00Z"
                request_id: "req_uuid_here"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      tags:
        - Payouts
      summary: List payouts
      description: |
        Retrieve a paginated list of payouts with optional filtering.
        Supports filtering by status, router type, and date range.
      operationId: listPayouts
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by payout status
          schema:
            type: string
            enum: [pending, processing, confirmed, failed, cancelled]
        - name: router_type
          in: query
          description: Filter by router type
          schema:
            type: string
            enum: [PayoutRouterV0, PayoutRouterKYC]
        - name: limit
          in: query
          description: Number of results per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: start_date
          in: query
          description: Filter payouts created after this date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          description: Filter payouts created before this date (ISO 8601)
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Payout list retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /payouts/{payout_id}:
    get:
      tags:
        - Payouts
      summary: Get payout status
      description: |
        Retrieve detailed status information for a specific payout,
        including TRON transaction details and confirmation status.
      operationId: getPayoutStatus
      security:
        - bearerAuth: []
      parameters:
        - name: payout_id
          in: path
          required: true
          description: Unique payout identifier
          schema:
            type: string
            pattern: '^payout_[a-zA-Z0-9]+$'
          example: "payout_12345"
      responses:
        '200':
          description: Payout status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutResponse'
              example:
                payout_id: "payout_12345"
                status: "confirmed"
                recipient_address: "TYour33CharacterTRONAddressHere1234"
                amount_usdt: 5.50
                router_type: "PayoutRouterV0"
                txid: "0x1234567890abcdef..."
                confirmations: 19
                block_number: 12345678
                block_timestamp: "2025-10-12T15:32:00Z"
                fee_trx: 0.001
                created_at: "2025-10-12T15:25:00Z"
                confirmed_at: "2025-10-12T15:32:00Z"
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /payouts/batch:
    post:
      tags:
        - Batch
      summary: Create batch payout
      description: |
        Create multiple payouts in a single request for efficient processing.
        Supports up to 100 payouts per batch with atomic processing for IMMEDIATE batch type.
      operationId: createBatchPayout
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPayoutRequest'
            example:
              payouts:
                - recipient_address: "TYour33CharacterTRONAddressHere1234"
                  amount_usdt: 5.50
                  reason: "Session reward"
                  session_id: "session_abc123"
                - recipient_address: "TAnother33CharacterTRONAddressHere567"
                  amount_usdt: 3.25
                  reason: "Node worker reward"
                  node_id: "node_xyz789"
              router_type: "PayoutRouterV0"
              priority: "NORMAL"
              batch_type: "HOURLY"
      responses:
        '201':
          description: Batch payout created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPayoutResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimited'

  /payouts/batch/{batch_id}:
    get:
      tags:
        - Batch
      summary: Get batch status
      description: |
        Retrieve status information for a batch payout operation,
        including completion statistics and individual payout statuses.
      operationId: getBatchStatus
      security:
        - bearerAuth: []
      parameters:
        - name: batch_id
          in: path
          required: true
          description: Unique batch identifier
          schema:
            type: string
            pattern: '^batch_[a-zA-Z0-9]+$'
          example: "batch_67890"
      responses:
        '200':
          description: Batch status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /stats:
    get:
      tags:
        - Statistics
      summary: Get payment statistics
      description: |
        Retrieve comprehensive payment system statistics including
        success rates, volume metrics, and circuit breaker status.
      operationId: getPaymentStats
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          description: Time period for statistics
          schema:
            type: string
            enum: [hour, day, week, month]
            default: day
        - name: router_type
          in: query
          description: Filter by router type
          schema:
            type: string
            enum: [PayoutRouterV0, PayoutRouterKYC, all]
            default: all
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /health:
    get:
      tags:
        - Health
      summary: Health check
      description: |
        Check service health status including TRON network connectivity,
        database connection, and circuit breaker status.
      operationId: healthCheck
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /metrics:
    get:
      tags:
        - Health
      summary: Prometheus metrics
      description: |
        Expose Prometheus metrics for monitoring and alerting.
        Internal service endpoint only.
      operationId: getMetrics
      security:
        - internalAuth: []
      responses:
        '200':
          description: Metrics in Prometheus exposition format
          content:
            text/plain; version=0.0.4; charset=utf-8:
              schema:
                type: string
                example: |
                  # HELP tron_payment_requests_total Total payout requests
                  # TYPE tron_payment_requests_total counter
                  tron_payment_requests_total{router_type="PayoutRouterV0",status="success"} 150

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from authentication service
    internalAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Internal service-to-service authentication

  schemas:
    PayoutRequest:
      type: object
      required:
        - recipient_address
        - amount_usdt
        - reason
        - router_type
      properties:
        recipient_address:
          type: string
          pattern: '^T[1-9A-HJ-NP-Za-km-z]{33}$'
          description: TRON address (33 characters starting with T)
          example: "TYour33CharacterTRONAddressHere1234"
        amount_usdt:
          type: number
          format: float
          minimum: 0.01
          maximum: 10000
          description: Amount in USDT (0.01 to 10,000)
          example: 5.50
        reason:
          type: string
          minLength: 1
          maxLength: 200
          description: Reason for payout
          example: "Session completion reward"
        router_type:
          $ref: '#/components/schemas/PayoutRouterType'
        priority:
          $ref: '#/components/schemas/PayoutPriority'
        batch_type:
          $ref: '#/components/schemas/PayoutBatchType'
        session_id:
          type: string
          maxLength: 50
          description: Associated session identifier
          example: "session_abc123"
        node_id:
          type: string
          maxLength: 50
          description: Associated node identifier
          example: "node_xyz789"
        custom_data:
          type: object
          description: Additional metadata
          additionalProperties: true
          example:
            work_credits: 150
            session_duration: 3600

    PayoutResponse:
      type: object
      properties:
        payout_id:
          type: string
          description: Unique payout identifier
          example: "payout_12345"
        status:
          $ref: '#/components/schemas/PayoutStatus'
        recipient_address:
          type: string
          example: "TYour33CharacterTRONAddressHere1234"
        amount_usdt:
          type: number
          format: float
          example: 5.50
        router_type:
          $ref: '#/components/schemas/PayoutRouterType'
        priority:
          $ref: '#/components/schemas/PayoutPriority'
        batch_type:
          $ref: '#/components/schemas/PayoutBatchType'
        txid:
          type: string
          nullable: true
          description: TRON transaction ID
          example: "0x1234567890abcdef..."
        confirmations:
          type: integer
          nullable: true
          description: Number of confirmations
          example: 19
        block_number:
          type: integer
          nullable: true
          description: Block number containing transaction
          example: 12345678
        block_timestamp:
          type: string
          format: date-time
          nullable: true
          description: Block timestamp
          example: "2025-10-12T15:32:00Z"
        fee_trx:
          type: number
          format: float
          nullable: true
          description: Transaction fee in TRX
          example: 0.001
        estimated_completion:
          type: string
          format: date-time
          nullable: true
          description: Estimated completion time
          example: "2025-10-12T15:30:00Z"
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2025-10-12T15:25:00Z"
        confirmed_at:
          type: string
          format: date-time
          nullable: true
          description: Confirmation timestamp
          example: "2025-10-12T15:32:00Z"
        request_id:
          type: string
          description: Request tracking identifier
          example: "req_uuid_here"

    BatchPayoutRequest:
      type: object
      required:
        - payouts
        - router_type
      properties:
        payouts:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/BatchPayoutItem'
        router_type:
          $ref: '#/components/schemas/PayoutRouterType'
        priority:
          $ref: '#/components/schemas/PayoutPriority'
        batch_type:
          $ref: '#/components/schemas/PayoutBatchType'

    BatchPayoutItem:
      type: object
      required:
        - recipient_address
        - amount_usdt
        - reason
      properties:
        recipient_address:
          type: string
          pattern: '^T[1-9A-HJ-NP-Za-km-z]{33}$'
          example: "TYour33CharacterTRONAddressHere1234"
        amount_usdt:
          type: number
          format: float
          minimum: 0.01
          maximum: 10000
          example: 5.50
        reason:
          type: string
          minLength: 1
          maxLength: 200
          example: "Session reward"
        session_id:
          type: string
          maxLength: 50
          example: "session_abc123"
        node_id:
          type: string
          maxLength: 50
          example: "node_xyz789"

    BatchPayoutResponse:
      type: object
      properties:
        batch_id:
          type: string
          description: Unique batch identifier
          example: "batch_67890"
        total_payouts:
          type: integer
          description: Number of payouts in batch
          example: 2
        total_amount_usdt:
          type: number
          format: float
          description: Total amount in batch
          example: 8.75
        status:
          type: string
          enum: [processing, completed, failed]
          description: Batch processing status
          example: "processing"
        payout_ids:
          type: array
          items:
            type: string
          description: Individual payout IDs
          example: ["payout_12345", "payout_12346"]
        estimated_completion:
          type: string
          format: date-time
          description: Estimated completion time
          example: "2025-10-12T16:00:00Z"
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2025-10-12T15:45:00Z"

    BatchStatusResponse:
      type: object
      properties:
        batch_id:
          type: string
          example: "batch_67890"
        total_payouts:
          type: integer
          example: 2
        completed_payouts:
          type: integer
          example: 1
        failed_payouts:
          type: integer
          example: 0
        pending_payouts:
          type: integer
          example: 1
        status:
          type: string
          enum: [processing, completed, failed]
          example: "processing"
        total_amount_usdt:
          type: number
          format: float
          example: 8.75
        completed_amount_usdt:
          type: number
          format: float
          example: 5.50
        created_at:
          type: string
          format: date-time
          example: "2025-10-12T15:45:00Z"
        estimated_completion:
          type: string
          format: date-time
          example: "2025-10-12T16:00:00Z"

    PayoutListResponse:
      type: object
      properties:
        payouts:
          type: array
          items:
            $ref: '#/components/schemas/PayoutResponse'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
        filters:
          type: object
          additionalProperties: true
          description: Applied filters

    PaginationInfo:
      type: object
      properties:
        total:
          type: integer
          description: Total number of items
          example: 150
        limit:
          type: integer
          description: Items per page
          example: 20
        offset:
          type: integer
          description: Current offset
          example: 0
        has_next:
          type: boolean
          description: Whether there are more items
          example: true
        has_previous:
          type: boolean
          description: Whether there are previous items
          example: false

    PaymentStatsResponse:
      type: object
      properties:
        period:
          type: string
          example: "day"
        router_type:
          type: string
          example: "all"
        total_payouts:
          type: integer
          example: 150
        total_amount_usdt:
          type: number
          format: float
          example: 1250.75
        success_rate:
          type: number
          format: float
          description: Success rate percentage
          example: 98.5
        average_amount_usdt:
          type: number
          format: float
          example: 8.34
        payouts_by_router:
          type: object
          additionalProperties:
            type: object
            properties:
              count:
                type: integer
              amount_usdt:
                type: number
                format: float
        circuit_breaker_status:
          type: string
          enum: [open, closed, half_open]
          example: "closed"
        daily_limit_usage:
          type: number
          format: float
          example: 1250.75
        hourly_limit_usage:
          type: number
          format: float
          example: 125.50
        generated_at:
          type: string
          format: date-time
          example: "2025-10-12T16:00:00Z"

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          example: "healthy"
        service:
          type: string
          example: "tron-payment-service"
        version:
          type: string
          example: "1.0.0"
        timestamp:
          type: string
          format: date-time
          example: "2025-10-12T16:00:00Z"
        checks:
          type: object
          properties:
            tron:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, degraded, unhealthy]
                network:
                  type: string
                  example: "mainnet"
                latest_block:
                  type: integer
                  example: 12345678
            mongo:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, degraded, unhealthy]
                connection:
                  type: string
                  example: "active"
            circuit_breaker:
              type: object
              properties:
                status:
                  type: string
                  enum: [open, closed, half_open]
                daily_limit_remaining:
                  type: number
                  format: float
                  example: 8749.25

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code following LUCID_ERR_XXXX pattern
              example: "LUCID_ERR_2001"
            message:
              type: string
              description: Human-readable error message
              example: "Invalid TRON address format"
            details:
              type: object
              description: Additional error details
              additionalProperties: true
            request_id:
              type: string
              description: Request tracking identifier
              example: "req-uuid-here"
            timestamp:
              type: string
              format: date-time
              description: Error timestamp
              example: "2025-10-12T16:00:00Z"

    PayoutRouterType:
      type: string
      enum:
        - PayoutRouterV0
        - PayoutRouterKYC
      description: |
        Router type selection:
        - PayoutRouterV0: Non-KYC route for end-users
        - PayoutRouterKYC: KYC-gated route for verified node workers

    PayoutPriority:
      type: string
      enum:
        - LOW
        - NORMAL
        - HIGH
        - URGENT
      default: NORMAL
      description: Payout processing priority

    PayoutBatchType:
      type: string
      enum:
        - IMMEDIATE
        - HOURLY
        - DAILY
        - WEEKLY
      default: IMMEDIATE
      description: |
        Batch processing schedule:
        - IMMEDIATE: Process immediately
        - HOURLY: Process at top of each hour
        - DAILY: Process at end of day
        - WEEKLY: Process at end of week

    PayoutStatus:
      type: string
      enum:
        - pending
        - processing
        - confirmed
        - failed
        - cancelled
      description: Current payout status

  responses:
    BadRequest:
      description: Bad request - invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "LUCID_ERR_2001"
              message: "Invalid TRON address format"
              details:
                field: "recipient_address"
                value: "invalid_address"
              request_id: "req-uuid-here"
              timestamp: "2025-10-12T16:00:00Z"

    Unauthorized:
      description: Unauthorized - missing or invalid JWT token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "LUCID_ERR_1001"
              message: "Missing or invalid JWT token"
              request_id: "req-uuid-here"
              timestamp: "2025-10-12T16:00:00Z"

    Forbidden:
      description: Forbidden - insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "LUCID_ERR_2010"
              message: "Insufficient permissions for payment operations"
              request_id: "req-uuid-here"
              timestamp: "2025-10-12T16:00:00Z"

    NotFound:
      description: Not found - resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "LUCID_ERR_2005"
              message: "Payout not found"
              details:
                payout_id: "payout_nonexistent"
              request_id: "req-uuid-here"
              timestamp: "2025-10-12T16:00:00Z"

    RateLimited:
      description: Too many requests - rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "LUCID_ERR_2009"
              message: "Rate limit exceeded"
              details:
                limit: 10
                window: "1 minute"
                retry_after: 30
              request_id: "req-uuid-here"
              timestamp: "2025-10-12T16:00:00Z"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              code: "LUCID_ERR_2006"
              message: "TRON network error"
              details:
                network_status: "unavailable"
              request_id: "req-uuid-here"
              timestamp: "2025-10-12T16:00:00Z"

externalDocs:
  description: Find more information about Lucid RDP
  url: https://lucid-rdp.onion/docs
