# Environment Coordination Configuration
# Coordinates environment variables across all systems (GUI, API, Docker)
# Ensures consistent configuration across the entire Lucid ecosystem

# ===========================================
# SYSTEM COORDINATION
# ===========================================

coordination:
  version: "1.0.0"
  description: "Environment coordination for Lucid multi-system architecture"
  last_updated: "2025-01-10T19:08:00Z"

# ===========================================
# SHARED ENVIRONMENT VARIABLES
# ===========================================

shared:
  # System Identification
  LUCID_SYSTEM_NAME: "lucid"
  LUCID_SYSTEM_VERSION: "1.0.0"
  LUCID_ENVIRONMENT: "${LUCID_ENVIRONMENT:-production}"
  LUCID_REGISTRY: "${LUCID_REGISTRY:-ghcr.io}"
  LUCID_IMAGE_NAME: "${LUCID_IMAGE_NAME:-HamiGames/Lucid}"
  LUCID_TAG: "${LUCID_TAG:-latest}"

  # Network Configuration
  LUCID_NETWORK: "lucid-pi-network"
  PI_HOST: "${PI_HOST:-192.168.0.75}"
  PI_USER: "${PI_USER:-pickme}"
  PI_DEPLOY_DIR: "${PI_DEPLOY_DIR:-/opt/lucid/production}"
  PI_SSH_PORT: "${PI_SSH_PORT:-22}"

  # Database Configuration
  MONGODB_URI: "mongodb://lucid:${MONGODB_PASSWORD:-lucid}@${PI_HOST}:27017/lucid?authSource=admin"
  REDIS_URL: "redis://:${REDIS_PASSWORD:-lucid}@${PI_HOST}:6379/0"
  ELASTICSEARCH_URL: "http://${PI_HOST}:9200"

  # Security Configuration
  JWT_SECRET_KEY: "${JWT_SECRET_KEY:-lucid_jwt_secret_key_change_in_production}"
  ENCRYPTION_KEY: "${ENCRYPTION_KEY:-lucid_encryption_key_change_in_production}"
  TOR_CONTROL_PASSWORD: "${TOR_CONTROL_PASSWORD:-lucid_tor_password_change_in_production}"

# ===========================================
# SERVICE-SPECIFIC CONFIGURATIONS
# ===========================================

services:
  # API Gateway Configuration
  api_gateway:
    SERVICE_NAME: "lucid-api-gateway"
    PORT: 8080
    HTTPS_PORT: 8081
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    AUTH_SERVICE_URL: "http://lucid-auth-service:8089"
    RATE_LIMIT_ENABLED: true
    RATE_LIMIT_REQUESTS_PER_MINUTE: 100
    CORS_ENABLED: true
    CORS_ORIGINS: "*"

  # Blockchain Core Configuration
  blockchain_core:
    SERVICE_NAME: "lucid-blockchain-core"
    PORT: 8084
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    CONSENSUS_ALGORITHM: "PoOT"
    BLOCK_TIME_SECONDS: 10
    MAX_TRANSACTIONS_PER_BLOCK: 1000

  # Authentication Service Configuration
  auth_service:
    SERVICE_NAME: "lucid-auth-service"
    PORT: 8089
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 15
    JWT_REFRESH_TOKEN_EXPIRE_DAYS: 7
    HARDWARE_WALLET_ENABLED: true
    RBAC_ENABLED: true

  # Session API Configuration
  session_api:
    SERVICE_NAME: "lucid-session-api"
    PORT: 8087
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    CHUNK_SIZE_MB: 10
    COMPRESSION_LEVEL: 6
    ENCRYPTION_ALGO: "AES-256-GCM"
    MERKLE_HASH_ALGO: "SHA256"

  # Node Management Configuration
  node_management:
    SERVICE_NAME: "lucid-node-management"
    PORT: 8095
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    POOT_ENABLED: true
    PAYOUT_PROCESSING_ENABLED: true
    POOT_CALCULATION_INTERVAL_SEC: 300
    PAYOUT_THRESHOLD_USDT: 10.0
    POOL_MAX_NODES: 100

  # Admin Interface Configuration
  admin_interface:
    SERVICE_NAME: "lucid-admin-interface"
    PORT: 8083
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    RBAC_ENABLED: true
    AUDIT_LOGGING_ENABLED: true
    EMERGENCY_CONTROLS_ENABLED: true

  # TRON Payment Configuration (Isolated)
  tron_payment:
    SERVICE_NAME: "lucid-tron-client"
    PORT: 8096
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    TRON_NETWORK: "${TRON_NETWORK:-shasta}"
    TRON_MAINNET_URL: "https://api.trongrid.io"
    TRON_TESTNET_URL: "https://api.shasta.trongrid.io"
    USDT_TRC20_CONTRACT: "TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t"
    TRX_STAKING_MIN_AMOUNT: 100
    PAYOUT_MIN_THRESHOLD: 10

  # GUI Integration Services
  gui_api_bridge:
    SERVICE_NAME: "lucid-gui-api-bridge"
    PORT: 8097
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    GUI_INTEGRATION_ENABLED: true
    TOR_PROXY_ENABLED: true
    TOR_SOCKS_PORT: 9050
    TOR_CONTROL_PORT: 9051

  gui_docker_manager:
    SERVICE_NAME: "lucid-gui-docker-manager"
    PORT: 8098
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    DOCKER_HOST: "unix:///var/run/docker.sock"
    DOCKER_API_VERSION: "1.40"
    GUI_ACCESS_LEVELS_ENABLED: true

  gui_tor_manager:
    SERVICE_NAME: "lucid-gui-tor-manager"
    TOR_SOCKS_PORT: 9050
    TOR_CONTROL_PORT: 9051
    TOR_DATA_DIR: "/app/tor-data"
    TOR_LOG_LEVEL: "notice"
    GUI_TOR_INTEGRATION: true
    ONION_ADDRESS_MASKING: true

  gui_hardware_wallet:
    SERVICE_NAME: "lucid-gui-hardware-wallet"
    PORT: 8099
    HOST: "0.0.0.0"
    LOG_LEVEL: "INFO"
    DEBUG: false
    HARDWARE_WALLET_ENABLED: true
    LEDGER_ENABLED: true
    TREZOR_ENABLED: true
    KEEPKEY_ENABLED: true
    TRON_WALLET_SUPPORT: true

# ===========================================
# NETWORK CONFIGURATIONS
# ===========================================

networks:
  # Main Lucid Network
  lucid_main:
    name: "lucid-pi-network"
    driver: "bridge"
    subnet: "172.20.0.0/16"
    gateway: "172.20.0.1"
    
  # TRON Isolated Network
  lucid_tron_isolated:
    name: "lucid-network-isolated"
    driver: "bridge"
    subnet: "172.21.0.0/16"
    gateway: "172.21.0.1"
    internal: true
    
  # GUI Network
  lucid_gui:
    name: "lucid-gui-network"
    driver: "bridge"
    subnet: "172.22.0.0/16"
    gateway: "172.22.0.1"

# ===========================================
# VOLUME CONFIGURATIONS
# ===========================================

volumes:
  # Database Volumes
  database:
    mongodb_data:
      driver: "local"
      labels:
        - "com.lucid.data=database"
    redis_data:
      driver: "local"
      labels:
        - "com.lucid.data=cache"
    elasticsearch_data:
      driver: "local"
      labels:
        - "com.lucid.data=search"

  # Service Volumes
  services:
    auth_logs:
      driver: "local"
      labels:
        - "com.lucid.service=auth"
    blockchain_data:
      driver: "local"
      labels:
        - "com.lucid.service=blockchain"
    session_data:
      driver: "local"
      labels:
        - "com.lucid.service=session"
    node_data:
      driver: "local"
      labels:
        - "com.lucid.service=node"
    admin_data:
      driver: "local"
      labels:
        - "com.lucid.service=admin"
    tron_data:
      driver: "local"
      labels:
        - "com.lucid.service=tron"
        - "com.lucid.isolated=true"

  # GUI Volumes
  gui:
    gui_bridge_logs:
      driver: "local"
      labels:
        - "com.lucid.service=gui-bridge"
    gui_docker_logs:
      driver: "local"
      labels:
        - "com.lucid.service=gui-docker"
    tor_data:
      driver: "local"
      labels:
        - "com.lucid.service=tor"
    gui_hardware_data:
      driver: "local"
      labels:
        - "com.lucid.service=gui-hardware"

# ===========================================
# ENVIRONMENT TEMPLATES
# ===========================================

templates:
  # Development Environment
  development:
    LUCID_ENVIRONMENT: "development"
    LOG_LEVEL: "DEBUG"
    DEBUG: true
    HOT_RELOAD: true
    DEV_TOOLS: true
    
  # Staging Environment
  staging:
    LUCID_ENVIRONMENT: "staging"
    LOG_LEVEL: "INFO"
    DEBUG: false
    HOT_RELOAD: false
    DEV_TOOLS: false
    
  # Production Environment
  production:
    LUCID_ENVIRONMENT: "production"
    LOG_LEVEL: "INFO"
    DEBUG: false
    HOT_RELOAD: false
    DEV_TOOLS: false
    SSL_ENABLED: true
    SECURITY_HARDENING: true

# ===========================================
# CONFIGURATION VALIDATION
# ===========================================

validation:
  enabled: true
  strict_mode: true
  
  # Required Environment Variables
  required_vars:
    - "LUCID_SYSTEM_NAME"
    - "LUCID_SYSTEM_VERSION"
    - "PI_HOST"
    - "JWT_SECRET_KEY"
    - "ENCRYPTION_KEY"
    
  # Optional Environment Variables with Defaults
  optional_vars:
    - name: "LUCID_ENVIRONMENT"
      default: "production"
    - name: "LOG_LEVEL"
      default: "INFO"
    - name: "DEBUG"
      default: "false"
      
  # Variable Format Validation
  format_validation:
    PI_HOST:
      pattern: "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
      description: "Valid IPv4 address"
    PI_SSH_PORT:
      pattern: "^\\d+$"
      min: 1
      max: 65535
      description: "Valid port number"

# ===========================================
# DEPLOYMENT CONFIGURATION
# ===========================================

deployment:
  # Deployment Strategy
  strategy: "rolling"
  max_unavailable: 1
  max_surge: 1
  
  # Health Checks
  health_checks:
    initial_delay: 60
    period: 30
    timeout: 10
    success_threshold: 1
    failure_threshold: 3
    
  # Resource Limits
  resources:
    limits:
      cpu: "2"
      memory: "2Gi"
    requests:
      cpu: "1"
      memory: "1Gi"
      
  # Scaling Configuration
  scaling:
    min_replicas: 1
    max_replicas: 3
    target_cpu_utilization: 70
    target_memory_utilization: 80

# ===========================================
# MONITORING CONFIGURATION
# ===========================================

monitoring:
  enabled: true
  
  # Metrics Collection
  metrics:
    enabled: true
    interval: "30s"
    retention: "7d"
    
  # Logging
  logging:
    enabled: true
    level: "info"
    format: "json"
    retention: "30d"
    
  # Alerting
  alerting:
    enabled: true
    channels:
      - email
      - slack
    rules:
      - name: "ServiceDown"
        condition: "service_health == 0"
        duration: "1m"
        severity: "critical"
      - name: "HighCPUUsage"
        condition: "cpu_usage > 80"
        duration: "5m"
        severity: "warning"
