version: '3.8'

services:
  session-pipeline:
    image: pickme/lucid-session-pipeline:latest-arm64
    container_name: session-pipeline
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8083:8083"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/session-pipeline:/app/data:rw
      - /mnt/myssd/Lucid/Lucid/logs/session-pipeline:/app/logs:rw
      - session-pipeline-cache:/tmp/pipeline
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - SESSION_PIPELINE_HOST=session-pipeline
      - SESSION_PIPELINE_PORT=8083
      - SESSION_PIPELINE_URL=http://session-pipeline:8083
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=200m
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=session-pipeline"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

  session-recorder:
    image: pickme/lucid-session-recorder:latest-arm64
    container_name: session-recorder
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8084:8084"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/session-recorder/recordings:/app/recordings:rw
      - /mnt/myssd/Lucid/Lucid/data/session-recorder/chunks:/app/chunks:rw
      - /mnt/myssd/Lucid/Lucid/logs/session-recorder:/app/logs:rw
      - session-recorder-cache:/tmp/recorder
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - SESSION_RECORDER_HOST=session-recorder
      - SESSION_RECORDER_PORT=8084
      - SESSION_RECORDER_URL=http://session-recorder:8084
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=200m
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=session-recorder"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

  session-processor:
    image: pickme/lucid-chunk-processor:latest-arm64
    container_name: session-processor
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8085:8085"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/session-processor:/app/data:rw
      - /mnt/myssd/Lucid/Lucid/logs/session-processor:/app/logs:rw
      - session-processor-cache:/tmp/processor
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - SESSION_PROCESSOR_HOST=session-processor
      - SESSION_PROCESSOR_PORT=8085
      - SESSION_PROCESSOR_URL=http://session-processor:8085
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=200m
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=session-processor"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

  session-storage:
    image: pickme/lucid-session-storage:latest-arm64
    container_name: session-storage
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8086:8086"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/session-storage:/app/data:rw
      - /mnt/myssd/Lucid/Lucid/logs/session-storage:/app/logs:rw
      - session-storage-cache:/tmp/storage
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - SESSION_STORAGE_HOST=session-storage
      - SESSION_STORAGE_PORT=8086
      - SESSION_STORAGE_URL=http://session-storage:8086
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=200m
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=session-storage"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

  session-api:
    image: pickme/lucid-session-api:latest-arm64
    container_name: session-api
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8087:8087"
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/session-api:/app/logs:rw
      - session-api-cache:/tmp/api
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - SESSION_API_HOST=session-api
      - SESSION_API_PORT=8087
      - SESSION_API_URL=http://session-api:8087
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - API_GATEWAY_URL=${API_GATEWAY_URL}
      - BLOCKCHAIN_ENGINE_URL=${BLOCKCHAIN_ENGINE_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=session-api"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

  rdp-server-manager:
    image: pickme/lucid-rdp-server-manager:latest-arm64
    container_name: rdp-server-manager
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8090:8090"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/rdp-server-manager:/app/data:rw
      - /mnt/myssd/Lucid/Lucid/logs/rdp-server-manager:/app/logs:rw
      - rdp-server-manager-cache:/tmp/rdp-manager
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - RDP_SERVER_MANAGER_HOST=rdp-server-manager
      - RDP_SERVER_MANAGER_PORT=8090
      - RDP_SERVER_MANAGER_URL=http://rdp-server-manager:8090
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
      - API_GATEWAY_URL=${API_GATEWAY_URL}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=rdp-server-manager"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

  rdp-xrdp:
    image: pickme/lucid-rdp-xrdp:latest-arm64
    container_name: rdp-xrdp
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8091:8091"
      - "3389:3389"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/rdp-xrdp/config:/app/config:rw
      - /mnt/myssd/Lucid/Lucid/logs/rdp-xrdp:/app/logs:rw
      - rdp-xrdp-cache:/tmp/xrdp
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - RDP_XRDP_HOST=rdp-xrdp
      - RDP_XRDP_PORT=8091
      - RDP_XRDP_URL=http://rdp-xrdp:8091
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=rdp-xrdp"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

  rdp-controller:
    image: pickme/lucid-rdp-controller:latest-arm64
    container_name: rdp-controller
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8092:8092"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/rdp-controller:/app/data:rw
      - /mnt/myssd/Lucid/Lucid/logs/rdp-controller:/app/logs:rw
      - rdp-controller-cache:/tmp/controller
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - RDP_CONTROLLER_HOST=rdp-controller
      - RDP_CONTROLLER_PORT=8092
      - RDP_CONTROLLER_URL=http://rdp-controller:8092
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=rdp-controller"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

  rdp-monitor:
    image: pickme/lucid-rdp-monitor:latest-arm64
    container_name: rdp-monitor
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8093:8093"
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/rdp-monitor:/app/logs:rw
      - rdp-monitor-cache:/tmp/monitor
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - RDP_MONITOR_HOST=rdp-monitor
      - RDP_MONITOR_PORT=8093
      - RDP_MONITOR_URL=http://rdp-monitor:8093
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=rdp-monitor"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

  node-management:
    image: pickme/lucid-node-management:latest-arm64
    container_name: node-management
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
      - ../environment/.env.application
    networks:
      - lucid-pi-network
    ports:
      - "8095:8095"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/node-management:/app/data:rw
      - /mnt/myssd/Lucid/Lucid/logs/node-management:/app/logs:rw
      - node-management-cache:/tmp/nodes
    environment:
      - LUCID_ENV=production
      - LUCID_PLATFORM=arm64
      - NODE_MANAGEMENT_HOST=node-management
      - NODE_MANAGEMENT_PORT=8095
      - NODE_MANAGEMENT_URL=http://node-management:8095
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
      - API_GATEWAY_URL=${API_GATEWAY_URL}
      - BLOCKCHAIN_ENGINE_URL=${BLOCKCHAIN_ENGINE_URL}
    user: "65532:65532"
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "lucid.service=node-management"
      - "lucid.type=distroless"
      - "lucid.platform=arm64"
      - "lucid.security=hardened"
      - "lucid.cluster=application"

volumes:
  session-pipeline-cache:
    driver: local
    name: lucid-session-pipeline-cache
  session-recorder-cache:
    driver: local
    name: lucid-session-recorder-cache
  session-processor-cache:
    driver: local
    name: lucid-session-processor-cache
  session-storage-cache:
    driver: local
    name: lucid-session-storage-cache
  session-api-cache:
    driver: local
    name: lucid-session-api-cache
  rdp-server-manager-cache:
    driver: local
    name: lucid-rdp-server-manager-cache
  rdp-xrdp-cache:
    driver: local
    name: lucid-rdp-xrdp-cache
  rdp-controller-cache:
    driver: local
    name: lucid-rdp-controller-cache
  rdp-monitor-cache:
    driver: local
    name: lucid-rdp-monitor-cache
  node-management-cache:
    driver: local
    name: lucid-node-management-cache

networks:
  lucid-pi-network:
    external: true
    name: lucid-pi-network