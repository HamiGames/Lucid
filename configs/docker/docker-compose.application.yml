# Phase 3 Application Services - Docker Compose Configuration
# Step 45: Docker Compose Configurations - Application Phase
# Includes: Session Management, RDP Services, Node Management

version: '3.8'

services:
  # ===========================================
  # SESSION MANAGEMENT SERVICES (5 containers)
  # ===========================================
  
  # Session Pipeline Manager
  session-pipeline:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/session-pipeline:${LUCID_TAG:-latest}
    container_name: lucid-session-pipeline
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      - SERVICE_NAME=lucid-session-pipeline
      - PORT=8083
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - PIPELINE_STATE_MACHINE_ENABLED=true
      - CHUNK_SIZE_MB=10
      - COMPRESSION_LEVEL=6
    volumes:
      - /mnt/myssd/Lucid/logs/session-pipeline:/app/logs
      - /mnt/myssd/Lucid/data/session-pipeline:/app/data
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=session-pipeline"
      - "com.lucid.cluster=03-session-management"

  # Session Recorder
  session-recorder:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/session-recorder:${LUCID_TAG:-latest}
    container_name: lucid-session-recorder
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      - SERVICE_NAME=lucid-session-recorder
      - PORT=8084
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - RECORDING_QUALITY=high
      - CHUNK_DURATION_SECONDS=30
    volumes:
      - /mnt/myssd/Lucid/logs/session-recorder:/app/logs
      - /mnt/myssd/Lucid/data/session-recorder:/app/data
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8084/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=session-recorder"
      - "com.lucid.cluster=03-session-management"

  # Session Processor
  session-processor:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/session-processor:${LUCID_TAG:-latest}
    container_name: lucid-session-processor
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - SERVICE_NAME=lucid-session-processor
      - PORT=8085
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - ENCRYPTION_ALGORITHM=AES-256-GCM
      - WORKER_COUNT=10
    volumes:
      - /mnt/myssd/Lucid/logs/session-processor:/app/logs
      - /mnt/myssd/Lucid/data/session-processor:/app/data
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8085/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=session-processor"
      - "com.lucid.cluster=03-session-management"

  # Session Storage
  session-storage:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/session-storage:${LUCID_TAG:-latest}
    container_name: lucid-session-storage
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - SERVICE_NAME=lucid-session-storage
      - PORT=8086
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - STORAGE_ROOT_PATH=/app/storage
      - MAX_STORAGE_SIZE_GB=1000
    volumes:
      - /mnt/myssd/Lucid/logs/session-storage:/app/logs
      - /mnt/myssd/Lucid/data/session-storage:/app/storage
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=session-storage"
      - "com.lucid.cluster=03-session-management"

  # Session API Gateway
  session-api:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/session-api:${LUCID_TAG:-latest}
    container_name: lucid-session-api
    restart: unless-stopped
    ports:
      - "8087:8087"
    environment:
      - SERVICE_NAME=lucid-session-api
      - PORT=8087
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - PIPELINE_URL=http://lucid-session-pipeline:8083
      - RECORDER_URL=http://lucid-session-recorder:8084
      - PROCESSOR_URL=http://lucid-session-processor:8085
      - STORAGE_URL=http://lucid-session-storage:8086
    volumes:
      - /mnt/myssd/Lucid/logs/session-api:/app/logs
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
      lucid-session-pipeline:
        condition: service_healthy
      lucid-session-recorder:
        condition: service_healthy
      lucid-session-processor:
        condition: service_healthy
      lucid-session-storage:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8087/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=session-api"
      - "com.lucid.cluster=03-session-management"

  # ===========================================
  # RDP SERVICES (4 containers)
  # ===========================================

  # RDP Server Manager
  rdp-server-manager:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/rdp-server-manager:${LUCID_TAG:-latest}
    container_name: lucid-rdp-server-manager
    restart: unless-stopped
    ports:
      - "8090:8090"
    environment:
      - SERVICE_NAME=lucid-rdp-server-manager
      - PORT=8090
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - PORT_RANGE_START=13389
      - PORT_RANGE_END=14389
      - MAX_CONCURRENT_SESSIONS=100
    volumes:
      - /mnt/myssd/Lucid/logs/rdp-server-manager:/app/logs
      - /mnt/myssd/Lucid/data/rdp-server-manager:/app/data
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8090/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=rdp-server-manager"
      - "com.lucid.cluster=04-rdp-services"

  # XRDP Integration
  rdp-xrdp:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/rdp-xrdp:${LUCID_TAG:-latest}
    container_name: lucid-rdp-xrdp
    restart: unless-stopped
    ports:
      - "8091:8091"
    environment:
      - SERVICE_NAME=lucid-rdp-xrdp
      - PORT=8091
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - XRDP_DISPLAY=:10
      - XRDP_PORT=3389
    volumes:
      - /mnt/myssd/Lucid/logs/rdp-xrdp:/app/logs
      - /mnt/myssd/Lucid/data/rdp-xrdp:/app/data
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
      lucid-rdp-server-manager:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8091/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=rdp-xrdp"
      - "com.lucid.cluster=04-rdp-services"

  # RDP Session Controller
  rdp-controller:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/rdp-controller:${LUCID_TAG:-latest}
    container_name: lucid-rdp-controller
    restart: unless-stopped
    ports:
      - "8092:8092"
    environment:
      - SERVICE_NAME=lucid-rdp-controller
      - PORT=8092
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - SERVER_MANAGER_URL=http://lucid-rdp-server-manager:8090
    volumes:
      - /mnt/myssd/Lucid/logs/rdp-controller:/app/logs
      - /mnt/myssd/Lucid/data/rdp-controller:/app/data
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
      lucid-rdp-server-manager:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8092/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=rdp-controller"
      - "com.lucid.cluster=04-rdp-services"

  # RDP Resource Monitor
  rdp-monitor:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/rdp-monitor:${LUCID_TAG:-latest}
    container_name: lucid-rdp-monitor
    restart: unless-stopped
    ports:
      - "8093:8093"
    environment:
      - SERVICE_NAME=lucid-rdp-monitor
      - PORT=8093
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - MONITORING_INTERVAL_SECONDS=30
      - METRICS_ENABLED=true
    volumes:
      - /mnt/myssd/Lucid/logs/rdp-monitor:/app/logs
      - /mnt/myssd/Lucid/data/rdp-monitor:/app/data
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8093/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=rdp-monitor"
      - "com.lucid.cluster=04-rdp-services"

  # ===========================================
  # NODE MANAGEMENT (1 container)
  # ===========================================

  # Node Management Service
  node-management:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/node-management:${LUCID_TAG:-latest}
    container_name: lucid-node-management
    restart: unless-stopped
    ports:
      - "8095:8095"
    environment:
      - SERVICE_NAME=lucid-node-management
      - PORT=8095
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:lucid@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://lucid-redis:6379/0
      - POOT_ENABLED=true
      - PAYOUT_PROCESSING_ENABLED=true
      - TRON_NETWORK=${TRON_NETWORK:-shasta}
    volumes:
      - /mnt/myssd/Lucid/logs/node-management:/app/logs
      - /mnt/myssd/Lucid/data/node-management:/app/data
    networks:
      - lucid-dev
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-api-gateway:
        condition: service_healthy
      lucid-blocks:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8095/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=node-management"
      - "com.lucid.cluster=05-node-management"

# ===========================================
# NETWORKS
# ===========================================
networks:
  lucid-dev:
    name: lucid-dev_lucid_net
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# ===========================================
# VOLUMES
# ===========================================
# =============================================================================
# VOLUMES - Using Direct Host Paths on Pi
# =============================================================================
# All volumes are mounted directly to /mnt/myssd/Lucid on the Pi
# No named volumes needed - using host path mounts for better performance
