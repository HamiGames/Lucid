# Master Docker Compose Configuration - All Services
# Step 45: Docker Compose Configurations - Master File
# Combines all phases: Foundation, Core, Application, Support

version: '3.8'

services:
  # ===========================================
  # PHASE 1: FOUNDATION SERVICES
  # ===========================================

  # Authentication Service
  auth-service:
    image: pickme/lucid-auth-service:latest-arm64
    container_name: lucid-auth-service
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
    ports:
      - "8089:8089"
    environment:
      - SERVICE_NAME=lucid-auth-service
      - PORT=8089
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URI=${REDIS_URI}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=15
      - JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
      - HARDWARE_WALLET_ENABLED=true
      - RBAC_ENABLED=true
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/auth:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/auth:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8089/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=foundation"
      - "com.lucid.service=auth"
      - "com.lucid.cluster=09-authentication"

  # MongoDB Database
  lucid-mongodb:
    image: pickme/lucid-mongodb:latest-arm64
    container_name: lucid-mongodb
    restart: unless-stopped
    env_file:
      - ../environment/.env.foundation
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=lucid
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}
      - MONGO_INITDB_DATABASE=lucid
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/mongodb:/data/db
      - /mnt/myssd/Lucid/Lucid/data/mongodb-config:/data/configdb
      - ./database/init_collections.js:/docker-entrypoint-initdb.d/init_collections.js:ro
    networks:
      - lucid-pi-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.lucid.phase=foundation"
      - "com.lucid.service=database"
      - "com.lucid.cluster=08-storage-database"

  # Redis Cache
  lucid-redis:
    image: pickme/lucid-redis:latest-arm64
    container_name: lucid-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/redis:/data
      - ./configs/database/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - lucid-pi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.lucid.phase=foundation"
      - "com.lucid.service=cache"
      - "com.lucid.cluster=08-storage-database"

  # Elasticsearch Search Engine
  lucid-elasticsearch:
    image: pickme/lucid-elasticsearch:latest-arm64
    container_name: lucid-elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/elasticsearch:/usr/share/elasticsearch/data
      - ./configs/database/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    networks:
      - lucid-pi-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=foundation"
      - "com.lucid.service=search"
      - "com.lucid.cluster=08-storage-database"

  # Storage Database Service
  storage-database:
    image: pickme/lucid-storage-database:latest-arm64
    container_name: lucid-storage-database
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - SERVICE_NAME=lucid-storage-database
      - PORT=8082
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
      - ELASTICSEARCH_URI=http://lucid-elasticsearch:9200
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/storage:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/storage:/app/data
      - /mnt/myssd/Lucid/Lucid/backups:/app/backups
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
      lucid-elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=foundation"
      - "com.lucid.service=storage"
      - "com.lucid.cluster=08-storage-database"

  # ===========================================
  # PHASE 2: CORE SERVICES
  # ===========================================

  # Session Anchoring Service
  session-anchoring:
    image: pickme/lucid-session-anchoring:latest-arm64
    container_name: lucid-session-anchoring
    restart: unless-stopped
    ports:
      - "8090:8090"
    environment:
      - SERVICE_NAME=lucid-session-anchoring
      - PORT=8090
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/session-anchoring:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/session-anchoring:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8090/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=core"
      - "com.lucid.service=session-anchoring"
      - "com.lucid.cluster=02-blockchain-core"

  # Block Manager Service
  block-manager:
    image: pickme/lucid-block-manager:latest-arm64
    container_name: lucid-block-manager
    restart: unless-stopped
    ports:
      - "8091:8091"
    environment:
      - SERVICE_NAME=lucid-block-manager
      - PORT=8091
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/block-manager:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/block-manager:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8091/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=core"
      - "com.lucid.service=block-manager"
      - "com.lucid.cluster=02-blockchain-core"

  # Data Chain Service
  data-chain:
    image: pickme/lucid-data-chain:latest-arm64
    container_name: lucid-data-chain
    restart: unless-stopped
    ports:
      - "8092:8092"
    environment:
      - SERVICE_NAME=lucid-data-chain
      - PORT=8092
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/data-chain:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/data-chain:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8092/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=core"
      - "com.lucid.service=data-chain"
      - "com.lucid.cluster=02-blockchain-core"

  # API Gateway
  api-gateway:
    image: pickme/lucid-api-gateway:latest-arm64
    container_name: lucid-api-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - SERVICE_NAME=lucid-api-gateway
      - PORT=8080
      - HTTPS_PORT=8081
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - AUTH_SERVICE_URL=http://lucid-auth-service:8089
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_REQUESTS_PER_MINUTE=100
      - CORS_ENABLED=true
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/api-gateway:/app/logs
    networks:
      - lucid-pi-network
    depends_on:
      lucid-auth-service:
        condition: service_healthy
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=core"
      - "com.lucid.service=api-gateway"
      - "com.lucid.cluster=01-api-gateway"

  # Blockchain Core Engine
  lucid-blocks:
    image: pickme/lucid-blockchain-engine:latest-arm64
    container_name: lucid-blocks
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      - SERVICE_NAME=lucid-blocks
      - PORT=8084
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
      - CONSENSUS_ALGORITHM=PoOT
      - BLOCK_TIME_SECONDS=10
      - MAX_TRANSACTIONS_PER_BLOCK=1000
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/blockchain:/app/data
      - /mnt/myssd/Lucid/Lucid/logs/blockchain:/app/logs
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8084/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=core"
      - "com.lucid.service=blockchain"
      - "com.lucid.cluster=02-blockchain-core"

  # Service Mesh Controller
  service-mesh-controller:
    image: pickme/lucid-service-mesh-controller:latest-arm64
    container_name: lucid-service-mesh-controller
    restart: unless-stopped
    ports:
      - "8500:8500"
      - "8501:8501"
      - "8502:8502"
    environment:
      - SERVICE_NAME=lucid-service-mesh-controller
      - PORT=8500
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - CONSUL_DATACENTER=lucid-dc
      - CONSUL_SERVER=true
      - CONSUL_BOOTSTRAP_EXPECT=1
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_INTERFACE=eth0
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/consul:/consul/data
      - /mnt/myssd/Lucid/Lucid/logs/consul:/app/logs
    networks:
      - lucid-pi-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8500/v1/status/leader || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=core"
      - "com.lucid.service=service-mesh"
      - "com.lucid.cluster=10-cross-cluster-integration"

  # ===========================================
  # PHASE 3: APPLICATION SERVICES
  # ===========================================

  # Session Recorder Service
  session-recorder:
    image: pickme/lucid-session-recorder:latest-arm64
    container_name: lucid-session-recorder
    restart: unless-stopped
    ports:
      - "8093:8093"
    environment:
      - SERVICE_NAME=lucid-session-recorder
      - PORT=8093
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/session-recorder:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/session-recorder:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8093/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=session-recorder"
      - "com.lucid.cluster=03-session-management"

  # Chunk Processor Service
  chunk-processor:
    image: pickme/lucid-chunk-processor:latest-arm64
    container_name: lucid-chunk-processor
    restart: unless-stopped
    ports:
      - "8094:8094"
    environment:
      - SERVICE_NAME=lucid-chunk-processor
      - PORT=8094
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/chunk-processor:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/chunk-processor:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8094/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=chunk-processor"
      - "com.lucid.cluster=03-session-management"

  # Session Storage Service
  session-storage:
    image: pickme/lucid-session-storage:latest-arm64
    container_name: lucid-session-storage
    restart: unless-stopped
    ports:
      - "8095:8095"
    environment:
      - SERVICE_NAME=lucid-session-storage
      - PORT=8095
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/session-storage:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/session-storage:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8095/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=session-storage"
      - "com.lucid.cluster=03-session-management"

  # Session API Service
  session-api:
    image: pickme/lucid-session-api:latest-arm64
    container_name: lucid-session-api
    restart: unless-stopped
    ports:
      - "8096:8096"
    environment:
      - SERVICE_NAME=lucid-session-api
      - PORT=8096
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/session-api:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/session-api:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8096/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=session-api"
      - "com.lucid.cluster=03-session-management"

  # RDP Server Manager Service
  rdp-server-manager:
    image: pickme/lucid-rdp-server-manager:latest-arm64
    container_name: lucid-rdp-server-manager
    restart: unless-stopped
    ports:
      - "8097:8097"
    environment:
      - SERVICE_NAME=lucid-rdp-server-manager
      - PORT=8097
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/rdp-server-manager:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/rdp-server-manager:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8097/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=rdp-server-manager"
      - "com.lucid.cluster=04-rdp-services"

  # RDP XRDP Service
  rdp-xrdp:
    image: pickme/lucid-rdp-xrdp:latest-arm64
    container_name: lucid-rdp-xrdp
    restart: unless-stopped
    ports:
      - "8098:8098"
    environment:
      - SERVICE_NAME=lucid-rdp-xrdp
      - PORT=8098
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/rdp-xrdp:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/rdp-xrdp:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8098/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=rdp-xrdp"
      - "com.lucid.cluster=04-rdp-services"

  # RDP Controller Service
  rdp-controller:
    image: pickme/lucid-rdp-controller:latest-arm64
    container_name: lucid-rdp-controller
    restart: unless-stopped
    ports:
      - "8099:8099"
    environment:
      - SERVICE_NAME=lucid-rdp-controller
      - PORT=8099
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/rdp-controller:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/rdp-controller:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8099/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=rdp-controller"
      - "com.lucid.cluster=04-rdp-services"

  # RDP Monitor Service
  rdp-monitor:
    image: pickme/lucid-rdp-monitor:latest-arm64
    container_name: lucid-rdp-monitor
    restart: unless-stopped
    ports:
      - "8100:8100"
    environment:
      - SERVICE_NAME=lucid-rdp-monitor
      - PORT=8100
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/rdp-monitor:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/rdp-monitor:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8100/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=rdp-monitor"
      - "com.lucid.cluster=04-rdp-services"

  # Session Management Services
  session-pipeline:
    image: pickme/lucid-session-pipeline:latest-arm64
    container_name: lucid-session-pipeline
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      - SERVICE_NAME=lucid-session-pipeline
      - PORT=8083
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
      - PIPELINE_STATE_MACHINE_ENABLED=true
      - CHUNK_SIZE_MB=10
      - COMPRESSION_LEVEL=6
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/session-pipeline:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/session-pipeline:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=session-pipeline"
      - "com.lucid.cluster=03-session-management"

  # Node Management Service
  node-management:
    image: pickme/lucid-node-management:latest-arm64
    container_name: lucid-node-management
    restart: unless-stopped
    ports:
      - "8095:8095"
    environment:
      - SERVICE_NAME=lucid-node-management
      - PORT=8095
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
      - POOT_ENABLED=true
      - PAYOUT_PROCESSING_ENABLED=true
      - TRON_NETWORK=${TRON_NETWORK:-shasta}
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/node-management:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/node-management:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8095/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=application"
      - "com.lucid.service=node-management"
      - "com.lucid.cluster=05-node-management"

  # ===========================================
  # PHASE 4: SUPPORT SERVICES
  # ===========================================

  # Admin Interface
  admin-interface:
    image: pickme/lucid-admin-interface:latest-arm64
    container_name: lucid-admin-interface
    restart: unless-stopped
    ports:
      - "8120:8120"
    environment:
      - SERVICE_NAME=lucid-admin-interface
      - PORT=8120
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
      - RBAC_ENABLED=true
      - AUDIT_LOGGING_ENABLED=true
      - EMERGENCY_CONTROLS_ENABLED=true
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/admin-interface:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/admin-interface:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=support"
      - "com.lucid.service=admin-interface"
      - "com.lucid.cluster=06-admin-interface"

  # Payout Router Service
  payout-router:
    image: pickme/lucid-payout-router:latest-arm64
    container_name: lucid-payout-router
    restart: unless-stopped
    ports:
      - "8101:8101"
    environment:
      - SERVICE_NAME=lucid-payout-router
      - PORT=8101
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/payout-router:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/payout-router:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8101/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=support"
      - "com.lucid.service=payout-router"
      - "com.lucid.cluster=07-tron-payment"

  # Wallet Manager Service
  wallet-manager:
    image: pickme/lucid-wallet-manager:latest-arm64
    container_name: lucid-wallet-manager
    restart: unless-stopped
    ports:
      - "8102:8102"
    environment:
      - SERVICE_NAME=lucid-wallet-manager
      - PORT=8102
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/wallet-manager:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/wallet-manager:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8102/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=support"
      - "com.lucid.service=wallet-manager"
      - "com.lucid.cluster=07-tron-payment"

  # USDT Manager Service
  usdt-manager:
    image: pickme/lucid-usdt-manager:latest-arm64
    container_name: lucid-usdt-manager
    restart: unless-stopped
    ports:
      - "8103:8103"
    environment:
      - SERVICE_NAME=lucid-usdt-manager
      - PORT=8103
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/usdt-manager:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/usdt-manager:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8103/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=support"
      - "com.lucid.service=usdt-manager"
      - "com.lucid.cluster=07-tron-payment"

  # TRX Staking Service
  trx-staking:
    image: pickme/lucid-trx-staking:latest-arm64
    container_name: lucid-trx-staking
    restart: unless-stopped
    ports:
      - "8104:8104"
    environment:
      - SERVICE_NAME=lucid-trx-staking
      - PORT=8104
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/trx-staking:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/trx-staking:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8104/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=support"
      - "com.lucid.service=trx-staking"
      - "com.lucid.cluster=07-tron-payment"

  # Payment Gateway Service
  payment-gateway:
    image: pickme/lucid-payment-gateway:latest-arm64
    container_name: lucid-payment-gateway
    restart: unless-stopped
    ports:
      - "8105:8105"
    environment:
      - SERVICE_NAME=lucid-payment-gateway
      - PORT=8105
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/payment-gateway:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/payment-gateway:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8105/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=support"
      - "com.lucid.service=payment-gateway"
      - "com.lucid.cluster=07-tron-payment"

  # TRON Payment Services (Isolated Network)
  tron-client:
    image: pickme/lucid-tron-client:latest-arm64
    container_name: lucid-tron-client
    restart: unless-stopped
    ports:
      - "8091:8091"
    environment:
      - SERVICE_NAME=lucid-tron-client
      - PORT=8091
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - TRON_NETWORK=${TRON_NETWORK:-shasta}
      - TRON_MAINNET_URL=${TRON_MAINNET_URL:-https://api.trongrid.io}
      - TRON_TESTNET_URL=${TRON_TESTNET_URL:-https://api.shasta.trongrid.io}
      - TRON_PRIVATE_KEY=${TRON_PRIVATE_KEY:?ERROR - TRON_PRIVATE_KEY must be set}
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/tron-client:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/tron-client:/app/data
    networks:
      - lucid-tron-isolated
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8096/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=support"
      - "com.lucid.service=tron-client"
      - "com.lucid.cluster=07-tron-payment"

  # ===========================================
  # PHASE 6: SPECIALIZED SERVICES
  # ===========================================

  # GUI Service
  gui:
    image: pickme/lucid-gui:latest-arm64
    container_name: lucid-gui
    restart: unless-stopped
    ports:
      - "8106:8106"
    environment:
      - SERVICE_NAME=lucid-gui
      - PORT=8106
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/gui:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/gui:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8106/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=specialized"
      - "com.lucid.service=gui"
      - "com.lucid.cluster=11-gui-services"

  # RDP Service
  rdp:
    image: pickme/lucid-rdp:latest-arm64
    container_name: lucid-rdp
    restart: unless-stopped
    ports:
      - "8107:8107"
    environment:
      - SERVICE_NAME=lucid-rdp
      - PORT=8107
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/rdp:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/rdp:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8107/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=specialized"
      - "com.lucid.service=rdp"
      - "com.lucid.cluster=12-rdp-services"

  # VM Service
  vm:
    image: pickme/lucid-vm:latest-arm64
    container_name: lucid-vm
    restart: unless-stopped
    ports:
      - "8108:8108"
    environment:
      - SERVICE_NAME=lucid-vm
      - PORT=8108
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/vm:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/vm:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8108/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=specialized"
      - "com.lucid.service=vm"
      - "com.lucid.cluster=13-vm-services"

  # Database Service
  database:
    image: pickme/lucid-database:latest-arm64
    container_name: lucid-database
    restart: unless-stopped
    ports:
      - "8109:8109"
    environment:
      - SERVICE_NAME=lucid-database
      - PORT=8109
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/database:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/database:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8109/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=specialized"
      - "com.lucid.service=database"
      - "com.lucid.cluster=14-database-services"

  # Storage Service
  storage:
    image: pickme/lucid-storage:latest-arm64
    container_name: lucid-storage
    restart: unless-stopped
    ports:
      - "8110:8110"
    environment:
      - SERVICE_NAME=lucid-storage
      - PORT=8110
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - DEBUG=false
      - MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD:?ERROR - MONGODB_PASSWORD must be set}@lucid-mongodb:27017/lucid?authSource=admin
      - REDIS_URI=redis://:${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set}@lucid-redis:6379/0
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/storage:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/storage:/app/data
    networks:
      - lucid-pi-network
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8110/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.lucid.phase=specialized"
      - "com.lucid.service=storage"
      - "com.lucid.cluster=15-storage-services"

# ===========================================
# NETWORKS
# ===========================================
networks:
  lucid-pi-network:
    name: lucid-pi-network
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
  
  # Isolated network for TRON services
  lucid-tron-isolated:
    name: lucid-tron-isolated
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1

# ===========================================
# VOLUMES
# ===========================================
# =============================================================================
# VOLUMES - Using Direct Host Paths on Pi
# =============================================================================
# All volumes are mounted directly to /mnt/myssd/Lucid on the Pi
# No named volumes needed - using host path mounts for better performance
