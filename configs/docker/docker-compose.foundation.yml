# Phase 1 Foundation Services Docker Compose
# Based on lucid-container-build-plan.plan.md Step 7
# Services: MongoDB, Redis, Elasticsearch, Authentication Service
# Network: lucid-pi-network (bridge, 172.20.0.0/16)

# Environment variables - SECURITY ENFORCED (No weak defaults allowed)
# REQUIRED: Must load with --env-file configs/environment/.env.foundation
# Example: docker-compose --env-file configs/environment/.env.foundation -f docker-compose.foundation.yml up -d
x-lucid-env: &lucid-env
  # Core identification
  LUCID_ENV: production
  LUCID_PHASE: foundation
  LUCID_CLUSTER_ID: foundation-core
  BETA_PLANES: "ops"
  
  # Build system configuration
  DOCKER_BUILDKIT: "1"
  COMPOSE_DOCKER_CLI_BUILD: "1"
  
  # Database connectivity (loaded from .env.foundation)
  MONGODB_URI: ${MONGODB_URI}
  REDIS_URI: ${REDIS_URI}
  ELASTICSEARCH_URI: ${ELASTICSEARCH_URI}
  
  # Network configuration
  LUCID_NETWORK: lucid-pi-network
  PI_HOST: ${PI_HOST:-192.168.0.75}
  PI_USER: ${PI_USER:-pickme}
  PI_DEPLOY_DIR: ${PI_DEPLOY_DIR:-/opt/lucid/production}
  
  # Service ports
  API_GATEWAY_PORT: ${API_GATEWAY_PORT:-8080}
  BLOCKCHAIN_CORE_PORT: ${BLOCKCHAIN_CORE_PORT:-8084}
  AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT:-8089}
  SESSION_API_PORT: ${SESSION_API_PORT:-8113}
  NODE_MANAGEMENT_PORT: ${NODE_MANAGEMENT_PORT:-8095}
  ADMIN_INTERFACE_PORT: ${ADMIN_INTERFACE_PORT:-8120}
  TRON_PAYMENT_PORT: ${TRON_PAYMENT_PORT:-8098}
  
  # Security (loaded from .env.foundation)
  JWT_SECRET_KEY: ${JWT_SECRET_KEY}
  ENCRYPTION_KEY: ${ENCRYPTION_KEY}
  
  # Additional Foundation Configuration
  LUCID_ENVIRONMENT: ${LUCID_ENVIRONMENT:-development}
  LOG_LEVEL: ${LOG_LEVEL:-INFO}
  HEALTH_CHECK_INTERVAL: ${HEALTH_CHECK_INTERVAL:-30}
  HEALTH_CHECK_TIMEOUT: ${HEALTH_CHECK_TIMEOUT:-10}
  HEALTH_CHECK_RETRIES: ${HEALTH_CHECK_RETRIES:-3}
  HEALTH_CHECK_START_PERIOD: ${HEALTH_CHECK_START_PERIOD:-40}

# Common configuration
x-lucid-common: &lucid-common
  restart: unless-stopped
  networks:
    - lucid-pi-network
  labels:
    - "org.lucid.phase=foundation"
    - "org.lucid.plane=ops"
    - "org.lucid.cluster=foundation"
    - "org.lucid.service=foundation"
    - "org.lucid.expose=true"
    - "org.lucid.healthcheck=enabled"

services:
  # =============================================================================
  # FOUNDATION SERVICE 1: MongoDB 7 Replica Set
  # =============================================================================
  lucid-mongodb:
    <<: *lucid-common
    container_name: lucid-mongodb
    image: pickme/lucid-mongodb:latest-arm64
    platform: linux/arm64
    command: [
      "mongod",
      "--auth",
      "--bind_ip_all", 
      "--replSet", "rs0",
      "--oplogSize", "128",
      "--wiredTigerCacheSizeGB", "0.5"
    ]
    ports:
      - "27017:27017"
    environment:
      <<: *lucid-env
      MONGO_INITDB_ROOT_USERNAME: lucid
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-changeme}
      MONGO_INITDB_DATABASE: lucid
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/mongodb:/data/db
      - /mnt/myssd/Lucid/Lucid/data/mongodb-config:/data/configdb
    networks:
      lucid-pi-network:
        aliases: [mongo, lucid_mongo, mongodb]
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    labels:
      - "org.lucid.service=mongodb"
      - "org.lucid.expose=27017"
      - "org.lucid.healthcheck=mongosh"
      - "org.lucid.security=distroless"
      - "org.lucid.user=65532:65532"
      - "org.lucid.shell=false"

  # =============================================================================
  # FOUNDATION SERVICE 2: Redis 7 Cache
  # =============================================================================
  lucid-redis:
    <<: *lucid-common
    container_name: lucid-redis
    image: pickme/lucid-redis:latest-arm64
    platform: linux/arm64
    command: [
      "redis-server",
      "--requirepass", "${REDIS_PASSWORD:?ERROR - REDIS_PASSWORD must be set in .env.foundation}",
      "--maxmemory", "512mb",
      "--maxmemory-policy", "allkeys-lru",
      "--save", "900", "1",
      "--save", "300", "10",
      "--save", "60", "10000",
      "--appendonly", "yes",
      "--appendfsync", "everysec"
    ]
    ports:
      - "6379:6379"
    environment:
      <<: *lucid-env
      REDIS_PASSWORD: ${REDIS_PASSWORD:-changeme}
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/redis:/data
    networks:
      lucid-pi-network:
        aliases: [redis, lucid_redis]
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    labels:
      - "org.lucid.service=redis"
      - "org.lucid.expose=6379"
      - "org.lucid.healthcheck=redis-cli"
      - "org.lucid.security=distroless"
      - "org.lucid.user=65532:65532"
      - "org.lucid.shell=false"

  # =============================================================================
  # FOUNDATION SERVICE 3: Elasticsearch 8 Search
  # =============================================================================
  lucid-elasticsearch:
    <<: *lucid-common
    container_name: lucid-elasticsearch
    image: pickme/lucid-elasticsearch:latest-arm64
    platform: linux/arm64
    command: [
      "elasticsearch",
      "-E", "discovery.type=single-node",
      "-E", "xpack.security.enabled=false",
      "-E", "cluster.name=lucid-cluster",
      "-E", "node.name=lucid-node",
      "-E", "bootstrap.memory_lock=true",
      "-E", "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ]
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      <<: *lucid-env
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      discovery.type: single-node
      xpack.security.enabled: "false"
      cluster.name: lucid-cluster
      node.name: lucid-node
      bootstrap.memory_lock: "true"
    volumes:
      - /mnt/myssd/Lucid/Lucid/data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      lucid-pi-network:
        aliases: [elasticsearch, lucid_elasticsearch]
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    labels:
      - "org.lucid.service=elasticsearch"
      - "org.lucid.expose=9200"
      - "org.lucid.healthcheck=curl"
      - "org.lucid.security=distroless"
      - "org.lucid.user=65532:65532"
      - "org.lucid.shell=false"

  # =============================================================================
  # FOUNDATION SERVICE 4: Authentication Service
  # =============================================================================
  lucid-auth-service:
    <<: *lucid-common
    container_name: lucid-auth-service
    image: pickme/lucid-auth-service:latest-arm64
    platform: linux/arm64
    ports:
      - "8089:8089"
    environment:
      <<: *lucid-env
      SERVICE_NAME: lucid-auth-service
      AUTH_SERVICE_PORT: 8089
      AUTH_SERVICE_URL: http://192.168.0.75:8089
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 15
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      TRON_SIGNATURE_VERIFICATION_ENABLED: "true"
      TRON_NETWORK: mainnet
      ENABLE_HARDWARE_WALLET: "true"
      LEDGER_SUPPORTED: "true"
      TREZOR_SUPPORTED: "true"
      KEEPKEY_SUPPORTED: "true"
      RBAC_ENABLED: "true"
      DEFAULT_USER_ROLE: user
      BCRYPT_ROUNDS: 12
      MAX_LOGIN_ATTEMPTS: 5
      LOGIN_COOLDOWN_MINUTES: 15
    volumes:
      - /mnt/myssd/Lucid/Lucid/logs/auth:/app/logs
      - /mnt/myssd/Lucid/Lucid/data/auth:/app/data
    networks:
      lucid-pi-network:
        aliases: [auth-service, lucid_auth]
    depends_on:
      lucid-mongodb:
        condition: service_healthy
      lucid-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    labels:
      - "org.lucid.service=auth-service"
      - "org.lucid.expose=8089"
      - "org.lucid.healthcheck=curl"
      - "org.lucid.depends=mongodb,redis"
      - "org.lucid.security=distroless"
      - "org.lucid.user=65532:65532"
      - "org.lucid.shell=false"

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  lucid-pi-network:
    name: lucid-pi-network
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# =============================================================================
# VOLUMES - Using Direct Host Paths on Pi
# =============================================================================
# All volumes are mounted directly to /mnt/myssd/Lucid on the Pi
# No named volumes needed - using host path mounts for better performance