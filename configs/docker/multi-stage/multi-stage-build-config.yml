# Multi-Stage Build Configuration for Lucid Project
# Configuration for building multi-stage images with layer optimization

version: '3.8'

services:
  # Multi-stage build orchestrator
  build-orchestrator:
    image: lucid/multi-stage-base:${VERSION:-latest}
    environment:
      - BUILD_PLATFORM=${BUILD_PLATFORM:-linux/amd64,linux/arm64}
      - REGISTRY=${REGISTRY:-ghcr.io}
      - IMAGE_NAME=${IMAGE_NAME:-lucid}
      - VERSION=${VERSION:-latest}
      - PUSH_IMAGES=${PUSH_IMAGES:-false}
      - NO_CACHE=${NO_CACHE:-false}
      - OPTIMIZE_LAYERS=${OPTIMIZE_LAYERS:-true}
      - PARALLEL_BUILDS=${PARALLEL_BUILDS:-4}
    volumes:
      - ./build-cache:/cache
      - ./build-logs:/logs
      - ./layer-analysis:/analysis
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - build-network
    command: >
      sh -c "
        echo 'Starting multi-stage build orchestrator...' &&
        mkdir -p /cache /logs /analysis &&
        python /app/scripts/build-multi-stage.py --orchestrate
      "

  # Layer analyzer for multi-stage builds
  layer-analyzer:
    image: lucid/multi-stage-builder:${VERSION:-latest}
    environment:
      - ANALYSIS_TARGET=layers
      - OPTIMIZATION_LEVEL=aggressive
      - GENERATE_REPORTS=true
    volumes:
      - ./layer-reports:/reports
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - build-network
    command: >
      sh -c "
        echo 'Starting layer analysis...' &&
        mkdir -p /reports &&
        python /app/scripts/analyze-layers.py --multi-stage
      "

  # Build cache optimizer
  cache-optimizer:
    image: lucid/multi-stage-builder:${VERSION:-latest}
    environment:
      - CACHE_OPTIMIZATION=true
      - CACHE_STRATEGY=aggressive
      - CLEANUP_OLD_CACHES=true
    volumes:
      - ./build-cache:/cache
      - ./cache-reports:/reports
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - build-network
    command: >
      sh -c "
        echo 'Starting cache optimization...' &&
        mkdir -p /reports &&
        python /app/scripts/optimize-cache.py --multi-stage
      "

  # Multi-stage build validator
  build-validator:
    image: lucid/multi-stage-base:${VERSION:-latest}
    environment:
      - VALIDATION_TARGET=multi-stage
      - SECURITY_SCAN=true
      - SIZE_ANALYSIS=true
    volumes:
      - ./validation-reports:/reports
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - build-network
    command: >
      sh -c "
        echo 'Starting build validation...' &&
        mkdir -p /reports &&
        python /app/scripts/validate-build.py --multi-stage
      "

networks:
  build-network:
    driver: bridge
    name: lucid-multi-stage-build-network

volumes:
  build-cache:
    name: lucid-multi-stage-build-cache
  build-logs:
    name: lucid-multi-stage-build-logs
  layer-analysis:
    name: lucid-multi-stage-layer-analysis
  layer-reports:
    name: lucid-multi-stage-layer-reports
  cache-reports:
    name: lucid-multi-stage-cache-reports
  validation-reports:
    name: lucid-multi-stage-validation-reports
