# TRON Payment Service Configuration
# This file contains configuration for the TRON payment system services

# Service Information
service:
  name: "tron-payment"
  version: "1.0.0"
  description: "TRON Payment System for Lucid RDP"
  environment: "${ENVIRONMENT:-development}"

# TRON Network Configuration
tron:
  network: "${TRON_NETWORK:-mainnet}"
  api_url: "${TRON_API_URL:-https://api.trongrid.io}"
  api_key: "${TRON_API_KEY:-}"
  timeout: 30
  retry_attempts: 3
  retry_delay: 1000

# USDT Configuration
usdt:
  contract_address: "${USDT_CONTRACT_ADDRESS:-TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t}"
  decimals: 6
  min_transfer: 1
  max_transfer: 1000000
  gas_limit: 100000
  gas_price: 1000000

# Wallet Configuration
wallet:
  enabled: true
  encryption_enabled: true
  encryption_algorithm: "AES-256-GCM"
  backup_enabled: true
  backup_interval: 3600
  max_wallets_per_user: 10

# Payout Configuration
payout:
  enabled: true
  v0_enabled: true
  kyc_enabled: true
  direct_enabled: true
  min_amount: 1
  max_amount: 10000
  batch_size: 10
  batch_timeout: 300
  confirmation_blocks: 20

# Staking Configuration
staking:
  enabled: true
  min_amount: 1000
  max_amount: 10000000
  reward_rate: 0.05
  lock_period: 86400
  auto_compound: false

# Service Ports
ports:
  tron_client: 8091
  payout_router: 8092
  wallet_manager: 8093
  usdt_manager: 8094
  trx_staking: 8095
  payment_gateway: 8096

# Database Configuration
database:
  mongodb:
    host: "${MONGODB_HOST:-localhost}"
    port: "${MONGODB_PORT:-27017}"
    database: "${MONGODB_DATABASE:-lucid}"
    username: "${MONGODB_USERNAME:-lucid}"
    password: "${MONGODB_PASSWORD:-}"
    auth_source: "admin"
    pool_size: 20
    max_idle_time: 30000
    server_selection_timeout: 5000

  redis:
    host: "${REDIS_HOST:-localhost}"
    port: "${REDIS_PORT:-6379}"
    password: "${REDIS_PASSWORD:-}"
    database: 0
    pool_size: 50
    max_connections: 1000
    timeout: 5

# Security Configuration
security:
  jwt:
    secret: "${JWT_SECRET:-}"
    algorithm: "HS256"
    access_token_expire_minutes: 15
    refresh_token_expire_days: 7

  encryption:
    key: "${ENCRYPTION_KEY:-}"
    algorithm: "AES-256-GCM"
    iv_length: 12

  ssl:
    enabled: "${SSL_ENABLED:-true}"
    cert_path: "${SSL_CERT_PATH:-/etc/ssl/certs/lucid.crt}"
    key_path: "${SSL_KEY_PATH:-/etc/ssl/private/lucid.key}"
    ca_path: "${SSL_CA_PATH:-/etc/ssl/certs/ca.crt}"

# Rate Limiting
rate_limiting:
  enabled: true
  requests_per_minute: 100
  burst_size: 20
  window_size: 60

# Monitoring Configuration
monitoring:
  enabled: true
  metrics_enabled: true
  health_check_interval: 30
  health_check_timeout: 10
  prometheus_port: 9090
  prometheus_path: "/metrics"

# Logging Configuration
logging:
  level: "${LOG_LEVEL:-INFO}"
  format: "json"
  file: "/var/log/lucid/tron-payment.log"
  max_size: "100MB"
  max_files: 10
  compress: true

# Alerting Configuration
alerting:
  enabled: true
  email:
    smtp_host: "${ALERTING_EMAIL_SMTP_HOST:-}"
    smtp_port: "${ALERTING_EMAIL_SMTP_PORT:-587}"
    smtp_user: "${ALERTING_EMAIL_SMTP_USER:-}"
    smtp_password: "${ALERTING_EMAIL_SMTP_PASSWORD:-}"
    from: "${ALERTING_EMAIL_FROM:-}"
    to: "${ALERTING_EMAIL_TO:-}"

  thresholds:
    error_rate: 5
    response_time: 1000
    cpu_usage: 80
    memory_usage: 80

# Network Configuration
network:
  interface: "${NETWORK_INTERFACE:-eth0}"
  mtu: 1500
  buffer_size: 65536
  timeout: 30
  keepalive: true

# Container Configuration
container:
  runtime: "docker"
  network: "lucid-network-isolated"
  subnet: "172.21.0.0/16"
  gateway: "172.21.0.1"

# Resource Limits
resources:
  cpu_limit: "2"
  memory_limit: "2Gi"
  cpu_request: "0.5"
  memory_request: "512Mi"
  storage_limit: "10Gi"

# Health Checks
health_checks:
  liveness:
    enabled: true
    path: "/health"
    port: 8091
    initial_delay: 30
    period: 10
    timeout: 5
    failure_threshold: 3

  readiness:
    enabled: true
    path: "/ready"
    port: 8091
    initial_delay: 5
    period: 5
    timeout: 3
    failure_threshold: 3

# Service Dependencies
dependencies:
  - name: "mongodb"
    host: "mongodb"
    port: 27017
    timeout: 10

  - name: "redis"
    host: "redis"
    port: 6379
    timeout: 10

  - name: "auth-service"
    host: "auth-service"
    port: 8089
    timeout: 10

# Environment Variables
environment:
  TRON_NETWORK: "${TRON_NETWORK:-mainnet}"
  TRON_API_URL: "${TRON_API_URL:-https://api.trongrid.io}"
  TRON_API_KEY: "${TRON_API_KEY:-}"
  USDT_CONTRACT_ADDRESS: "${USDT_CONTRACT_ADDRESS:-TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t}"
  JWT_SECRET: "${JWT_SECRET:-}"
  ENCRYPTION_KEY: "${ENCRYPTION_KEY:-}"
  MONGODB_URI: "mongodb://${MONGODB_USERNAME:-lucid}:${MONGODB_PASSWORD:-}@${MONGODB_HOST:-localhost}:${MONGODB_PORT:-27017}/${MONGODB_DATABASE:-lucid}?authSource=admin"
  REDIS_URL: "redis://${REDIS_HOST:-localhost}:${REDIS_PORT:-6379}"

# Service Discovery
discovery:
  enabled: true
  consul:
    host: "consul"
    port: 8500
    service_name: "tron-payment"
    service_tags: ["payment", "tron", "crypto"]
    health_check_interval: 30

# Load Balancing
load_balancing:
  enabled: false
  algorithm: "round_robin"
  health_check: true
  sticky_sessions: false

# Caching
caching:
  enabled: true
  ttl: 300
  max_size: 1000
  eviction_policy: "LRU"

# Backup Configuration
backup:
  enabled: true
  schedule: "0 2 * * *"
  retention_days: 30
  compression: true
  encryption: true
  storage:
    type: "local"
    path: "/var/backups/lucid/tron-payment"

# Development Configuration
development:
  debug: "${DEBUG:-false}"
  hot_reload: false
  mock_external_apis: false
  test_mode: false

# Production Configuration
production:
  debug: false
  hot_reload: false
  mock_external_apis: false
  test_mode: false
  ssl_required: true
  cors_origins: ["https://lucid.example.com"]

# Testing Configuration
testing:
  debug: true
  hot_reload: true
  mock_external_apis: true
  test_mode: true
  ssl_required: false
  cors_origins: ["*"]
