# Authentication Service Configuration
# This file contains configuration for the Lucid authentication service

# Service Information
service:
  name: "auth-service"
  version: "1.0.0"
  description: "Authentication Service for Lucid RDP"
  environment: "${ENVIRONMENT:-development}"

# Service Configuration
server:
  host: "${AUTH_SERVICE_HOST:-0.0.0.0}"
  port: "${AUTH_SERVICE_PORT:-8089}"
  workers: 4
  timeout: 30
  keepalive: true
  max_connections: 1000

# Authentication Configuration
authentication:
  jwt:
    secret: "${JWT_SECRET:-}"
    algorithm: "HS256"
    access_token_expire_minutes: 15
    refresh_token_expire_days: 7
    issuer: "lucid-auth"
    audience: "lucid-system"

  session:
    timeout: "${SESSION_TIMEOUT:-3600}"
    secret: "${SESSION_SECRET:-}"
    cookie_secure: true
    cookie_httponly: true
    cookie_samesite: "strict"
    max_age: 86400

  totp:
    enabled: true
    issuer: "Lucid RDP"
    window: 1
    digits: 6
    period: 30

# Hardware Wallet Configuration
hardware_wallet:
  enabled: true
  timeout: 30
  retry_attempts: 3
  supported_devices:
    - "ledger"
    - "trezor"
    - "keepkey"
  
  ledger:
    enabled: true
    timeout: 30
    retry_attempts: 3
  
  trezor:
    enabled: true
    timeout: 30
    retry_attempts: 3
  
  keepkey:
    enabled: true
    timeout: 30
    retry_attempts: 3

# Role-Based Access Control (RBAC)
rbac:
  enabled: true
  default_role: "read_only"
  roles:
    super_admin:
      permissions:
        - "system:*"
        - "users:*"
        - "sessions:*"
        - "blockchain:*"
        - "nodes:*"
        - "admin:*"
        - "emergency:*"
    
    admin:
      permissions:
        - "users:read"
        - "users:update"
        - "sessions:read"
        - "sessions:terminate"
        - "blockchain:read"
        - "nodes:read"
        - "admin:read"
    
    operator:
      permissions:
        - "sessions:read"
        - "sessions:create"
        - "sessions:terminate"
        - "nodes:read"
        - "blockchain:read"
    
    auditor:
      permissions:
        - "users:read"
        - "sessions:read"
        - "blockchain:read"
        - "nodes:read"
        - "admin:read"
        - "audit:read"
    
    read_only:
      permissions:
        - "users:read"
        - "sessions:read"
        - "blockchain:read"
        - "nodes:read"

# Database Configuration
database:
  mongodb:
    host: "${MONGODB_HOST:-localhost}"
    port: "${MONGODB_PORT:-27017}"
    database: "${MONGODB_DATABASE:-lucid}"
    username: "${MONGODB_USERNAME:-lucid}"
    password: "${MONGODB_PASSWORD:-}"
    auth_source: "admin"
    pool_size: 20
    max_idle_time: 30000
    server_selection_timeout: 5000

  redis:
    host: "${REDIS_HOST:-localhost}"
    port: "${REDIS_PORT:-6379}"
    password: "${REDIS_PASSWORD:-}"
    database: 0
    pool_size: 50
    max_connections: 1000
    timeout: 5

# Security Configuration
security:
  encryption:
    key: "${ENCRYPTION_KEY:-}"
    algorithm: "AES-256-GCM"
    iv_length: 12

  password:
    min_length: 8
    require_uppercase: true
    require_lowercase: true
    require_numbers: true
    require_symbols: true
    max_age_days: 90
    history_count: 5

  account:
    lockout_attempts: 5
    lockout_duration: 900
    max_sessions: 10
    session_timeout: 3600

  ssl:
    enabled: "${SSL_ENABLED:-true}"
    cert_path: "${SSL_CERT_PATH:-/etc/ssl/certs/lucid.crt}"
    key_path: "${SSL_KEY_PATH:-/etc/ssl/private/lucid.key}"
    ca_path: "${SSL_CA_PATH:-/etc/ssl/certs/ca.crt}"

# Rate Limiting
rate_limiting:
  enabled: true
  requests_per_minute: 100
  burst_size: 20
  window_size: 60
  login_attempts_per_minute: 5
  password_reset_attempts_per_hour: 3

# Audit Logging
audit:
  enabled: true
  level: "INFO"
  events:
    - "authentication"
    - "authorization"
    - "user_management"
    - "session_management"
    - "security_events"
  
  retention_days: 90
  export_enabled: true
  export_formats: ["json", "csv"]

# Monitoring Configuration
monitoring:
  enabled: true
  metrics_enabled: true
  health_check_interval: 30
  health_check_timeout: 10
  prometheus_port: 9090
  prometheus_path: "/metrics"

# Logging Configuration
logging:
  level: "${LOG_LEVEL:-INFO}"
  format: "json"
  file: "/mnt/myssd/Lucid/Lucid/logs/auth-service.log"
  max_size: "100MB"
  max_files: 10
  compress: true

# Alerting Configuration
alerting:
  enabled: true
  email:
    smtp_host: "${ALERTING_EMAIL_SMTP_HOST:-}"
    smtp_port: "${ALERTING_EMAIL_SMTP_PORT:-587}"
    smtp_user: "${ALERTING_EMAIL_SMTP_USER:-}"
    smtp_password: "${ALERTING_EMAIL_SMTP_PASSWORD:-}"
    from: "${ALERTING_EMAIL_FROM:-}"
    to: "${ALERTING_EMAIL_TO:-}"

  thresholds:
    error_rate: 5
    response_time: 1000
    cpu_usage: 80
    memory_usage: 80
    failed_logins: 10

# Network Configuration
network:
  interface: "${NETWORK_INTERFACE:-eth0}"
  mtu: 1500
  buffer_size: 65536
  timeout: 30
  keepalive: true

# Container Configuration
container:
  runtime: "docker"
  network: "lucid-network"
  subnet: "172.20.0.0/16"
  gateway: "172.20.0.1"

# Resource Limits
resources:
  cpu_limit: "2"
  memory_limit: "2Gi"
  cpu_request: "0.5"
  memory_request: "512Mi"
  storage_limit: "5Gi"

# Health Checks
health_checks:
  liveness:
    enabled: true
    path: "/health"
    port: 8089
    initial_delay: 30
    period: 10
    timeout: 5
    failure_threshold: 3

  readiness:
    enabled: true
    path: "/ready"
    port: 8089
    initial_delay: 5
    period: 5
    timeout: 3
    failure_threshold: 3

# Service Dependencies
dependencies:
  - name: "mongodb"
    host: "mongodb"
    port: 27017
    timeout: 10

  - name: "redis"
    host: "redis"
    port: 6379
    timeout: 10

# Environment Variables
environment:
  AUTH_SERVICE_HOST: "${AUTH_SERVICE_HOST:-0.0.0.0}"
  AUTH_SERVICE_PORT: "${AUTH_SERVICE_PORT:-8089}"
  JWT_SECRET: "${JWT_SECRET:-}"
  SESSION_SECRET: "${SESSION_SECRET:-}"
  ENCRYPTION_KEY: "${ENCRYPTION_KEY:-}"
  MONGODB_URI: "mongodb://${MONGODB_USERNAME:-lucid}:${MONGODB_PASSWORD:-}@${MONGODB_HOST:-localhost}:${MONGODB_PORT:-27017}/${MONGODB_DATABASE:-lucid}?authSource=admin"
  REDIS_URL: "redis://${REDIS_HOST:-localhost}:${REDIS_PORT:-6379}"

# Service Discovery
discovery:
  enabled: true
  consul:
    host: "consul"
    port: 8500
    service_name: "auth-service"
    service_tags: ["auth", "authentication", "security"]
    health_check_interval: 30

# Load Balancing
load_balancing:
  enabled: false
  algorithm: "round_robin"
  health_check: true
  sticky_sessions: false

# Caching
caching:
  enabled: true
  ttl: 300
  max_size: 1000
  eviction_policy: "LRU"

# Backup Configuration
backup:
  enabled: true
  schedule: "0 2 * * *"
  retention_days: 30
  compression: true
  encryption: true
  storage:
    type: "local"
    path: "/var/backups/lucid/auth-service"

# Development Configuration
development:
  debug: "${DEBUG:-false}"
  hot_reload: false
  mock_hardware_wallets: false
  test_mode: false

# Production Configuration
production:
  debug: false
  hot_reload: false
  mock_hardware_wallets: false
  test_mode: false
  ssl_required: true
  cors_origins: ["https://lucid.example.com"]

# Testing Configuration
testing:
  debug: true
  hot_reload: true
  mock_hardware_wallets: true
  test_mode: true
  ssl_required: false
  cors_origins: ["*"]
