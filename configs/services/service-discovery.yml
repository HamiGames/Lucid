# Service Discovery Configuration
# Implements service discovery and registration for cross-system communication
# Based on Beta sidecar pattern from architecture documents

service_discovery:
  version: "1.0.0"
  description: "Service discovery configuration for Lucid multi-system architecture"
  last_updated: "2025-01-10T19:08:00Z"

# Discovery Backend Configuration
discovery_backend:
  type: "consul"
  consul:
    host: "lucid-service-mesh-controller"
    port: 8500
    datacenter: "lucid-dc"
    acl_token: "${CONSUL_ACL_TOKEN:-}"
    ssl_enabled: false
    ssl_verify: false
    
  # Alternative: etcd backend
  etcd:
    enabled: false
    endpoints:
      - "http://etcd-1:2379"
      - "http://etcd-2:2379"
      - "http://etcd-3:2379"
    timeout: 5000
    retry_attempts: 3

# Service Registration Configuration
service_registration:
  enabled: true
  registration_interval: 30  # seconds
  deregistration_grace_period: 60  # seconds
  
  # Service metadata
  default_metadata:
    version: "1.0.0"
    environment: "${LUCID_ENVIRONMENT:-production}"
    cluster: "lucid"
    
  # Health check configuration
  health_checks:
    enabled: true
    interval: 30  # seconds
    timeout: 10  # seconds
    deregister_critical_service_after: 120  # seconds
    
    # HTTP health check
    http:
      enabled: true
      path: "/health"
      expected_status: 200
      
    # TCP health check
    tcp:
      enabled: false
      port: 8080
      
    # Script health check
    script:
      enabled: false
      script_path: "/mnt/myssd/Lucid/Lucid/scripts/health-check.sh"

# Service Planes Configuration
service_planes:
  # Operations Plane
  ops_plane:
    name: "operations"
    description: "Management and monitoring services"
    network: "lucid-pi-network"
    subnet: "172.20.0.0/16"
    
    services:
      - name: "lucid-service-mesh-controller"
        port: 8500
        tags: ["consul", "service-mesh", "ops"]
        health_check: "/v1/status/leader"
        
      - name: "lucid-admin-interface"
        port: 8083
        tags: ["admin", "management", "ops"]
        health_check: "/health"
        
      - name: "lucid-gui-docker-manager"
        port: 8098
        tags: ["gui", "docker", "management", "ops"]
        health_check: "/health"

  # Chain Plane
  chain_plane:
    name: "blockchain"
    description: "Core blockchain operations (lucid_blocks)"
    network: "lucid-pi-network"
    subnet: "172.20.0.0/16"
    
    services:
      - name: "lucid-blockchain-core"
        port: 8084
        tags: ["blockchain", "consensus", "chain"]
        health_check: "/health"
        
      - name: "lucid-api-gateway"
        port: 8080
        tags: ["gateway", "api", "chain"]
        health_check: "/health"

  # Wallet Plane (Isolated)
  wallet_plane:
    name: "wallet"
    description: "Payment operations (TRON only)"
    network: "lucid-tron-isolated"
    subnet: "172.21.0.0/16"
    isolated: true
    
    services:
      - name: "lucid-tron-client"
        port: 8096
        tags: ["tron", "payment", "wallet"]
        health_check: "/health"
        
      - name: "lucid-payout-router"
        port: 8097
        tags: ["tron", "payout", "wallet"]
        health_check: "/health"
        
      - name: "lucid-wallet-manager"
        port: 8098
        tags: ["tron", "wallet", "wallet"]
        health_check: "/health"
        
      - name: "lucid-usdt-manager"
        port: 8099
        tags: ["tron", "usdt", "wallet"]
        health_check: "/health"

  # GUI Plane
  gui_plane:
    name: "gui"
    description: "GUI integration services"
    network: "lucid-gui-network"
    subnet: "172.22.0.0/16"
    
    services:
      - name: "lucid-gui-api-bridge"
        port: 8097
        tags: ["gui", "api-bridge", "integration"]
        health_check: "/health"
        
      - name: "lucid-gui-tor-manager"
        port: 9050
        tags: ["gui", "tor", "privacy"]
        health_check: "/health"
        
      - name: "lucid-gui-hardware-wallet"
        port: 8099
        tags: ["gui", "hardware-wallet", "security"]
        health_check: "/health"

# Service Mesh Configuration
service_mesh:
  enabled: true
  mesh_type: "consul-connect"
  
  # Sidecar proxy configuration
  sidecar_proxy:
    enabled: true
    proxy_type: "envoy"
    proxy_port: 20000
    admin_port: 19000
    
  # Traffic management
  traffic_management:
    enabled: true
    
    # Load balancing
    load_balancing:
      algorithm: "round_robin"
      health_check: true
      
    # Circuit breaker
    circuit_breaker:
      enabled: true
      failure_threshold: 5
      recovery_timeout: 30
      
    # Retry policy
    retry_policy:
      enabled: true
      max_retries: 3
      retry_on: ["5xx", "reset", "connect-failure"]
      
    # Timeout policy
    timeout_policy:
      enabled: true
      request_timeout: 30
      idle_timeout: 60

# Network Policies Configuration
network_policies:
  enabled: true
  
  # Default deny all
  default_policy: "deny"
  
  # Allow policies
  allow_policies:
    # Operations plane can access all planes
    - name: "ops-to-all"
      source: "ops_plane"
      destination: "*"
      ports: ["80", "443", "8080-8099"]
      
    # Chain plane can access wallet plane for payments only
    - name: "chain-to-wallet"
      source: "chain_plane"
      destination: "wallet_plane"
      ports: ["8096"]  # Only TRON client
      protocols: ["http"]
      
    # GUI plane can access all planes
    - name: "gui-to-all"
      source: "gui_plane"
      destination: "*"
      ports: ["80", "443", "8080-8099"]
      
    # Wallet plane can only access external TRON networks
    - name: "wallet-to-external"
      source: "wallet_plane"
      destination: "external"
      ports: ["443"]
      hosts: ["api.trongrid.io", "api.shasta.trongrid.io"]

# DNS Configuration
dns:
  enabled: true
  dns_type: "consul"
  
  # DNS forwarding
  forwarding:
    enabled: true
    upstream_dns:
      - "8.8.8.8"
      - "8.8.4.4"
      
  # Service discovery DNS
  service_discovery:
    enabled: true
    domain: "lucid.local"
    
    # Service name resolution
    service_names:
      - "lucid-api-gateway.lucid.local"
      - "lucid-blockchain-core.lucid.local"
      - "lucid-auth-service.lucid.local"
      - "lucid-session-api.lucid.local"
      - "lucid-node-management.lucid.local"
      - "lucid-admin-interface.lucid.local"
      - "lucid-tron-client.lucid.local"

# Load Balancing Configuration
load_balancing:
  enabled: true
  
  # Gateway load balancing
  gateway:
    algorithm: "round_robin"
    health_check: true
    sticky_sessions: false
    
  # Service load balancing
  services:
    algorithm: "least_connections"
    health_check: true
    max_connections: 1000
    
  # Backend load balancing
  backends:
    algorithm: "weighted_round_robin"
    weights:
      primary: 80
      secondary: 20

# Health Check Configuration
health_checks:
  global:
    interval: 30  # seconds
    timeout: 10  # seconds
    deregister_critical_service_after: 120  # seconds
    
  # Service-specific health checks
  services:
    lucid-api-gateway:
      type: "http"
      path: "/health"
      expected_status: 200
      interval: 30
      timeout: 10
      
    lucid-blockchain-core:
      type: "http"
      path: "/health"
      expected_status: 200
      interval: 30
      timeout: 10
      
    lucid-auth-service:
      type: "http"
      path: "/health"
      expected_status: 200
      interval: 30
      timeout: 10
      
    lucid-tron-client:
      type: "http"
      path: "/health"
      expected_status: 200
      interval: 30
      timeout: 10
      isolated_network: true

# Monitoring Configuration
monitoring:
  enabled: true
  
  # Metrics collection
  metrics:
    enabled: true
    endpoint: "/metrics"
    interval: 30  # seconds
    
    # Prometheus metrics
    prometheus:
      enabled: true
      port: 9090
      path: "/metrics"
      
  # Logging
  logging:
    enabled: true
    level: "info"
    format: "json"
    
    # Structured logging
    structured:
      enabled: true
      fields:
        - "service_name"
        - "service_id"
        - "node_id"
        - "timestamp"
        
  # Alerting
  alerting:
    enabled: true
    
    # Alert rules
    rules:
      - name: "ServiceDown"
        condition: "service_health == 0"
        duration: "1m"
        severity: "critical"
        
      - name: "HighLatency"
        condition: "response_time > 1000"
        duration: "5m"
        severity: "warning"
        
      - name: "HighErrorRate"
        condition: "error_rate > 5"
        duration: "2m"
        severity: "warning"

# Security Configuration
security:
  enabled: true
  
  # mTLS configuration
  mtls:
    enabled: true
    cca_cert: "/mnt/myssd/Lucid/Lucid/certs/consul/ca.crt"
    cert_file: "/mnt/myssd/Lucid/Lucid/certs/consul/consul.crt"
    key_file: "/mnt/myssd/Lucid/Lucid/certs/consul/consul.key"

    
  # ACL configuration
  acl:
    enabled: true
    default_policy: "deny"
    
    # Token policies
    policies:
      - name: "gui-access"
        rules: |
          service "lucid-gui-api-bridge" {
            policy = "write"
          }
          service "lucid-gui-docker-manager" {
            policy = "write"
          }
          
      - name: "chain-access"
        rules: |
          service "lucid-blockchain-core" {
            policy = "write"
          }
          service "lucid-api-gateway" {
            policy = "write"
          }
          
      - name: "wallet-access"
        rules: |
          service "lucid-tron-client" {
            policy = "write"
          }
          
  # Network encryption
  encryption:
    enabled: true
    gossip_key: "${CONSUL_GOSSIP_KEY}"
    rpc_encryption: true

# Backup Configuration
backup:
  enabled: true
  
  # Backup schedule
  schedule: "0 2 * * *"  # Daily at 2 AM
  
  # Backup targets
  targets:
    - name: "consul-data"
      path: "/mnt/myssd/Lucid/Lucid/data/consul"
      compress: true
      
    - name: "service-configs"
      path: "/mnt/myssd/Lucid/Lucid/configs/consul"
      compress: true
      
  # Backup retention
  retention:
    days: 30
    max_backups: 30

# Configuration Validation
validation:
  enabled: true
  
  # Service configuration validation
  service_config:
    enabled: true
    strict_mode: true
    
  # Network policy validation
  network_policies:
    enabled: true
    validate_isolation: true
    
  # Security policy validation
  security_policies:
    enabled: true
    validate_mtls: true
    validate_acls: true
