name: lucid-dev
services:
  lucid_api:
    profiles:
      - dev
    command:
      - set
      - -e
    container_name: lucid_api
    depends_on:
      lucid_mongo:
        condition: service_healthy
        required: true
      tor-proxy:
        condition: service_healthy
        required: true
    entrypoint:
      - /bin/sh
      - -lc
    environment:
      BLOCK_ONION: ""
      BLOCK_RPC_URL: ""
      COOKIE: ""
      HEX: ""
      LUCID_ENV: dev
      MONGO_INITDB_ROOT_PASSWORD: PineIrisCatKiteMilkElf-Alls3em5w*l!
      MONGO_INITDB_ROOT_USERNAME: Pickme_admin
      MONGO_URL: mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin&retryWrites=false
      ONION: ""
      PORT: "8081"
      TOR_CONTROL_PASSWORD: ""
    image: python:3.12-slim
    networks:
      lucid_net: null
    ports:
      - mode: ingress
        target: 8081
        published: "8081"
        protocol: tcp
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - type: bind
        source: C:\Users\surba\Desktop\personal\THE_FUCKER\lucid_2\03-api-gateway\api\app
        target: /app
        bind:
          create_host_path: true
      - type: volume
        source: onion_state
        target: /run/lucid/onion
        read_only: true
        volume: {}
    working_dir: /app
  lucid_api_gateway:
    profiles:
      - dev
    command:
      - /bin/sh
      - -lc
      - |
        cat >/etc/nginx/conf.d/default.conf <<'EOF'
        server {
          listen 8080;
          client_max_body_size 16m;
          proxy_http_version 1.1;

          location / {
            proxy_pass http://lucid_api:8081;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
            proxy_read_timeout 60s;
          }
        }
        EOF
        exec nginx -g 'daemon off;'
    container_name: lucid_api_gateway
    depends_on:
      lucid_api:
        condition: service_started
        required: true
    environment:
      BLOCK_ONION: ""
      BLOCK_RPC_URL: ""
      COOKIE: ""
      HEX: ""
      LUCID_ENV: dev
      MONGO_INITDB_ROOT_PASSWORD: PineIrisCatKiteMilkElf-Alls3em5w*l!
      MONGO_INITDB_ROOT_USERNAME: Pickme_admin
      MONGO_URL: mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin&retryWrites=false
      ONION: ""
      TOR_CONTROL_PASSWORD: ""
    image: nginx:1.28-alpine
    networks:
      lucid_net: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - type: volume
        source: onion_state
        target: /run/lucid/onion
        read_only: true
        volume: {}
  lucid_mongo:
    profiles:
      - dev
    command:
      - mongod
      - --auth
      - --bind_ip_all
    container_name: lucid_mongo
    environment:
      MONGO_INITDB_DATABASE: lucid
      MONGO_INITDB_ROOT_PASSWORD: lucid
      MONGO_INITDB_ROOT_USERNAME: lucid
    healthcheck:
      test:
        - CMD-SHELL
        - 'mongosh --quiet -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --eval "db.runCommand({ ping: 1 }).ok" | grep -q 1'
      timeout: 5s
      interval: 10s
      retries: 10
      start_period: 15s
    image: mongo:7
    networks:
      lucid_net: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
        volume: {}
  server-tools:
    profiles:
      - dev
    command:
      - set
      - -e
      - apk
      - add
      - --no-cache
      - bash
      - curl
      - jq
      - bind-tools
      - netcat-openbsd
      - socat
      - openssl
    container_name: lucid_server_tools
    depends_on:
      lucid_api:
        condition: service_started
        required: true
      lucid_mongo:
        condition: service_healthy
        required: true
      tor-proxy:
        condition: service_healthy
        required: true
    entrypoint:
      - /bin/sh
      - -lc
    environment:
      BLOCK_ONION: ""
      BLOCK_RPC_URL: ""
      COOKIE: ""
      HEX: ""
      LUCID_ENV: dev
      MONGO_INITDB_ROOT_PASSWORD: PineIrisCatKiteMilkElf-Alls3em5w*l!
      MONGO_INITDB_ROOT_USERNAME: Pickme_admin
      MONGO_URL: mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin&retryWrites=false
      ONION: ""
      TOR_CONTROL_PASSWORD: ""
    image: alpine:3.22.1
    networks:
      lucid_net: null
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
  tor-proxy:
    profiles:
      - dev
    build:
      context: C:\Users\surba\Desktop\personal\THE_FUCKER\lucid_2\02-network-security\tor
      dockerfile: Dockerfile
    container_name: lucid_tor
    environment:
      BLOCK_ONION: ""
      BLOCK_RPC_URL: ""
      COOKIE: ""
      HEX: ""
      LUCID_ENV: dev
      MONGO_INITDB_ROOT_PASSWORD: PineIrisCatKiteMilkElf-Alls3em5w*l!
      MONGO_INITDB_ROOT_USERNAME: Pickme_admin
      MONGO_URL: mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin&retryWrites=false
      ONION: ""
      TOR_CONTROL_PASSWORD: ""
    expose:
      - "9050"
      - "9051"
    healthcheck:
      test:
        - CMD-SHELL
        - sh /usr/local/bin/tor-health
      timeout: 6s
      interval: 10s
      retries: 18
      start_period: 25s
    networks:
      lucid_net:
        aliases:
          - lucid_tor
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - type: volume
        source: tor_data
        target: /var/lib/tor
        volume: {}
      - type: volume
        source: onion_state
        target: /run/lucid/onion
        volume: {}
      - type: bind
        source: C:\Users\surba\Desktop\personal\THE_FUCKER\lucid_2\02-network-security\tor\torrc
        target: /etc/tor/torrc
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\surba\Desktop\personal\THE_FUCKER\lucid_2\02-network-security\tor\tor-health.sh
        target: /usr/local/bin/tor-health
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\surba\Desktop\personal\THE_FUCKER\lucid_2\02-network-security\tor\tor-show-onion.sh
        target: /usr/local/bin/tor-show-onion
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\surba\Desktop\personal\THE_FUCKER\lucid_2\02-network-security\tor\scripts\create_ephemeral_onion.sh
        target: /usr/local/bin/create-ephemeral-onion
        read_only: true
        bind:
          create_host_path: true
  tunnel-tools:
    profiles:
      - dev
    build:
      context: C:\Users\surba\Desktop\personal\THE_FUCKER\lucid_2\02-network-security\tunnels
      dockerfile: Dockerfile
    container_name: lucid_tunnel_tools
    depends_on:
      lucid_api:
        condition: service_started
        required: true
      tor-proxy:
        condition: service_healthy
        required: true
    environment:
      BLOCK_ONION: ""
      BLOCK_RPC_URL: ""
      COOKIE: ""
      HEX: ""
      LUCID_ENV: dev
      MONGO_INITDB_ROOT_PASSWORD: PineIrisCatKiteMilkElf-Alls3em5w*l!
      MONGO_INITDB_ROOT_USERNAME: Pickme_admin
      MONGO_URL: mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin&retryWrites=false
      ONION: ""
      TOR_CONTROL_PASSWORD: ""
    expose:
      - "7000"
    networks:
      lucid_net: null
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - type: volume
        source: onion_state
        target: /run/lucid/onion
        volume: {}
networks:
  lucid_net:
    name: lucid-dev_lucid_net
    driver: bridge
    attachable: true
volumes:
  mongo_data:
    name: lucid-dev_mongo_data
  onion_state:
    name: lucid-dev_onion_state
  tor_data:
    name: lucid-dev_onion_state
x-default-env:
  BLOCK_ONION: ""
  LUCID_ENV: dev
  MONGO_URL: mongodb://lucid:lucid@lucid_mongo:27017/lucid?authSource=admin&retryWrites=false
  ONION: ""
  TOR_CONTROL_PASSWORD: ""
