# Elasticsearch 8.11.0 Configuration for Lucid Blockchain System
# Database Cluster 08: Storage Database
# Aligned with essentials.md - Elasticsearch Service Configuration
# Project Root: /mnt/myssd/Lucid/Lucid/

# ======================== Elasticsearch Configuration =========================

# ---------------------------------- Cluster -----------------------------------

# Cluster name (aligned with essentials.md: lucid-cluster)
cluster.name: lucid-cluster

# Node name (aligned with essentials.md: lucid-node)
node.name: lucid-node

# ----------------------------------- Paths ------------------------------------

# Path to directory where to store the data (aligned with path_plan.md)
path.data: /usr/share/elasticsearch/data

# Path to log files (aligned with path_plan.md)
path.logs: /usr/share/elasticsearch/logs

# ----------------------------------- Memory -----------------------------------

# Lock the memory on startup to prevent swapping
bootstrap.memory_lock: false

# Memory settings for ARM64/Raspberry Pi
# ES_JAVA_OPTS should be set in docker-compose environment
# Recommended: -Xms256m -Xmx256m for Pi

# ---------------------------------- Network -----------------------------------

# Bind to all interfaces for Docker network
network.host: 0.0.0.0

# HTTP port (aligned with essentials.md: 9200)
http.port: 9200

# Transport port for node-to-node communication (aligned with essentials.md: 9300)
transport.port: 9300

# --------------------------------- Discovery ----------------------------------

# Single-node discovery for development/testing
# Aligned with docker-compose.core.yaml configuration
discovery.type: single-node

# For production cluster mode (uncomment when ready):
# discovery.seed_hosts: ["lucid-elasticsearch:9300"]
# cluster.initial_master_nodes: ["lucid-node"]

# ---------------------------------- Gateway -----------------------------------

# Block initial recovery after a full cluster restart until N nodes are started
gateway.recover_after_nodes: 1

# ---------------------------------- Various -----------------------------------

# Require explicit names when deleting indices
action.destructive_requires_name: true

# ---------------------------------- Security ----------------------------------

# Disable X-Pack security for development (enable in production)
# Aligned with docker-compose.core.yaml: xpack.security.enabled=false
xpack.security.enabled: false

# For production with security enabled:
# xpack.security.enabled: true
# xpack.security.enrollment.enabled: true
# xpack.security.http.ssl.enabled: true
# xpack.security.transport.ssl.enabled: true

# ---------------------------------- Monitoring --------------------------------

# Enable monitoring
xpack.monitoring.collection.enabled: true

# Disable other X-Pack features for resource efficiency
xpack.ml.enabled: false
xpack.watcher.enabled: false

# ---------------------------------- Indexing ----------------------------------

# Refresh interval for indices
indices.memory.index_buffer_size: 10%

# Number of shards per index (optimized for single node)
index.number_of_shards: 1

# Number of replicas per index (0 for single node)
index.number_of_replicas: 0

# ----------------------------------- HTTP -------------------------------------

# Enable CORS for development (aligned with essentials.md CORS settings)
http.cors.enabled: true
http.cors.allow-origin: "*"
http.cors.allow-headers: "X-Requested-With,Content-Type,Content-Length,Authorization"

# Max content length
http.max_content_length: 100mb

# Compression
http.compression: true

# ----------------------------------- Search -----------------------------------

# Max result window
index.max_result_window: 10000

# Search thread pool (optimized for ARM64)
thread_pool.search.size: 4
thread_pool.search.queue_size: 1000

# Write thread pool
thread_pool.write.size: 4
thread_pool.write.queue_size: 1000

# Bulk thread pool
thread_pool.bulk.size: 4
thread_pool.bulk.queue_size: 1000

# ---------------------------------- Performance -------------------------------

# Circuit breaker settings (optimized for Pi)
indices.breaker.total.limit: 70%
indices.breaker.request.limit: 40%
indices.breaker.fielddata.limit: 40%

# Query cache
indices.queries.cache.size: 10%

# Field data cache
indices.fielddata.cache.size: 20%

# ---------------------------------- Logging -----------------------------------

# Log level: trace, debug, info, warn, error
logger.level: info

# Slow log settings
index.search.slowlog.threshold.query.warn: 10s
index.search.slowlog.threshold.query.info: 5s
index.search.slowlog.threshold.fetch.warn: 1s
index.search.slowlog.threshold.fetch.info: 500ms

index.indexing.slowlog.threshold.index.warn: 10s
index.indexing.slowlog.threshold.index.info: 5s

# ---------------------------------- Lucid Integration -------------------------

# These indices will be created via API after ES startup:
# - lucid_sessions (aligned with session services)
# - lucid_blocks (aligned with blockchain services)
# - lucid_users (aligned with auth-service)

# Index retention policies (aligned with path_plan.md):
# - Sessions: 90 days
# - Blocks: permanent
# - Users: permanent
# - Logs: 30 days

# Performance targets:
# - Search query latency: <100ms p95
# - Index throughput: >1000 docs/sec
# - Storage efficiency: compression enabled

# ---------------------------------- End of Configuration -----------------