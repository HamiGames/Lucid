openapi: 3.0.3
info:
  title: Lucid RDP Services
  description: Remote Desktop Protocol services for Lucid blockchain system
  version: 1.0.0
  contact:
    name: Lucid Development Team
    email: dev@lucid-blockchain.org
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://rdp.lucid-blockchain.org/api/v1
    description: Production RDP services server
  - url: https://rdp-dev.lucid-blockchain.org/api/v1
    description: Development RDP services server
  - url: http://localhost:8090/api/v1
    description: Local development server

security:
  - BearerAuth: []

paths:
  # RDP Server Management
  /servers:
    get:
      tags: [Servers]
      summary: List RDP servers
      description: Returns a paginated list of RDP servers for the authenticated user
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, starting, stopping, error]
        - name: sort
          in: query
          schema:
            type: string
            enum: [created_at, updated_at, name, port]
            default: created_at
        - name: order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: RDP servers retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPServerListResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags: [Servers]
      summary: Create RDP server
      description: Creates a new RDP server instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDPServerCreateRequest'
      responses:
        '201':
          description: RDP server created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPServerResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /servers/{server_id}:
    get:
      tags: [Servers]
      summary: Get RDP server details
      description: Returns detailed information about a specific RDP server
      parameters:
        - name: server_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: RDP server details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPServerResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags: [Servers]
      summary: Update RDP server
      description: Updates the configuration of an existing RDP server
      parameters:
        - name: server_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDPServerUpdateRequest'
      responses:
        '200':
          description: RDP server updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPServerResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags: [Servers]
      summary: Delete RDP server
      description: Deletes an existing RDP server and all associated data
      parameters:
        - name: server_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: RDP server deleted successfully
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # RDP Server Control
  /servers/{server_id}/start:
    post:
      tags: [Servers]
      summary: Start RDP server
      description: Starts the specified RDP server
      parameters:
        - name: server_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: RDP server started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPServerResponse'
        '400':
          description: Server already running or invalid state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /servers/{server_id}/stop:
    post:
      tags: [Servers]
      summary: Stop RDP server
      description: Stops the specified RDP server
      parameters:
        - name: server_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: RDP server stopped successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPServerResponse'
        '400':
          description: Server already stopped or invalid state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /servers/{server_id}/restart:
    post:
      tags: [Servers]
      summary: Restart RDP server
      description: Restarts the specified RDP server
      parameters:
        - name: server_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: RDP server restarted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPServerResponse'
        '400':
          description: Invalid server state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Session Management
  /sessions:
    get:
      tags: [Sessions]
      summary: List RDP sessions
      description: Returns a paginated list of RDP sessions
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: server_id
          in: query
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          schema:
            type: string
            enum: [active, disconnected, error]
        - name: sort
          in: query
          schema:
            type: string
            enum: [created_at, updated_at, username]
            default: created_at
        - name: order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: RDP sessions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPSessionListResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags: [Sessions]
      summary: Create RDP session
      description: Creates a new RDP session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDPSessionCreateRequest'
      responses:
        '201':
          description: RDP session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPSessionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sessions/{session_id}:
    get:
      tags: [Sessions]
      summary: Get RDP session details
      description: Returns detailed information about a specific RDP session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: RDP session details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPSessionResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags: [Sessions]
      summary: Delete RDP session
      description: Deletes an existing RDP session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: RDP session deleted successfully
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Connection Management
  /sessions/{session_id}/connect:
    post:
      tags: [Sessions]
      summary: Connect to RDP session
      description: Establishes a connection to the specified RDP session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RDPConnectionRequest'
      responses:
        '200':
          description: RDP connection established successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPConnectionResponse'
        '400':
          description: Invalid connection data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sessions/{session_id}/disconnect:
    post:
      tags: [Sessions]
      summary: Disconnect from RDP session
      description: Disconnects from the specified RDP session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: RDP session disconnected successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDPSessionResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: RDP session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Resource Monitoring
  /monitoring/resources:
    get:
      tags: [Monitoring]
      summary: Get resource monitoring data
      description: Returns current resource utilization data for RDP servers
      parameters:
        - name: server_id
          in: query
          schema:
            type: string
            format: uuid
        - name: time_range
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 1h
      responses:
        '200':
          description: Resource monitoring data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceMonitoringResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /monitoring/sessions:
    get:
      tags: [Monitoring]
      summary: Get session monitoring data
      description: Returns current session statistics and monitoring data
      parameters:
        - name: server_id
          in: query
          schema:
            type: string
            format: uuid
        - name: time_range
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 1h
      responses:
        '200':
          description: Session monitoring data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionMonitoringResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Port Management
  /ports/available:
    get:
      tags: [Ports]
      summary: Get available ports
      description: Returns a list of available RDP ports
      parameters:
        - name: count
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 10
            default: 1
      responses:
        '200':
          description: Available ports retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePortsResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ports/allocate:
    post:
      tags: [Ports]
      summary: Allocate RDP port
      description: Allocates a specific RDP port for a server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortAllocationRequest'
      responses:
        '201':
          description: Port allocated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortAllocationResponse'
        '400':
          description: Invalid port allocation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Port already allocated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # RDP Server Schemas
    RDPServerResponse:
      type: object
      properties:
        server_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [active, inactive, starting, stopping, error]
        port:
          type: integer
          minimum: 13389
          maximum: 14389
        host:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        stopped_at:
          type: string
          format: date-time
        configuration:
          $ref: '#/components/schemas/RDPServerConfiguration'
        resource_usage:
          $ref: '#/components/schemas/ResourceUsage'

    RDPServerCreateRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          maxLength: 1000
        configuration:
          $ref: '#/components/schemas/RDPServerConfiguration'

    RDPServerUpdateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          maxLength: 1000
        configuration:
          $ref: '#/components/schemas/RDPServerConfiguration'

    RDPServerConfiguration:
      type: object
      properties:
        resolution:
          type: string
          enum: [800x600, 1024x768, 1280x720, 1280x1024, 1920x1080, 2560x1440, 3840x2160]
          default: 1920x1080
        color_depth:
          type: integer
          enum: [16, 24, 32]
          default: 24
        audio_enabled:
          type: boolean
          default: true
        clipboard_enabled:
          type: boolean
          default: true
        drive_redirection:
          type: boolean
          default: false
        printer_redirection:
          type: boolean
          default: false
        security_level:
          type: string
          enum: [low, medium, high]
          default: medium
        encryption_enabled:
          type: boolean
          default: true
        compression_enabled:
          type: boolean
          default: true

    RDPServerListResponse:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/RDPServerResponse'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'

    # RDP Session Schemas
    RDPSessionResponse:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
        server_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        username:
          type: string
        status:
          type: string
          enum: [active, disconnected, error]
        connected_at:
          type: string
          format: date-time
        disconnected_at:
          type: string
          format: date-time
        duration:
          type: integer
          description: "Session duration in seconds"
        client_ip:
          type: string
        client_info:
          $ref: '#/components/schemas/ClientInfo'
        bandwidth_usage:
          type: object
          properties:
            bytes_sent:
              type: integer
            bytes_received:
              type: integer
            packets_sent:
              type: integer
            packets_received:
              type: integer

    RDPSessionCreateRequest:
      type: object
      required: [server_id, username]
      properties:
        server_id:
          type: string
          format: uuid
        username:
          type: string
          minLength: 1
          maxLength: 50
        password:
          type: string
        domain:
          type: string
        connection_options:
          $ref: '#/components/schemas/ConnectionOptions'

    RDPSessionListResponse:
      type: object
      properties:
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/RDPSessionResponse'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'

    # Connection Schemas
    RDPConnectionRequest:
      type: object
      required: [username]
      properties:
        username:
          type: string
        password:
          type: string
        domain:
          type: string
        connection_options:
          $ref: '#/components/schemas/ConnectionOptions'

    RDPConnectionResponse:
      type: object
      properties:
        connection_id:
          type: string
          format: uuid
        session_id:
          type: string
          format: uuid
        connection_url:
          type: string
        connection_token:
          type: string
        expires_at:
          type: string
          format: date-time

    ConnectionOptions:
      type: object
      properties:
        resolution:
          type: string
          enum: [800x600, 1024x768, 1280x720, 1280x1024, 1920x1080, 2560x1440, 3840x2160]
        color_depth:
          type: integer
          enum: [16, 24, 32]
        audio_enabled:
          type: boolean
        clipboard_enabled:
          type: boolean
        drive_redirection:
          type: boolean
        printer_redirection:
          type: boolean

    ClientInfo:
      type: object
      properties:
        client_name:
          type: string
        client_version:
          type: string
        operating_system:
          type: string
        browser:
          type: string
        user_agent:
          type: string

    # Monitoring Schemas
    ResourceMonitoringResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        servers:
          type: array
          items:
            $ref: '#/components/schemas/ServerResourceData'

    ServerResourceData:
      type: object
      properties:
        server_id:
          type: string
          format: uuid
        cpu_usage:
          type: number
          minimum: 0
          maximum: 100
        memory_usage:
          type: number
          minimum: 0
          maximum: 100
        disk_usage:
          type: number
          minimum: 0
          maximum: 100
        network_usage:
          type: object
          properties:
            bytes_sent:
              type: integer
            bytes_received:
              type: integer
            packets_sent:
              type: integer
            packets_received:
              type: integer
        active_sessions:
          type: integer
        uptime:
          type: integer
          description: "Server uptime in seconds"

    SessionMonitoringResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        total_sessions:
          type: integer
        active_sessions:
          type: integer
        disconnected_sessions:
          type: integer
        error_sessions:
          type: integer
        average_session_duration:
          type: number
          description: "Average session duration in seconds"
        bandwidth_usage:
          type: object
          properties:
            total_bytes_sent:
              type: integer
            total_bytes_received:
              type: integer
            average_bandwidth:
              type: number

    # Port Management Schemas
    AvailablePortsResponse:
      type: object
      properties:
        available_ports:
          type: array
          items:
            type: integer
        total_available:
          type: integer
        port_range:
          type: object
          properties:
            start:
              type: integer
            end:
              type: integer

    PortAllocationRequest:
      type: object
      required: [server_id]
      properties:
        server_id:
          type: string
          format: uuid
        preferred_port:
          type: integer
          minimum: 13389
          maximum: 14389

    PortAllocationResponse:
      type: object
      properties:
        port:
          type: integer
        server_id:
          type: string
          format: uuid
        allocated_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time

    # Resource Usage Schema
    ResourceUsage:
      type: object
      properties:
        cpu_usage:
          type: number
          minimum: 0
          maximum: 100
        memory_usage:
          type: number
          minimum: 0
          maximum: 100
        disk_usage:
          type: number
          minimum: 0
          maximum: 100
        network_usage:
          type: object
          properties:
            bytes_sent:
              type: integer
            bytes_received:
              type: integer
            packets_sent:
              type: integer
            packets_received:
              type: integer

    # Common Schemas
    PaginationInfo:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        pages:
          type: integer

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: "LUCID_ERR_4001"
            message:
              type: string
              example: "RDP server not found"
            details:
              type: object
              additionalProperties: true
            request_id:
              type: string
              format: uuid
            timestamp:
              type: string
              format: date-time
            service:
              type: string
              example: "rdp-services"
            version:
              type: string
              example: "v1"

tags:
  - name: Servers
    description: RDP server management
  - name: Sessions
    description: RDP session management
  - name: Monitoring
    description: Resource and session monitoring
  - name: Ports
    description: Port allocation and management
