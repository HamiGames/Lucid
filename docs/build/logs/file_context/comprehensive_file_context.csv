File Path,Component Name,Category,Features,Key Components,Description
src/core/config/manager.py,Core Configuration Management,Configuration,Comprehensive Configuration Management: Centralized configuration handling for all Lucid services|Environment-Aware: Supports development staging production and testing environments|Security-First: Built-in encryption key management and security configurations|Component-Specific Configs: Dedicated configuration classes for Database Redis Tor Security and Monitoring|Pydantic Integration: Type-safe configuration validation using Pydantic models|Multiple Sources: Loads from environment variables .env files and configuration files (YAML/JSON)|Service Management: Individual service configurations with validation|Encryption Support: Built-in encryption key generation and management|Global Instance: Singleton pattern for global configuration access,LucidSettings: Main application settings with environment validation|ConfigurationManager: Central configuration manager class|Component-specific config classes: DatabaseConfig RedisConfig TorConfig SecurityConfig MonitoringConfig|Convenience functions for easy access to configurations|Support for both development and production environments,Central configuration management system for the Lucid project providing type-safe environment-aware configuration handling across all services
src/gui/main.py,Main GUI Launcher with Platform Detection,GUI,Platform-Aware Launcher: Automatic platform detection and compatibility checking|Multi-Mode Support: User Admin and Node interface modes with auto-detection|Service Monitoring: Real-time monitoring of backend services with status display|Cross-Platform: Windows Linux and macOS support with platform-specific optimizations|Raspberry Pi Detection: Special handling for ARM-based Raspberry Pi deployments|Resource Monitoring: System resource detection and optimization recommendations|Service Health Checks: Continuous monitoring of MongoDB Redis API and other services|Fallback Mechanisms: Graceful degradation when services are unavailable|Command-Line Interface: Support for command-line arguments and environment variables,PlatformDetector: Comprehensive platform and system detection|ServiceMonitor: Real-time service health monitoring and management|GuiLauncher: Main launcher with mode selection and service routing|GuiMode: Enumeration for different GUI modes (User Admin Node Auto)|Automatic mode detection based on platform resources and environment|Comprehensive error handling and fallback GUI interfaces,Main GUI entry point with intelligent platform detection and service-aware launcher functionality for cross-platform deployment
build/multi-stage/Dockerfile.blockchain,Blockchain Multi-Stage Build,Infrastructure,Multi-Stage Build: Optimized two-stage build process (builder + runtime)|Production-Ready: Comprehensive production configuration with monitoring and security|Multi-Platform: ARM64 (Raspberry Pi) and AMD64 (Development) support|Comprehensive Dependencies: Full blockchain stack including Web3 TronPy StarkNet.py|Advanced Monitoring: OpenTelemetry Prometheus and Jaeger integration|Security-First: Non-root execution minimal attack surface encrypted wallet management|Service Integration: MongoDB Redis and other service dependencies|Health Monitoring: Built-in health checks and service validation|Optimized Runtime: Minimal runtime footprint with only necessary components|Startup Scripts: Comprehensive initialization and health check scripts,Builder Stage: Complete development environment with all build tools and dependencies|Runtime Stage: Minimal production environment with optimized base image|Blockchain Integration: Support for TRON Ethereum and StarkNet networks|Wallet Management: Secure wallet initialization and key management|Service Dependencies: MongoDB and Redis connection validation|Monitoring Stack: Prometheus metrics Jaeger tracing and health endpoints|Security Features: Encrypted storage secure permissions and non-root execution,Multi-stage Docker build configuration for blockchain services optimized for production deployment with comprehensive monitoring and security features
