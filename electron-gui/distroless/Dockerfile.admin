# Lucid Electron-GUI Admin - Distroless Package
# Target Platform: Raspberry Pi (linux/arm64)
# Network: lucid-pi-network (172.20.0.0/16)
# Date: 2025-01-24

# Multi-stage build for distroless admin package
FROM --platform=linux/arm64 node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./
COPY webpack*.js ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY main/ ./main/
COPY renderer/admin/ ./renderer/admin/
COPY renderer/common/ ./renderer/common/
COPY shared/ ./shared/
COPY configs/api-services.conf ./configs/

# Build the application
RUN npm run build:admin

# Create distroless runtime image
FROM --platform=linux/arm64 gcr.io/distroless/nodejs18-debian11

# Set working directory
WORKDIR /app

# Copy built application
COPY --from=builder /app/dist/ ./
COPY --from=builder /app/configs/api-services.conf ./configs/

# Set environment variables
ENV NODE_ENV=production
ENV ELECTRON_GUI_PROFILE=admin
ENV ELECTRON_GUI_NETWORK=lucid-pi-network
ENV ELECTRON_GUI_API_BASE_URL=http://172.20.0.10:8080/api/v1
ENV ELECTRON_GUI_CONFIG_FILE=/app/configs/api-services.conf

# Expose ports (if needed for debugging)
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD ["node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]

# Run the application
CMD ["main.js"]
