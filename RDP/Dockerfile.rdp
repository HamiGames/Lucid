# Multi-stage distroless build for Lucid XRDP Integration
# Step 32: Phase 3 Container Builds - RDP Services
# Aligned with essentials.md: pickme/lucid-rdp-xrdp:latest-arm64, port 3389, IP 172.20.0.22
# BUILD CONTEXT: Project root (build with: docker build -f RDP/Dockerfile.rdp .)

# Stage 1: Builder
FROM --platform=linux/arm64 python:3.11-slim AS builder

# Set build arguments
ARG BUILDPLATFORM
ARG TARGETPLATFORM=linux/arm64
ARG BUILD_DATE
ARG VERSION=1.0.0
ARG GIT_COMMIT=unknown
ARG PYTHON_VERSION=3.11

# Install build dependencies with apt cache mount
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    pkg-config \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /build

# Set pip environment variables for optimization
ENV PIP_NO_CACHE_DIR=1
ENV PIP_PREFER_BINARY=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Upgrade pip to latest version with cache mount
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip wheel setuptools

# Copy requirements first for better layer caching
# BUILD CONTEXT: Project root, so use RDP/ prefix
COPY RDP/requirements.xrdp.txt ./requirements.xrdp.txt

# Install Python dependencies with cache mount and optimizations
RUN --mount=type=cache,target=/root/.cache/pip \
    --mount=type=cache,target=/root/.cache/pip/wheels \
    pip install --user \
    --prefer-binary \
    --no-warn-script-location \
    -r requirements.xrdp.txt

# Copy RDP xrdp source code (build context is project root)
# FIXED: Use RDP/ prefix since build context is project root
COPY RDP/xrdp/ ./xrdp/

# Copy common directory if it exists (FIXED: remove shell command, use explicit COPY)
# Note: If common/ doesn't exist, this COPY will fail, so make it optional by checking first
COPY RDP/common/ ./common/

# Stage 2: Runtime (Distroless)
FROM --platform=linux/arm64 gcr.io/distroless/python3-debian12:nonroot

# Set labels for Phase 3 compliance
LABEL maintainer="Lucid Development Team" \
      description="Lucid XRDP Integration - Phase 3 Distroless Container" \
      version="1.0.0" \
      build_date="${BUILD_DATE}" \
      git_commit="${GIT_COMMIT}" \
      phase="3" \
      cluster="03-rdp-services" \
      service="rdp-xrdp"

# Copy Python packages from builder to distroless location
COPY --from=builder /root/.local /usr/local

# Copy application code
COPY --from=builder /build/xrdp /app/xrdp
COPY --from=builder /build/common /app/common

# Set working directory
WORKDIR /app

# Set Python path and base environment variables
ENV PYTHONPATH=/app:/usr/local/lib/python3.11/site-packages
ENV PATH=/usr/local/bin:$PATH
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Service Configuration (per essentials.md and Network_conig_requirements.md lines 907-955)
ENV SERVICE_NAME=rdp-xrdp
ENV CONTAINER_NAME=lucid-rdp-xrdp
ENV HOSTNAME=lucid-rdp-xrdp

# Port Configuration (per essentials.md line 384-396)
ENV PORT=3389
ENV XRDP_PORT=3389
ENV HOST=0.0.0.0

# Network Configuration (per Network_conig_requirements.md lines 920-936)
ENV RDP_SERVER_MANAGER_URL=http://lucid-rdp-server-manager:8081
ENV API_URL=http://lucid-rdp-xrdp:3389

# Database Configuration (per Network_conig_requirements.md lines 933-935)
ENV MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_rdp?authSource=admin
ENV REDIS_URL=redis://lucid-redis:6379/0

# Health Check Configuration
ENV HEALTHCHECK_PORT=3389

# Project Configuration (per path_plan.md)
ENV PROJECT_ROOT=/mnt/myssd/Lucid/Lucid
ENV PROJECT_NAME=Lucid
ENV PROJECT_VERSION=0.1.0
ENV LUCID_PLATFORM=arm64
ENV LUCID_ENV=production
ENV LUCID_ARCHITECTURE=linux/arm64

# Logging Configuration
ENV LOG_LEVEL=INFO
ENV DEBUG=false
ENV LOG_FORMAT=json

# Network Configuration (per network_defs.md)
ENV LUCID_PI_NETWORK=lucid-pi-network
ENV LUCID_PI_SUBNET=172.20.0.0/16
ENV LUCID_PI_GATEWAY=172.20.0.1

# Use nonroot user (distroless default)
USER 65532:65532

# Health check (aligned with Network_conig_requirements.md line 937-939)
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:3389/health')"]

# Expose port (aligned with essentials.md: port 3389)
EXPOSE 3389

# Start application (aligned with RDP/xrdp/main.py structure)
CMD ["python3", "-m", "uvicorn", "xrdp.main:app", "--host", "0.0.0.0", "--port", "3389"]