# Multi-stage distroless build for Lucid XRDP Integration
# Step 32: Phase 3 Container Builds - RDP Services
# Aligned with essentials.md: pickme/lucid-rdp-xrdp:latest-arm64, port 3389, IP 172.20.0.22
# Network Configuration: lucid-pi-network (172.20.0.0/16)
# Fully aligned with plan/constants/ directory requirements

# Stage 1: Builder
FROM --platform=linux/arm64 python:3.11-slim AS builder

# Set build arguments (aligned with path_plan.md)
ARG BUILDPLATFORM
ARG TARGETPLATFORM=linux/arm64
ARG PYTHON_VERSION=3.11
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# Set environment variables for pip optimization (aligned with path_plan.md)
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100 \
    PIP_PREFER_BINARY=1

# Install build dependencies with apt cache mount (BuildKit optimization)
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    pkg-config \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip to latest version (faster builds, better wheel support for ARM64)
RUN pip install --upgrade pip setuptools wheel

# Set working directory
WORKDIR /build

# Copy requirements first for better layer caching
COPY requirements.xrdp.txt ./requirements.xrdp.txt

# Install Python dependencies with optimizations
# PIP_PREFER_BINARY=1 forces use of pre-built wheels when available (critical for ARM64)
# Cache mount speeds up subsequent builds (BuildKit feature)
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --user --prefer-binary -r requirements.xrdp.txt || \
    pip install --user --prefer-binary -r requirements.xrdp.txt

# Copy source code
COPY xrdp/ ./xrdp/
COPY __init__.py ./__init__.py
COPY common/ ./common/
COPY protocol/ ./protocol/
COPY client/ ./client/
COPY resource-monitor/ ./resource-monitor/
COPY session-controller/ ./session-controller/


# Stage 2: Runtime (Distroless)
FROM --platform=linux/arm64 gcr.io/distroless/python3-debian12

# Copy Python dependencies from builder
COPY --from=builder /root/.local /root/.local

# Copy application code
COPY --from=builder /build/xrdp /app/xrdp
COPY --from=builder /build/__init__.py /app/__init__.py
COPY --from=builder /build/common /app/common
COPY --from=builder /build/protocol /app/protocol
COPY --from=builder /build/client /app/client
COPY --from=builder /build/resource-monitor /app/resource-monitor
COPY --from=builder /build/session-controller /app/session-controller


# Set working directory
WORKDIR /app

# Set core environment variables (aligned with path_plan.md)
ENV PYTHONPATH=/app:/app/xrdp
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Service identification (aligned with essentials.md lines 384-396)
ENV SERVICE_NAME=lucid-rdp-xrdp
ENV CONTAINER_NAME=lucid-rdp-xrdp
ENV HOSTNAME=lucid-rdp-xrdp

# Port configuration (aligned with essentials.md, path_plan.md, Network_conig_requirements.md)
ENV PORT=3389
ENV XRDP_PORT=3389
ENV XRDP_DISPLAY=:10
ENV HOST=0.0.0.0
ENV HEALTHCHECK_PORT=3389

# Network configuration (aligned with Network_conig_requirements.md)
ENV XRDP_HOST=172.20.0.22
ENV API_URL=http://lucid-rdp-xrdp:3389

# Database connections (aligned with Network_conig_requirements.md)
ENV MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid_rdp?authSource=admin
ENV REDIS_URL=redis://lucid-redis:6379/0

# Service dependencies (aligned with Network_conig_requirements.md)
ENV RDP_SERVER_MANAGER_URL=http://lucid-rdp-server-manager:8081

# Project configuration (aligned with path_plan.md)
ENV PROJECT_ROOT=/mnt/myssd/Lucid/Lucid
ENV PROJECT_NAME=Lucid
ENV LUCID_PLATFORM=arm64
ENV LUCID_ARCHITECTURE=linux/arm64
ENV LUCID_ENV=production

# Logging configuration (aligned with path_plan.md)
ENV LOG_LEVEL=INFO
ENV DEBUG=false

# Health check configuration (aligned with Network_conig_requirements.md)
# Note: Uses Python urllib.request (not curl) since distroless images don't have curl
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:3389/health')"]

# Expose port (aligned with essentials.md: port 3389)
EXPOSE 3389

# Set entrypoint (aligned with other session Dockerfiles: xrdp.main pattern)
# FastAPI entrypoint
ENTRYPOINT ["python", "-m", "uvicorn"]

# FastAPI application
CMD ["xrdp.main:app", "--host", "0.0.0.0", "--port", "3389"]
