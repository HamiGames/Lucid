# Multi-stage build for distroless container
# File: blockchain/Dockerfile.manager
# Purpose: Distroless container build for Lucid Block Manager Service
# Build Host: Windows 11 console
# Target Host: Raspberry Pi (via SSH)
# Phase 3: Proper distroless implementation

FROM python:3.11-slim as builder

# Set build arguments
ARG BUILDPLATFORM
ARG TARGETPLATFORM
ARG BUILD_DATE
ARG VERSION=1.0.0
ARG GIT_COMMIT=unknown

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Copy block manager source code
COPY manager/ ./manager/
COPY core/ ./core/
COPY utils/ ./utils/
COPY config/ ./config/

# Production stage - Distroless
FROM gcr.io/distroless/python3-debian12

# Set labels for Phase 3 compliance
LABEL maintainer="Lucid Development Team"
LABEL description="Lucid Block Manager - Phase 3 Distroless Container"
LABEL version="1.0.0"
LABEL build_date="${BUILD_DATE}"
LABEL git_commit="${GIT_COMMIT}"
LABEL phase="3"
LABEL cluster="02-blockchain-core"
LABEL service="block-manager"

# Copy Python packages from builder to distroless location
COPY --from=builder /root/.local /usr/local

# Copy application code
COPY --from=builder /app/manager /app/manager
COPY --from=builder /app/core /app/core
COPY --from=builder /app/utils /app/utils
COPY --from=builder /app/config /app/config

# Set working directory
WORKDIR /app

# Set Python path and environment
ENV PYTHONPATH=/app
ENV PATH=/usr/local/bin:$PATH
ENV SERVICE_NAME=block-manager
ENV PORT=8086
ENV LOG_LEVEL=INFO
ENV BLOCKCHAIN_ENGINE_URL=http://blockchain-engine:8084
ENV BLOCK_STORAGE_PATH=/data/blocks

# Use nonroot user (distroless default)
USER 65532:65532

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/usr/bin/python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8086/health')"]

# Expose ports
EXPOSE 8086

# Start application
CMD ["/usr/bin/python3", "-m", "manager.main"]
