# Multi-stage distroless build for Lucid Blockchain Engine
# Step 32: Phase 2 Container Builds - Core Services
# Aligned with essentials.md: pickme/lucid-blockchain-engine:latest-arm64, port 8084, IP 172.20.0.15

# Stage 1: Builder
FROM --platform=linux/arm64 python:3.11-slim AS builder

# Set build arguments
ARG BUILDPLATFORM
ARG TARGETPLATFORM=linux/arm64
ARG BUILD_DATE
ARG VERSION=1.0.0
ARG GIT_COMMIT=unknown
ARG PYTHON_VERSION=3.11

# Install build dependencies with apt cache mount
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    pkg-config \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Set pip environment variables for optimization
ENV PIP_NO_CACHE_DIR=1
ENV PIP_PREFER_BINARY=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Upgrade pip to latest version
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip wheel setuptools

# Copy requirements first for better layer caching
COPY requirements.txt ./requirements.txt

# Install Python dependencies with cache mount and optimizations
RUN --mount=type=cache,target=/root/.cache/pip \
    --mount=type=cache,target=/root/.cache/pip/wheels \
    pip install --user \
    --prefer-binary \
    --no-warn-script-location \
    -r requirements.txt

# Copy blockchain core source code
COPY core/ ./core/
COPY api/ ./api/
COPY utils/ ./utils/
COPY config/ ./config/

# Stage 2: Runtime (Distroless)
FROM --platform=linux/arm64 gcr.io/distroless/python3-debian12

# Set labels for Phase 3 compliance
LABEL maintainer="Lucid Development Team" \
      description="Lucid Blockchain Engine - Phase 2 Distroless Container" \
      version="1.0.0" \
      build_date="${BUILD_DATE}" \
      git_commit="${GIT_COMMIT}" \
      phase="2" \
      cluster="02-blockchain-core" \
      service="blockchain-engine"

# Copy Python packages from builder to distroless location
COPY --from=builder /root/.local /usr/local

# Copy application code
COPY --from=builder /app/core /app/core
COPY --from=builder /app/api /app/api
COPY --from=builder /app/utils /app/utils
COPY --from=builder /app/config /app/config

# Set working directory
WORKDIR /app

# Set Python path and base environment variables
ENV PYTHONPATH=/app:/usr/local/lib/python3.11/site-packages
ENV PATH=/usr/local/bin:$PATH
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Service Configuration (per essentials.md and Network_conig_requirements.md lines 363-423)
ENV SERVICE_NAME=blockchain-engine
ENV CONTAINER_NAME=lucid-blockchain-engine
ENV HOSTNAME=lucid-blockchain-engine

# Port Configuration
ENV PORT=8084
ENV BLOCKCHAIN_API_PORT=8084
ENV HOST=0.0.0.0

# Network Configuration (per Network_conig_requirements.md lines 379-402)
ENV BLOCKCHAIN_ENGINE_URL=http://lucid-blockchain-engine:8084
ENV BLOCKCHAIN_ENGINE_HOST=172.20.0.15

# Blockchain Configuration (per Network_conig_requirements.md lines 393-399)
ENV BLOCKCHAIN_NETWORK=lucid-mainnet
ENV BLOCKCHAIN_CONSENSUS=PoOT
ENV ANCHORING_ENABLED=true
ENV BLOCK_INTERVAL=10
ENV TRON_NETWORK=mainnet
ENV TRON_RPC_URL=https://api.trongrid.io
ENV ON_SYSTEM_CHAIN_RPC=http://on-chain-distroless:8545

# Database Configuration (per Network_conig_requirements.md lines 400-402)
ENV MONGODB_URI=mongodb://lucid:${MONGODB_PASSWORD}@lucid-mongodb:27017/lucid?authSource=admin
ENV REDIS_URL=redis://lucid-redis:6379/0

# Service Dependencies URLs
ENV API_GATEWAY_URL=http://lucid-api-gateway:8080

# Health Check Configuration
ENV HEALTHCHECK_PORT=8084
ENV HEALTHCHECK_PATH=/health

# Project Configuration (per path_plan.md)
ENV PROJECT_ROOT=/mnt/myssd/Lucid/Lucid
ENV PROJECT_NAME=Lucid
ENV PROJECT_VERSION=0.1.0
ENV LUCID_PLATFORM=arm64
ENV LUCID_ENV=production
ENV LUCID_ARCHITECTURE=linux/arm64

# Logging Configuration
ENV LOG_LEVEL=INFO
ENV DEBUG=false
ENV LOG_FORMAT=json

# Network Configuration (per network_defs.md)
ENV LUCID_PI_NETWORK=lucid-pi-network
ENV LUCID_PI_SUBNET=172.20.0.0/16
ENV LUCID_PI_GATEWAY=172.20.0.1

# Electron-GUI Endpoint (per Network_conig_requirements.md line 423)
ENV ELECTRON_GUI_ENDPOINT=http://172.20.0.15:8084/api/v1

# Use nonroot user (distroless default)
USER 65532:65532

# Health check (aligned with Network_conig_requirements.md: healthcheck_port=8084, healthcheck_path=/health)
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8084/health')"]

# Expose ports (aligned with Network_conig_requirements.md: port 8084)
EXPOSE 8084

# Start application
CMD ["python3", "-m", "api.app.main"]
