# Timelock Governance Service - Distroless Dockerfile
# Multi-stage build for minimal security-focused image

# Build stage
FROM python:3.11-slim as builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.timelock.txt .
RUN pip install --no-cache-dir --user -r requirements.timelock.txt

# Copy timelock service code
COPY timelock.py .
COPY __init__.py .

# Runtime stage - Distroless
FROM gcr.io/distroless/python3-debian11

# Copy Python dependencies from builder
COPY --from=builder /root/.local /root/.local

# Copy application code
COPY --from=builder /app/timelock.py /app/timelock.py
COPY --from=builder /app/__init__.py /app/__init__.py

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONPATH=/app:/root/.local/lib/python3.11/site-packages
ENV PYTHONUNBUFFERED=1
ENV LUCID_TIMELOCK_OUTPUT_DIR=/data/timelock

# Create data directory with proper permissions
USER 65532:65532
RUN mkdir -p /data/timelock

# Expose port (if needed for API)
EXPOSE 8085

# Run timelock service
ENTRYPOINT ["python", "timelock.py"]
