# Session Chunker Dockerfile - Distroless
# LUCID-STRICT Layer 1 Core Infrastructure
# Multi-platform build for Pi 5 ARM64

# syntax=docker/dockerfile:1.7
FROM --platform=$TARGETPLATFORM python:3.11-slim AS builder

# Build environment
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libzstd-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install Python dependencies
COPY sessions/core/requirements.chunker.txt /tmp/
RUN pip install --no-cache-dir -r /tmp/requirements.chunker.txt

# Copy application code
COPY sessions/core/chunker.py /app/
COPY sessions/core/__init__.py /app/

# Create storage directory
RUN mkdir -p /data/chunks && chmod 755 /data/chunks

# Stage 2: Distroless runtime
FROM --platform=$TARGETPLATFORM gcr.io/distroless/python3-debian12:latest

# Copy Python installation and packages from builder
COPY --from=builder /usr/local/lib/python3.11 /usr/local/lib/python3.11
COPY --from=builder /usr/local/bin/python3.11 /usr/local/bin/python3.11

# Copy required dynamic libraries
COPY --from=builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=builder /lib*/ld-linux-*.so.2 /lib64/

# Copy CA certificates
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Copy application
COPY --from=builder /app /app

# Runtime environment
ENV PYTHONPATH=/app \
    CHUNK_STORAGE_PATH=/data/chunks

# Create storage directory
VOLUME ["/data/chunks", "/tmp/chunker"]

# Expose port
EXPOSE 8081

# Set working directory
WORKDIR /app

# Run service
ENTRYPOINT ["/usr/local/bin/python3.11", "/app/chunker.py"]