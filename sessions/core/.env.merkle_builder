# Merkle Tree Builder Configuration
# LUCID-STRICT Layer 1 Core Infrastructure
# Generated: 2025-10-04

# Merkle Tree Parameters
HASH_ALGORITHM=BLAKE3                     # Hash algorithm for Merkle tree
TREE_MAX_DEPTH=20                        # Maximum tree depth
LEAF_BATCH_SIZE=1000                     # Leaves processed per batch
PROOF_CACHE_SIZE=10000                   # Proof cache size

# Storage Configuration
TREE_STORAGE_BACKEND=mongodb             # Tree metadata storage
TREE_SERIALIZATION_FORMAT=binary        # Tree serialization format
TREE_PERSISTENCE_ENABLED=true            # Enable tree persistence

# Performance Configuration
CONCURRENT_TREE_BUILDS=2                 # Concurrent tree building
MEMORY_EFFICIENT_MODE=true               # Memory efficient for Pi
PROCESSING_THREADS=2                    # Processing thread count

# Integrity Configuration
PROOF_VERIFICATION_ENABLED=true         # Enable proof verification
INTEGRITY_CHECK_ENABLED=true             # Enable integrity checking
VALIDATION_ON_BUILD=true                # Validate tree during build

# Pi 5 Hardware Optimization
PI_OPTIMIZATION_ENABLED=true             # Enable Pi 5 optimizations
MEMORY_LIMIT_MB=512                     # Memory usage limit
DISK_CACHE_SIZE_MB=128                  # Disk cache size

# Service Configuration
MERKLE_SERVICE_PORT=8083                # Service port
HEALTH_CHECK_INTERVAL=30                # Health check interval
LOG_LEVEL=INFO                          # Logging level