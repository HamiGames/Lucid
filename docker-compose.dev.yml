# Path: docker-compose.dev.yml
# Development Docker Compose file for Lucid project
# Optimized for development with hot reload, debugging, and local volume mounts
# Enhanced for Step 50: Local Development Deployment requirements

version: '3.8'

services:
  # MongoDB Database (Development)
  lucid-mongodb-dev:
    image: mongo:7.0
    container_name: lucid-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${LUCID_MONGODB_ROOT_USERNAME:-lucid_dev}
      MONGO_INITDB_ROOT_PASSWORD: ${LUCID_MONGODB_ROOT_PASSWORD:-lucid_dev_password}
      MONGO_INITDB_DATABASE: ${LUCID_MONGODB_DATABASE:-lucid_dev}
    ports:
      - "27017:27017"
    volumes:
      - lucid_mongodb_dev_data:/data/db
      - ./database/init_collections.js:/docker-entrypoint-initdb.d/init_collections.js:ro
    networks:
      - lucid-dev-network
    command: ["mongod", "--bind_ip_all", "--logpath", "/var/log/mongodb/mongod.log"]

  # Redis Cache (Development)
  lucid-redis-dev:
    image: redis:7-alpine
    container_name: lucid-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - lucid_redis_dev_data:/data
    networks:
      - lucid-dev-network
    command: ["redis-server", "--appendonly", "yes"]

  # Tor Service (Development)
  lucid-tor-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/tor:${LUCID_TAG:-latest}
    container_name: lucid-tor-dev
    restart: unless-stopped
    ports:
      - "9050:9050"  # SOCKS proxy
      - "9051:9051"  # Control port
    volumes:
      - lucid_tor_dev_data:/var/lib/tor
      - ./02-network-security/tor/torrc:/etc/tor/torrc:ro
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev

  # API Gateway (Development with hot reload)
  lucid-api-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/api:${LUCID_TAG:-latest}
    container_name: lucid-api-dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_REDIS_URL=redis://lucid-redis-dev:6379
      - LUCID_TOR_SOCKS_URL=socks5://lucid-tor-dev:9050
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
      - LUCID_RELOAD=true
    volumes:
      - ./03-api-gateway:/app:ro  # Read-only mount for development
      - lucid_api_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev
      - lucid-redis-dev
      - lucid-tor-dev
    command: ["python", "-m", "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Blockchain Service (Development)
  lucid-blockchain-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/blockchain:${LUCID_TAG:-latest}
    container_name: lucid-blockchain-dev
    restart: unless-stopped
    ports:
      - "8545:8545"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_TRON_NETWORK=shasta  # Use testnet for development
      - LUCID_USDT_TRC20_ADDRESS=TG3XXyExBkPp9nzdajDZsozEu4BkaSJozs
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./blockchain:/app:ro
      - lucid_blockchain_dev_data:/app/data
      - lucid_blockchain_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev

  # RDP Service (Development)
  lucid-rdp-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/rdp:${LUCID_TAG:-latest}
    container_name: lucid-rdp-dev
    restart: unless-stopped
    ports:
      - "3389:3389"
      - "3350:3350"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_XRDP_DISPLAY=:10
      - LUCID_FFMPEG_PATH=/usr/bin/ffmpeg
      - LUCID_HARDWARE_ACCELERATION=false  # Disable for development
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./RDP:/app:ro
      - lucid_rdp_dev_sessions:/app/sessions
      - lucid_rdp_dev_recordings:/app/recordings
      - lucid_rdp_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev
    privileged: true

  # Session Management Service (Development)
  lucid-sessions-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/sessions:${LUCID_TAG:-latest}
    container_name: lucid-sessions-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_REDIS_URL=redis://lucid-redis-dev:6379
      - LUCID_API_URL=http://lucid-api-dev:8000
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
      - LUCID_RELOAD=true
    volumes:
      - ./sessions:/app:ro
      - lucid_sessions_dev_data:/app/data
      - lucid_sessions_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev
      - lucid-redis-dev
      - lucid-api-dev
    command: ["python", "-m", "uvicorn", "sessions.main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]

  # Storage Service (Development)
  lucid-storage-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/storage:${LUCID_TAG:-latest}
    container_name: lucid-storage-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_STORAGE_ROOT=/app/storage
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./storage:/app:ro
      - lucid_storage_dev_data:/app/storage
      - lucid_storage_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev

  # Database Service (Development)
  lucid-database-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/database:${LUCID_TAG:-latest}
    container_name: lucid-database-dev
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./database:/app:ro
      - lucid_database_dev_backups:/app/backups
      - lucid_database_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev

  # VM Management Service (Development)
  lucid-vm-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/vm:${LUCID_TAG:-latest}
    container_name: lucid-vm-dev
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./vm:/app:ro
      - lucid_vm_dev_data:/app/data
      - lucid_vm_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev

  # GUI Service (Development)
  lucid-gui-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/gui:${LUCID_TAG:-latest}
    container_name: lucid-gui-dev
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      - LUCID_API_URL=http://lucid-api-dev:8000
      - LUCID_DISPLAY=${DISPLAY:-:0}
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      - ./gui:/app:ro
      - lucid_gui_dev_data:/app/data
      - lucid_gui_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-api-dev

  # Node Service (Development)
  lucid-node-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/node:${LUCID_TAG:-latest}
    container_name: lucid-node-dev
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_NODE_ID=${LUCID_NODE_ID:-dev-node-001}
      - LUCID_CONSENSUS_API_URL=http://lucid-api-dev:8000
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./node:/app:ro
      - lucid_node_dev_data:/app/data
      - lucid_node_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev
      - lucid-api-dev

  # Authentication Service (Development)
  lucid-auth-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/auth:${LUCID_TAG:-latest}
    container_name: lucid-auth-dev
    restart: unless-stopped
    ports:
      - "8089:8089"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_REDIS_URL=redis://lucid-redis-dev:6379
      - LUCID_JWT_SECRET=${LUCID_JWT_SECRET:-dev-secret-key}
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./auth:/app:ro
      - lucid_auth_dev_data:/app/data
      - lucid_auth_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev
      - lucid-redis-dev

  # Blockchain Engine (Development)
  lucid-blockchain-engine-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/blockchain-engine:${LUCID_TAG:-latest}
    container_name: lucid-blockchain-engine-dev
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_BLOCKCHAIN_NETWORK=lucid_blocks
      - LUCID_CONSENSUS_ALGORITHM=PoOT
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./blockchain:/app:ro
      - lucid_blockchain_dev_data:/app/data
      - lucid_blockchain_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev

  # Session Anchoring Service (Development)
  lucid-session-anchoring-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/session-anchoring:${LUCID_TAG:-latest}
    container_name: lucid-session-anchoring-dev
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_BLOCKCHAIN_ENGINE_URL=http://lucid-blockchain-engine-dev:8084
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./blockchain:/app:ro
      - lucid_anchoring_dev_data:/app/data
      - lucid_anchoring_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev
      - lucid-blockchain-engine-dev

  # Block Manager Service (Development)
  lucid-block-manager-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/block-manager:${LUCID_TAG:-latest}
    container_name: lucid-block-manager-dev
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_BLOCKCHAIN_ENGINE_URL=http://lucid-blockchain-engine-dev:8084
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./blockchain:/app:ro
      - lucid_block_manager_dev_data:/app/data
      - lucid_block_manager_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev
      - lucid-blockchain-engine-dev

  # Data Chain Service (Development)
  lucid-data-chain-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/data-chain:${LUCID_TAG:-latest}
    container_name: lucid-data-chain-dev
    restart: unless-stopped
    ports:
      - "8087:8087"
    environment:
      - LUCID_MONGODB_URL=mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/lucid_dev?authSource=admin
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./blockchain:/app:ro
      - lucid_data_chain_dev_data:/app/data
      - lucid_data_chain_dev_logs:/app/logs
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev

  # Service Mesh Controller (Development)
  lucid-service-mesh-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/service-mesh:${LUCID_TAG:-latest}
    container_name: lucid-service-mesh-dev
    restart: unless-stopped
    ports:
      - "8500:8500"
    environment:
      - LUCID_SERVICE_DISCOVERY_ENABLED=true
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./infrastructure/service-mesh:/app:ro
      - lucid_mesh_dev_data:/app/data
      - lucid_mesh_dev_logs:/app/logs
    networks:
      - lucid-dev-network

  # TRON Client Service (Development - Isolated)
  lucid-tron-client-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/tron-client:${LUCID_TAG:-latest}
    container_name: lucid-tron-client-dev
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - LUCID_TRON_NETWORK=shasta
      - LUCID_TRON_API_URL=https://api.shasta.trongrid.io
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./payment-systems/tron:/app:ro
      - lucid_tron_dev_data:/app/data
      - lucid_tron_dev_logs:/app/logs
    networks:
      - lucid-payment-network
    isolation: true

  # Payout Router Service (Development - Isolated)
  lucid-payout-router-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/payout-router:${LUCID_TAG:-latest}
    container_name: lucid-payout-router-dev
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - LUCID_TRON_CLIENT_URL=http://lucid-tron-client-dev:8085
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./payment-systems/tron:/app:ro
      - lucid_payout_dev_data:/app/data
      - lucid_payout_dev_logs:/app/logs
    networks:
      - lucid-payment-network
    depends_on:
      - lucid-tron-client-dev

  # Wallet Manager Service (Development - Isolated)
  lucid-wallet-manager-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/wallet-manager:${LUCID_TAG:-latest}
    container_name: lucid-wallet-manager-dev
    restart: unless-stopped
    ports:
      - "8087:8087"
    environment:
      - LUCID_TRON_CLIENT_URL=http://lucid-tron-client-dev:8085
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./payment-systems/tron:/app:ro
      - lucid_wallet_dev_data:/app/data
      - lucid_wallet_dev_logs:/app/logs
    networks:
      - lucid-payment-network
    depends_on:
      - lucid-tron-client-dev

  # USDT Manager Service (Development - Isolated)
  lucid-usdt-manager-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/usdt-manager:${LUCID_TAG:-latest}
    container_name: lucid-usdt-manager-dev
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment:
      - LUCID_TRON_CLIENT_URL=http://lucid-tron-client-dev:8085
      - LUCID_USDT_TRC20_ADDRESS=TG3XXyExBkPp9nzdajDZsozEu4BkaSJozs
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./payment-systems/tron:/app:ro
      - lucid_usdt_dev_data:/app/data
      - lucid_usdt_dev_logs:/app/logs
    networks:
      - lucid-payment-network
    depends_on:
      - lucid-tron-client-dev

  # TRX Staking Service (Development - Isolated)
  lucid-trx-staking-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/trx-staking:${LUCID_TAG:-latest}
    container_name: lucid-trx-staking-dev
    restart: unless-stopped
    ports:
      - "8089:8089"
    environment:
      - LUCID_TRON_CLIENT_URL=http://lucid-tron-client-dev:8085
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./payment-systems/tron:/app:ro
      - lucid_staking_dev_data:/app/data
      - lucid_staking_dev_logs:/app/logs
    networks:
      - lucid-payment-network
    depends_on:
      - lucid-tron-client-dev

  # Payment Gateway Service (Development - Isolated)
  lucid-payment-gateway-dev:
    image: ${LUCID_REGISTRY:-ghcr.io}/${LUCID_IMAGE_NAME:-HamiGames/Lucid}/payment-gateway:${LUCID_TAG:-latest}
    container_name: lucid-payment-gateway-dev
    restart: unless-stopped
    ports:
      - "8090:8090"
    environment:
      - LUCID_TRON_CLIENT_URL=http://lucid-tron-client-dev:8085
      - LUCID_DEBUG=true
      - LUCID_LOG_LEVEL=DEBUG
    volumes:
      - ./payment-systems/tron:/app:ro
      - lucid_payment_gateway_dev_data:/app/data
      - lucid_payment_gateway_dev_logs:/app/logs
    networks:
      - lucid-payment-network
    depends_on:
      - lucid-tron-client-dev

  # Development Tools
  lucid-dev-tools:
    image: python:3.11-slim
    container_name: lucid-dev-tools
    restart: "no"
    volumes:
      - ./:/app
      - lucid_dev_tools_cache:/root/.cache
    networks:
      - lucid-dev-network
    working_dir: /app
    command: ["tail", "-f", "/dev/null"]  # Keep container running for manual access

  # MongoDB Admin (Development)
  lucid-mongo-admin:
    image: mongo-express:latest
    container_name: lucid-mongo-admin
    restart: unless-stopped
    ports:
      - "8086:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${LUCID_MONGODB_ROOT_USERNAME:-lucid_dev}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${LUCID_MONGODB_ROOT_PASSWORD:-lucid_dev_password}
      ME_CONFIG_MONGODB_URL: mongodb://lucid_dev:lucid_dev_password@lucid-mongodb-dev:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - lucid-dev-network
    depends_on:
      - lucid-mongodb-dev

# Networks
networks:
  lucid-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
  
  lucid-payment-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16
    internal: true  # Isolated network for TRON payment services

# Volumes (Development)
volumes:
  # Database volumes
  lucid_mongodb_dev_data:
    driver: local
  lucid_redis_dev_data:
    driver: local
  
  # Service volumes
  lucid_tor_dev_data:
    driver: local
  
  # Application data volumes
  lucid_api_dev_logs:
    driver: local
  lucid_blockchain_dev_data:
    driver: local
  lucid_blockchain_dev_logs:
    driver: local
  lucid_rdp_dev_sessions:
    driver: local
  lucid_rdp_dev_recordings:
    driver: local
  lucid_rdp_dev_logs:
    driver: local
  lucid_sessions_dev_data:
    driver: local
  lucid_sessions_dev_logs:
    driver: local
  lucid_storage_dev_data:
    driver: local
  lucid_storage_dev_logs:
    driver: local
  lucid_database_dev_backups:
    driver: local
  lucid_database_dev_logs:
    driver: local
  lucid_vm_dev_data:
    driver: local
  lucid_vm_dev_logs:
    driver: local
  lucid_gui_dev_data:
    driver: local
  lucid_gui_dev_logs:
    driver: local
  lucid_node_dev_data:
    driver: local
  lucid_node_dev_logs:
    driver: local
  
  # Development tools
  lucid_dev_tools_cache:
    driver: local
  
  # Authentication service volumes
  lucid_auth_dev_data:
    driver: local
  lucid_auth_dev_logs:
    driver: local
  
  # Blockchain service volumes
  lucid_blockchain_dev_data:
    driver: local
  lucid_blockchain_dev_logs:
    driver: local
  lucid_anchoring_dev_data:
    driver: local
  lucid_anchoring_dev_logs:
    driver: local
  lucid_block_manager_dev_data:
    driver: local
  lucid_block_manager_dev_logs:
    driver: local
  lucid_data_chain_dev_data:
    driver: local
  lucid_data_chain_dev_logs:
    driver: local
  
  # Service mesh volumes
  lucid_mesh_dev_data:
    driver: local
  lucid_mesh_dev_logs:
    driver: local
  
  # TRON payment service volumes (isolated)
  lucid_tron_dev_data:
    driver: local
  lucid_tron_dev_logs:
    driver: local
  lucid_payout_dev_data:
    driver: local
  lucid_payout_dev_logs:
    driver: local
  lucid_wallet_dev_data:
    driver: local
  lucid_wallet_dev_logs:
    driver: local
  lucid_usdt_dev_data:
    driver: local
  lucid_usdt_dev_logs:
    driver: local
  lucid_staking_dev_data:
    driver: local
  lucid_staking_dev_logs:
    driver: local
  lucid_payment_gateway_dev_data:
    driver: local
  lucid_payment_gateway_dev_logs:
    driver: local
