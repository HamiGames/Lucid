# LUCID CONTRACT DEPLOYMENT - SPEC-4 Layer 2 Service Integration (Distroless)
# Professional smart contract deployment for Pi deployment with distroless security
# Multi-platform build for ARM64 Pi and AMD64 development

# syntax=docker/dockerfile:1.7
FROM python:3.11-slim AS contract-deployment-builder

# Metadata for professional container management
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Contract Deployment service for Lucid Layer 2 Service Integration (Distroless)" \
      org.lucid.plane="chain" \
      org.lucid.service="contract-deployment" \
      org.lucid.layer="2" \
      org.lucid.expose="8090"

# Build-time environment for dependency installation
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies and create user
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        ca-certificates \
        netcat-traditional \
        jq \
        gosu \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && groupadd --gid 1000 lucid \
    && useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home lucid

# Set up application directory
WORKDIR /app
RUN chown -R lucid:lucid /app

# Install contract deployment Python dependencies
RUN pip install --no-cache-dir \
        "uvicorn[standard]>=0.24.0" \
        "fastapi>=0.104.0" \
        "pydantic>=2.0.0" \
        "httpx>=0.25.0" \
        "motor>=3.3.0" \
        "pymongo>=4.5.0" \
        "tronpy>=0.4.0" \
        "structlog>=23.2.0" \
        "python-dotenv>=1.0.0"

# Copy application code
COPY blockchain/deployment/ /app/blockchain/deployment/
COPY blockchain/ /app/blockchain/

# Create contract deployment directories
RUN mkdir -p /data/contracts /data/logs /tmp/deployment \
    && chown -R lucid:lucid /data /tmp/deployment

# Create non-root user for runtime
RUN adduser --disabled-password --gecos '' deploy_user && \
    chown -R deploy_user:deploy_user /app /data /tmp/deployment

# Stage 2: Distroless runtime with Python and contract deployment dependencies
FROM gcr.io/distroless/python3-debian12:nonroot

# Metadata for runtime container
LABEL maintainer="Lucid Development Team" \
      version="1.0.0-distroless" \
      description="Contract Deployment service for Lucid Layer 2 Service Integration (Distroless Runtime)" \
      org.lucid.plane="chain" \
      org.lucid.service="contract-deployment" \
      org.lucid.layer="2" \
      org.lucid.expose="8090"

# Copy Python installation and packages from builder
COPY --from=contract-deployment-builder /usr/local/lib/python3.11 /usr/local/lib/python3.11
COPY --from=contract-deployment-builder /usr/local/bin/python3.11 /usr/local/bin/python3.11
COPY --from=contract-deployment-builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn

# Copy system dependencies for contract deployment operations
COPY --from=contract-deployment-builder /usr/bin/curl /usr/bin/curl
COPY --from=contract-deployment-builder /bin/nc /bin/nc
COPY --from=contract-deployment-builder /usr/bin/jq /usr/bin/jq
COPY --from=contract-deployment-builder /usr/sbin/gosu /usr/sbin/gosu

# Copy required dynamic libraries (architecture-specific)
COPY --from=contract-deployment-builder /lib/*-linux-*/libc.so.6 /lib/
COPY --from=contract-deployment-builder /lib/*-linux-*/libssl.so.3 /lib/
COPY --from=contract-deployment-builder /lib/*-linux-*/libcrypto.so.3 /lib/
COPY --from=contract-deployment-builder /lib/*-linux-*/libz.so.1 /lib/
COPY --from=contract-deployment-builder /lib/*-linux-*/liblzma.so.5 /lib/
COPY --from=contract-deployment-builder /lib/*-linux-*/libzstd.so.1 /lib/
COPY --from=contract-deployment-builder /lib*/ld-linux-*.so.2 /lib64/

# Copy user and group information
COPY --from=contract-deployment-builder /etc/passwd /etc/passwd
COPY --from=contract-deployment-builder /etc/group /etc/group

# Copy CA certificates for blockchain network communication
COPY --from=contract-deployment-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Copy application with proper ownership
COPY --from=contract-deployment-builder --chown=deploy_user:deploy_user /app /app
COPY --from=contract-deployment-builder --chown=deploy_user:deploy_user /data /data
COPY --from=contract-deployment-builder --chown=deploy_user:deploy_user /tmp/deployment /tmp/deployment

# Runtime environment for contract deployment service
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    TRON_NETWORK=shasta \
    TRON_RPC_URL=https://api.shasta.trongrid.io \
    CONTRACT_ARTIFACTS_PATH=/data/contracts \
    DEPLOYMENT_LOG_PATH=/data/logs

# Security and runtime configuration
EXPOSE 8090
USER deploy_user
WORKDIR /app

# Default command for contract deployment service
ENTRYPOINT ["/usr/local/bin/python3.11", "/app/blockchain/deployment/contract_deployment.py"]
