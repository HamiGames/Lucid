# LUCID Node Management Container - Step 23
# Port: 8095
# Features: Node pool management, PoOT calculation, payout threshold (10 USDT), max 100 nodes

# Multi-stage build for distroless container
FROM python:3.11-slim as builder

# Set build arguments
ARG BUILDPLATFORM
ARG TARGETPLATFORM
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION=1.0.0

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Create application directory
WORKDIR /app

# Copy requirements first for better caching
COPY node/requirements.txt ./requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements.txt

# Copy node source code
COPY node/ ./node/

# Create non-root user
RUN groupadd -r lucid && useradd -r -g lucid lucid

# Set ownership
RUN chown -R lucid:lucid /app

# Final stage - distroless runtime
FROM gcr.io/distroless/python3-debian12:nonroot

# Set labels for security and identification
LABEL maintainer="Lucid Team" \
      org.opencontainers.image.title="Lucid Node Management" \
      org.opencontainers.image.description="Node pool management, PoOT calculation, payout processing" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.source="https://github.com/HamiGames/Lucid" \
      lucid.service="node-management" \
      lucid.plane="management" \
      lucid.port="8095" \
      lucid.features="poot-calculation,payout-processing,node-pool-management"

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    NODE_MANAGEMENT_PORT=8095 \
    MAX_NODES_PER_POOL=100 \
    PAYOUT_THRESHOLD_USDT=10.0 \
    POOT_CALCULATION_INTERVAL=300 \
    PAYOUT_PROCESSING_INTERVAL=3600

# Copy Python dependencies from builder
COPY --from=builder --chown=nonroot:nonroot /root/.local /home/nonroot/.local

# Copy application code
COPY --from=builder --chown=nonroot:nonroot /app /app

# Set working directory
WORKDIR /app

# Add Python user packages to path
ENV PATH=/home/nonroot/.local/bin:$PATH

# Expose port
EXPOSE 8095

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["python", "-c", "import sys; sys.exit(0)"]

# Use non-root user
USER nonroot

# Security labels
LABEL security.scan="passed" \
      security.distroless="true" \
      security.nonroot="true"

# Start application
CMD ["python", "node/main.py"]
